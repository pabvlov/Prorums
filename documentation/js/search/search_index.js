var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Advertisement.html",[0,0.437,1,2.576]],["body/interfaces/Advertisement.html",[0,0.662,1,5.182,2,1.799,3,0.288,4,0.255,5,0.255,6,4.809,7,0.463,8,1.045,9,1.645,10,1.303,11,0.681,12,0.018,13,1.758,14,0.288,15,0.016,16,0.016]],["title/components/AdvertisementsComponent.html",[17,0.495,18,1.078]],["body/components/AdvertisementsComponent.html",[3,0.206,4,0.182,5,0.182,7,0.332,12,0.019,14,0.206,15,0.013,16,0.013,17,0.802,18,1.862,19,1.801,20,1.423,21,1.423,22,1.423,23,1.423,24,3.444,25,2.097,26,2.023,27,1.354,28,2.426,29,2.303,30,5.334,31,1.801,32,5.994,33,1.801,34,5.334,35,1.481,36,2.385,37,1.664,38,1.28,39,4.01,40,4.01,41,1.061,42,1.991,43,0.603,44,0.673,45,0.474,46,5.334,47,4.582,48,4.582,49,4.582,50,4.582,51,4.582,52,4.582,53,4.582,54,4.582,55,4.582,56,4.582,57,4.582,58,4.582,59,4.582,60,4.582,61,4.582,62,4.582,63,4.582,64,4.582,65,4.582,66,4.582,67,4.582,68,4.582,69,4.582,70,1.965,71,2.386,72,1.576,73,3.072,74,1.423,75,1.893,76,1.893,77,1.169,78,2.267,79,1.423,80,1.118,81,1.423,82,1.169,83,1.423,84,1.169,85,1.423,86,1.169,87,1.423,88,1.169,89,1.423,90,1.169,91,1.423,92,1.061,93,1.423,94,1.113,95,1.423,96,1.113,97,1.423,98,1.113,99,1.423,100,1.113,101,1.423,102,1.169,103,1.423,104,1.169,105,1.423,106,1.113,107,1.423,108,1.113,109,1.01,110,1.354,111,1.113,112,1.354,113,1.423]],["title/components/AppComponent.html",[17,0.495,82,1.078]],["body/components/AppComponent.html",[3,0.153,4,0.136,5,0.136,7,0.247,8,0.691,10,0.558,11,0.309,12,0.019,14,0.153,15,0.011,16,0.011,17,0.685,18,0.871,19,1.467,20,1.06,21,1.06,22,1.06,23,1.06,25,1.708,26,1.729,27,1.009,28,2.342,29,2.219,31,1.467,33,1.467,35,1.206,36,2.099,38,1.349,41,1.149,42,1.912,43,0.77,44,0.502,45,0.353,71,3.047,72,2.591,74,1.06,75,1.542,76,1.542,77,0.871,78,1.995,79,1.06,80,0.956,81,1.06,82,1.639,83,1.06,84,0.871,85,1.06,86,0.871,87,1.06,88,0.871,89,1.06,90,0.871,91,1.06,92,0.79,93,1.06,94,0.83,95,1.06,96,0.83,97,1.06,98,0.83,99,1.06,100,0.83,101,1.06,102,0.871,103,1.06,104,0.871,105,1.06,106,0.83,107,1.06,108,0.83,109,0.753,110,1.009,111,1.206,112,1.009,113,1.06,114,2.567,115,2.585,116,5.121,117,4.346,118,5.121,119,5.974,120,2.988,121,2.988,122,1.542,123,1.206,124,4.346,125,2.988,126,3.027,127,2.988,128,2.289,129,2.988,130,2.988,131,2.567,132,2.289,133,2.567,134,6.592,135,2.988,136,1.382,137,2.988,138,1.307,139,2.988,140,5.121,141,1.66,142,5.121,143,2.929,144,4.346,145,2.988,146,2.13,147,2.988,148,2.988,149,1.492,150,2.988,151,2.567,152,2.988,153,2.988,154,4.346,155,2.988,156,3.247,157,3.111,158,2.988,159,3.123,160,2.414,161,2.01,162,2.289,163,2.51,164,1.778,165,2.263,166,2.289,167,2.289,168,5.121,169,3.047,170,2.013,171,5.121,172,2.567,173,2.368,174,2.988,175,1.464,176,2.567,177,2.988,178,2.567,179,2.567,180,2.368,181,3.027,182,1.916,183,2.988,184,4.346,185,2.414,186,2.988,187,2.988,188,2.988,189,4.346,190,2.988,191,6.234,192,2.988,193,2.081,194,2.786,195,2.988,196,3.567,197,1.916,198,4.346,199,3.923,200,4.346,201,4.346,202,2.786,203,4.346,204,4.346,205,2.585,206,2.988,207,2.01,208,2.988,209,3.329,210,4.346,211,2.567,212,2.289,213,1.916,214,2.786,215,4.346,216,4.346,217,2.988,218,2.988,219,1.556,220,2.988,221,1.464,222,2.988,223,1.464,224,1.556,225,2.988]],["title/modules/AppModule.html",[226,2.054,227,2.576]],["body/modules/AppModule.html",[3,0.199,4,0.176,5,0.176,12,0.019,14,0.199,15,0.013,16,0.013,29,1.185,43,1.134,44,0.65,45,0.458,82,2.133,98,1.88,106,1.88,111,1.88,133,3.326,170,1.522,227,5.303,228,1.791,229,2.554,230,3.326,231,3.326,232,3.326,233,3.326,234,4.341,235,4.341,236,4.341,237,3.527,238,4.341,239,2.894,240,2.151,241,3.872,242,3.1,243,2.894,244,5.211,245,2.894,246,5.211,247,4.476,248,2.966,249,3.872,250,3.872,251,3.872,252,2.697,253,4.476,254,2.151,255,3.326,256,3.1,257,4.511,258,2.017,259,3.872,260,3.872,261,3.326,262,3.991,263,1.898,264,5.211,265,3.872,266,4.476,267,3.326,268,3.326,269,5.211,270,3.872,271,5.211,272,3.872,273,5.211,274,3.872,275,3.872,276,3.872,277,2.482]],["title/modules/AppRoutingModule.html",[226,2.054,234,2.371]],["body/modules/AppRoutingModule.html",[3,0.234,4,0.208,5,0.208,12,0.019,14,0.234,15,0.014,16,0.014,17,0.984,43,1.095,44,0.766,45,0.54,92,1.535,94,1.771,98,1.771,100,1.611,106,1.771,108,1.611,228,2.111,234,3.721,243,2.536,245,3.223,255,3.921,261,3.921,277,2.927,278,4.566,279,4.566,280,4.445,281,4.444,282,1.704,283,4.566,284,4.566,285,4.566,286,4.566,287,1.794,288,4.566,289,4.566,290,2.536,291,7.412,292,4.566,293,4.566,294,3.921,295,1.997,296,3.497,297,4.566,298,4.566,299,4.566,300,4.566,301,4.566,302,4.566,303,4.566]],["title/interfaces/Category.html",[0,0.437,304,1.926]],["body/interfaces/Category.html",[0,0.316,2,0.859,3,0.137,4,0.122,5,0.122,7,0.221,8,0.637,9,1.368,10,1.26,11,0.62,12,0.019,13,1.564,14,0.206,15,0.012,16,0.01,43,0.402,45,0.316,80,1.159,123,1.112,141,3.626,149,1.399,205,3.563,287,2.51,295,1.17,304,2.972,305,1.715,306,4.588,307,2.297,308,1.863,309,3.658,310,1.863,311,1.863,312,1.863,313,1.863,314,1.863,315,1.863,316,1.486,317,2.789,318,2.789,319,2.297,320,2.909,321,1.863,322,3.439,323,2.297,324,1.863,325,1.591,326,4.511,327,3.658,328,4.731,329,4.327,330,1.715,331,2.789,332,2.789,333,1.863,334,2.789,335,2.789,336,1.715,337,3.343,338,3.416,339,2.331,340,2.789,341,1.863,342,1.863,343,4.347,344,2.789,345,1.715,346,3.343,347,1.863,348,1.863,349,3.077,350,3.416,351,2.789,352,4.172,353,1.863,354,1.863,355,1.863,356,1.863,357,2.567,358,1.863,359,1.863,360,1.863,361,2.789,362,2.567,363,1.311,364,1.863,365,1.863,366,1.863,367,1.863,368,1.863,369,3.658,370,2.22,371,1.863,372,1.863,373,2.789,374,1.863,375,1.863,376,1.863,377,1.863,378,1.863,379,1.863,380,1.863,381,1.863,382,1.863,383,1.863,384,1.863,385,1.863,386,1.863,387,1.863,388,2.567,389,1.863,390,1.863,391,1.863,392,1.863,393,1.863,394,1.863,395,1.863,396,1.863,397,1.863,398,1.863,399,1.863,400,1.863,401,1.863,402,1.963,403,1.863,404,1.715,405,2.567,406,1.591,407,1.715,408,1.591,409,1.715,410,1.863,411,1.715,412,1.863,413,1.715,414,2.567,415,1.715,416,1.715,417,1.863,418,1.591,419,1.051,420,3.416,421,2.049]],["title/components/CategoryComponent.html",[17,0.495,84,1.078]],["body/components/CategoryComponent.html",[3,0.155,4,0.137,5,0.137,7,0.25,8,0.696,11,0.585,12,0.019,14,0.155,15,0.011,16,0.011,17,0.69,18,0.88,19,1.479,20,1.072,21,1.072,22,1.072,23,1.072,26,1.02,27,1.02,28,2.346,29,2.223,31,1.479,33,1.479,37,0.839,38,1.356,43,0.994,44,0.507,45,0.357,70,1.481,72,2.358,73,3.355,74,1.072,75,1.554,76,1.554,77,0.88,78,2.006,79,1.072,80,1.055,81,1.072,82,0.88,83,1.072,84,1.647,85,1.072,86,0.88,87,1.072,88,0.88,89,1.072,90,0.88,91,1.072,92,0.799,93,1.072,94,0.839,95,1.072,96,0.839,97,1.072,98,0.839,99,1.072,100,0.839,101,1.072,102,0.88,103,1.072,104,0.88,105,1.072,106,0.839,107,1.072,108,0.839,109,0.761,110,1.02,111,0.839,112,1.02,113,1.072,122,1.072,123,0.839,138,1.321,146,1.481,149,1.277,151,2.595,156,1.573,157,3.125,169,3.362,173,1.397,180,1.397,185,1.678,207,2.026,223,2.147,224,1.573,295,1.321,304,3.125,419,1.187,422,2.595,423,5.153,424,4.38,425,3.947,426,4.426,427,3.362,428,3.021,429,4.011,430,3.84,431,2.823,432,4.38,433,0.88,434,0.761,435,3.762,436,3.021,437,2.358,438,3.021,439,1.072,440,3.021,441,2.314,442,1.397,443,1.252,444,2.595,445,3.021,446,2.595,447,2.595,448,3.304,449,1.797,450,2.314,451,0.971,452,1.815,453,1.397,454,1.321,455,3.021,456,3.021,457,4.38,458,2.808,459,3.021,460,3.021,461,2.595,462,4.38,463,4.38,464,4.38,465,4.38,466,4.38,467,4.38,468,4.38,469,1.573,470,2.104,471,2.281,472,1.678,473,3.021,474,3.021,475,1.397,476,3.051,477,6.612,478,3.021,479,3.021,480,3.021,481,3.021,482,4.38,483,3.021,484,3.021,485,3.021,486,3.623,487,3.021,488,3.021,489,3.021,490,1.937,491,1.937,492,1.937,493,1.937,494,1.937,495,1.573,496,2.808,497,1.797,498,3.623,499,3.362,500,3.623,501,3.623,502,1.937,503,3.021,504,3.021,505,1.937]],["title/injectables/CategoryService.html",[429,2.371,506,1.617]],["body/injectables/CategoryService.html",[3,0.259,4,0.229,5,0.229,7,0.552,11,0.522,12,0.019,14,0.259,15,0.015,16,0.015,35,1.714,37,1.399,38,1.481,41,1.333,43,1.003,44,0.846,45,0.596,80,0.94,115,2.998,149,1.469,254,2.799,304,3.622,425,3.86,429,3.957,433,1.469,434,1.27,449,2.998,450,3.86,451,1.619,506,2.7,507,2.998,508,4.329,509,5.327,510,3.231,511,4.655,512,5.04,513,5.04,514,4.329,515,3.231,516,5.04,517,5.04,518,2.625,519,3.86,520,3.231,521,2.998,522,3.51]],["title/interfaces/Changelog.html",[0,0.437,523,2.371]],["body/interfaces/Changelog.html",[0,0.649,2,1.763,3,0.282,4,0.25,5,0.25,7,0.454,8,1.033,10,1.415,11,0.717,12,0.019,14,0.282,15,0.016,16,0.016,402,3.507,523,4.165,524,4.713,525,7.156,526,5.481]],["title/components/ChangelogComponent.html",[17,0.495,86,1.078]],["body/components/ChangelogComponent.html",[3,0.206,4,0.182,5,0.182,7,0.332,12,0.019,14,0.206,15,0.013,16,0.013,17,0.802,18,1.169,19,1.801,20,1.423,21,1.423,22,1.423,23,1.423,25,2.097,26,2.023,27,1.354,28,2.426,29,2.303,31,1.801,33,1.801,35,1.481,36,2.385,37,1.664,38,1.28,41,1.061,42,1.991,43,0.603,44,0.673,45,0.474,47,4.582,48,4.582,49,4.582,50,4.582,51,4.582,52,4.582,53,4.582,54,4.582,55,4.582,56,4.582,57,4.582,58,4.582,59,4.582,60,4.582,61,4.582,62,4.582,63,4.582,64,4.582,65,4.582,66,4.582,67,4.582,68,4.582,69,4.582,70,1.965,71,2.386,72,1.576,73,3.072,74,1.423,75,1.893,76,1.893,77,1.169,78,2.267,79,1.423,80,1.118,81,1.423,82,1.169,83,1.423,84,1.169,85,1.423,86,1.862,87,1.423,88,1.169,89,1.423,90,1.169,91,1.423,92,1.061,93,1.423,94,1.113,95,1.423,96,1.113,97,1.423,98,1.113,99,1.423,100,1.113,101,1.423,102,1.169,103,1.423,104,1.169,105,1.423,106,1.113,107,1.423,108,1.113,109,1.01,110,1.354,111,1.113,112,1.354,113,1.423,523,4.096,527,3.444,528,5.994,529,5.334,530,4.01,531,4.01]],["title/interfaces/Config.html",[0,0.437,532,2.833]],["body/interfaces/Config.html",[0,0.611,1,4.885,2,1.66,3,0.265,4,0.235,5,0.235,7,0.428,8,0.996,10,1.402,11,0.744,12,0.019,14,0.265,15,0.016,16,0.016,43,0.942,157,3.653,523,4.497,532,4.8,533,4.437,534,7.014,535,7.014,536,7.014,537,5.372,538,5.166,539,5.166]],["title/classes/Convert.html",[45,0.437,316,2.054]],["body/classes/Convert.html",[0,0.315,3,0.137,4,0.121,5,0.121,7,0.22,9,1.093,10,1.239,11,0.55,12,0.019,13,1.206,14,0.205,15,0.012,16,0.01,35,1.108,38,0.958,41,1.056,43,0.4,45,0.315,80,1.116,123,1.329,141,3.444,149,1.395,205,2.848,287,2.506,295,1.165,304,3.229,305,1.707,306,3.667,307,2.287,308,1.855,309,3.834,310,1.855,311,1.855,312,1.855,313,1.855,314,1.855,315,1.855,316,2.217,317,2.78,318,4.165,319,3.428,320,2.907,321,1.855,322,3.428,323,3.428,324,1.855,325,1.584,326,4.507,327,3.652,328,4.729,329,4.323,330,1.707,331,2.78,332,2.78,333,1.855,334,2.78,335,2.78,336,1.707,337,3.335,338,3.409,339,2.326,340,2.78,341,1.855,342,1.855,343,4.345,344,2.78,345,1.707,346,3.335,347,1.855,348,1.855,349,3.069,350,3.409,351,2.78,352,4.165,353,1.855,354,1.855,355,1.855,356,1.855,357,2.559,358,1.855,359,1.855,360,1.855,361,2.78,362,2.559,363,1.305,364,1.855,365,1.855,366,1.855,367,1.855,368,1.855,369,3.652,370,2.214,371,1.855,372,1.855,373,2.78,374,1.855,375,1.855,376,1.855,377,1.855,378,1.855,379,1.855,380,1.855,381,1.855,382,1.855,383,1.855,384,1.855,385,1.855,386,1.855,387,1.855,388,2.559,389,1.855,390,1.855,391,1.855,392,1.855,393,1.855,394,1.855,395,1.855,396,1.855,397,1.855,398,1.855,399,1.855,400,1.855,401,1.855,402,1.956,403,1.855,404,1.707,405,2.559,406,1.584,407,1.707,408,1.584,409,1.707,410,1.855,411,1.707,412,1.855,413,1.707,414,2.559,415,1.707,416,1.707,417,1.855,418,1.584,419,1.047,420,3.409,421,2.04,433,1.163,434,1.005,540,2.04,541,3.992,542,3.992,543,2.663,544,2.663]],["title/classes/Convert-1.html",[45,0.365,143,1.608,316,1.714]],["body/classes/Convert-1.html",[0,0.291,3,0.126,4,0.112,5,0.112,7,0.204,9,1.042,10,1.281,11,0.529,12,0.019,13,1.15,14,0.193,15,0.011,16,0.009,35,1.044,38,0.902,41,0.995,45,0.291,80,1.027,109,1.521,123,1.267,141,3.223,149,1.604,287,2.446,308,1.715,309,4.443,310,1.715,311,1.715,312,1.715,313,1.715,314,1.715,315,1.715,316,2.089,317,2.62,318,4.041,320,2.882,321,1.715,324,1.715,325,1.465,326,4.443,327,3.528,328,4.686,329,4.243,330,1.578,331,2.62,332,2.62,333,1.715,334,2.62,335,2.62,336,1.578,337,3.179,338,3.275,339,2.234,340,2.62,341,1.715,342,1.715,343,4.419,344,2.62,345,1.578,346,3.179,347,1.715,348,1.715,349,2.926,350,3.275,351,2.62,352,4.041,353,1.715,354,1.715,355,1.715,356,1.715,357,2.411,358,1.715,359,1.715,360,1.715,361,2.62,362,2.411,363,1.206,364,1.715,365,1.715,366,1.715,367,1.715,368,1.715,369,3.528,370,2.11,371,1.715,372,1.715,373,2.62,374,1.715,375,1.715,376,1.715,377,1.715,378,1.715,379,1.715,380,1.715,381,1.715,382,1.715,383,1.715,384,1.715,385,1.715,386,1.715,387,1.715,388,2.411,389,1.715,390,1.715,391,1.715,392,1.715,393,1.715,394,1.715,395,1.715,396,1.715,397,1.715,398,1.715,399,1.715,400,1.715,401,1.715,402,2.844,403,1.715,404,1.578,405,2.411,406,1.465,407,1.578,408,1.465,409,1.578,410,1.715,411,1.578,412,1.715,413,1.578,414,2.411,415,1.578,416,1.578,417,1.715,418,1.465,419,0.968,420,4.356,433,1.096,434,0.947,540,1.886,545,1.578,546,3.761,547,3.761,548,3.23,549,2.462,550,3.23,551,2.462,552,1.282,553,1.715,554,1.578,555,1.715,556,1.886,557,1.077,558,1.886,559,1.578,560,1.465,561,3.23,562,2.237,563,2.62,564,2.237,565,2.881,566,2.881,567,2.881,568,2.881,569,2.881,570,2.881,571,2.881,572,2.881]],["title/interfaces/Country.html",[0,0.437,573,2.833]],["body/interfaces/Country.html",[0,0.662,2,1.799,3,0.288,4,0.255,5,0.255,7,0.463,8,1.045,9,1.645,10,1.303,11,0.681,12,0.018,13,1.758,14,0.288,15,0.016,16,0.016,573,5.699,574,4.809]],["title/components/FooterComponent.html",[17,0.495,88,1.078]],["body/components/FooterComponent.html",[3,0.211,4,0.187,5,0.187,7,0.34,12,0.019,14,0.211,15,0.013,16,0.013,17,0.812,18,1.198,19,1.83,20,1.459,21,1.459,22,1.459,23,1.459,25,2.131,26,2.048,27,1.388,28,2.432,29,2.309,31,1.83,33,1.83,35,1.505,36,2.408,37,1.684,38,1.301,41,1.087,42,2.024,43,0.618,44,0.69,45,0.486,72,1.615,74,1.459,75,1.924,76,1.924,77,1.198,78,2.289,79,1.459,80,1.132,81,1.459,82,1.198,83,1.459,84,1.198,85,1.459,86,1.198,87,1.459,88,1.88,89,1.459,90,1.198,91,1.459,92,1.087,93,1.459,94,1.141,95,1.459,96,1.141,97,1.459,98,1.141,99,1.459,100,1.141,101,1.459,102,1.198,103,1.459,104,1.198,105,1.459,106,1.141,107,1.459,108,1.141,109,1.035,110,1.388,111,1.141,112,1.388,113,1.459,126,3.777,136,2.507,159,3.011,160,3.011,161,1.901,180,2.507,185,2.283,475,2.507,476,3.777,575,3.53,576,5.422,577,6.068,578,5.422,579,4.11,580,4.11,581,5.422,582,4.153,583,5.422,584,5.422,585,5.422,586,5.422,587,2.283,588,4.11]],["title/interfaces/Forum.html",[0,0.437,295,1.617]],["body/interfaces/Forum.html",[0,0.612,2,1.664,3,0.266,4,0.235,5,0.235,7,0.429,8,0.997,9,1.603,10,1.402,11,0.756,12,0.019,13,1.893,14,0.266,15,0.016,16,0.016,295,2.744,552,3.656,557,3.07,589,4.447,590,6.029,591,7.019,592,7.019]],["title/components/ForumComponent.html",[17,0.495,90,1.078]],["body/components/ForumComponent.html",[3,0.171,4,0.151,5,0.151,7,0.276,8,0.746,9,0.761,10,1.206,11,0.645,12,0.019,14,0.171,15,0.012,16,0.012,17,0.728,18,0.97,19,1.585,20,1.182,21,1.182,22,1.182,23,1.182,25,1.846,26,1.837,27,1.124,28,2.375,29,2.252,31,1.585,33,1.585,35,1.304,36,2.205,37,0.924,38,1.551,41,0.881,42,1.753,43,0.936,44,0.559,45,0.394,70,1.632,72,1.846,74,1.182,75,1.667,76,1.667,77,0.97,78,2.097,79,1.182,80,1.102,81,1.182,82,0.97,83,1.182,84,0.97,85,1.182,86,0.97,87,1.182,88,0.97,89,1.182,90,1.722,91,1.182,92,0.881,93,1.182,94,0.924,95,1.182,96,0.924,97,1.182,98,0.924,99,1.182,100,0.924,101,1.182,102,0.97,103,1.182,104,0.97,105,1.182,106,0.924,107,1.182,108,0.924,109,0.839,110,1.124,111,0.924,112,1.124,113,1.182,122,1.931,123,1.51,136,1.54,161,1.54,163,1.632,173,2.172,175,1.632,185,1.85,193,2.319,207,1.54,221,2.302,223,1.632,282,1.243,295,2.379,339,1.456,430,3.846,433,0.97,434,0.839,437,2.138,439,1.182,441,2.551,446,2.86,451,1.07,469,1.734,470,2.319,471,2.446,472,1.85,520,2.135,552,2.833,587,2.608,593,2.86,594,5.44,595,4.696,596,5.44,597,3.883,598,3.597,599,3.789,600,3.33,601,3.33,602,4.034,603,3.33,604,3.33,605,3.33,606,3.33,607,3.33,608,2.516,609,1.734,610,2.551,611,3.33,612,3.33,613,1.85,614,2.794,615,2.86,616,3.33,617,3.33,618,3.33,619,2.86,620,2.86,621,3.33,622,4.034,623,4.696,624,2.551,625,2.551,626,2.551,627,1.85,628,3.488,629,2.551,630,1.734,631,3.597]],["title/modules/ForumModule.html",[226,2.054,632,2.576]],["body/modules/ForumModule.html",[3,0.271,4,0.24,5,0.24,12,0.019,14,0.271,15,0.016,16,0.016,43,1.062,44,0.886,45,0.624,96,1.465,170,2.074,228,2.44,229,3.111,237,3.823,239,3.525,240,2.931,242,3.139,243,3.525,245,3.525,252,3.675,256,3.776,258,2.748,632,5.113,633,4.532,634,5.277,635,5.277,636,5.277]],["title/injectables/ForumService.html",[430,2.2,506,1.617]],["body/injectables/ForumService.html",[3,0.223,4,0.197,5,0.197,7,0.359,9,0.991,11,0.645,12,0.019,13,1.761,14,0.223,15,0.014,16,0.014,35,1.56,37,1.205,38,1.581,41,1.648,43,0.99,44,0.729,45,0.513,80,1.163,115,2.583,138,2.985,149,1.265,254,2.411,295,2.725,320,2.208,339,1.898,426,3.729,430,3.343,433,1.816,434,1.569,437,2.59,439,1.54,441,3.325,449,3.707,451,1.395,453,2.008,454,1.898,461,3.729,506,2.457,507,2.583,509,4.772,510,2.783,511,4.482,515,2.783,518,2.261,519,3.325,520,2.783,521,2.583,522,3.024,610,3.325,613,3.121,614,2.583,637,3.729,638,4.304,639,5.619,640,4.341,641,4.304,642,4.341,643,5.619,644,4.341,645,3.994,646,4.341,647,5.047,648,4.341,649,4.341,650,3.914,651,3.914,652,4.341,653,3.325,654,3.325,655,3.024]],["title/interfaces/Fruit.html",[0,0.437,656,2.576]],["body/interfaces/Fruit.html",[0,0.382,2,1.039,3,0.166,4,0.147,5,0.147,7,0.443,8,0.731,9,1.223,10,1.278,11,0.335,12,0.019,13,0.815,14,0.236,15,0.011,16,0.011,17,0.616,25,1.271,26,1.553,28,1.039,29,0.99,31,1.092,33,1.092,36,1.207,42,2.177,43,1.067,44,0.543,45,0.382,80,1.088,92,0.855,123,1.486,128,3.524,132,2.477,138,2.012,141,1.796,143,1.684,146,1.585,149,0.943,263,1.585,282,1.207,287,2.422,290,1.796,320,1.808,339,1.414,363,1.585,427,2.396,431,2.341,437,2.292,439,1.148,442,2.127,443,1.34,451,1.039,452,2.653,453,1.496,454,1.414,475,1.496,521,2.737,608,1.496,609,2.396,613,2.555,656,4.062,657,2.477,658,3.951,659,3.951,660,2.778,661,2.737,662,3.524,663,2.949,664,2.073,665,3.432,666,2.778,667,1.796,668,2.253,669,1.796,670,3.185,671,2.477,672,1.924,673,2.341,674,1.924,675,3.951,676,2.477,677,3.951,678,2.778,679,2.778,680,2.778,681,2.778,682,1.796,683,2.073,684,2.778,685,2.778,686,2.778,687,2.778,688,2.778,689,2.778,690,2.073,691,1.585,692,2.073,693,2.778,694,2.073,695,2.788,696,2.073,697,1.924,698,2.073,699,1.924,700,2.073,701,2.477,702,1.684,703,3.185,704,2.477,705,3.524,706,3.524,707,2.477,708,2.477,709,1.924,710,2.778,711,2.778,712,2.778,713,3.524,714,2.778,715,2.788,716,3.729,717,3.729,718,2.477,719,2.778,720,2.778,721,2.778,722,2.477,723,2.778,724,2.073,725,2.073,726,2.778,727,2.778,728,2.778,729,2.778,730,2.778,731,2.778,732,2.778,733,2.778,734,2.778,735,2.778,736,2.778,737,2.778,738,2.778,739,2.778,740,2.778,741,2.778,742,2.778,743,2.477,744,2.778,745,2.778,746,2.778,747,3.951,748,2.778,749,2.778,750,2.778,751,2.778,752,2.778,753,2.778,754,2.778,755,2.778,756,2.778,757,2.778,758,2.778,759,2.778]],["title/components/FulltopicComponent.html",[17,0.495,92,0.978]],["body/components/FulltopicComponent.html",[0,0.206,3,0.187,4,0.079,5,0.079,7,0.349,8,0.455,9,0.831,10,1.184,11,0.647,12,0.019,13,0.721,14,0.147,15,0.007,16,0.007,17,0.487,18,0.508,19,0.966,20,0.619,21,0.619,22,0.619,23,0.619,25,1.125,26,1.229,27,0.589,28,2.136,29,2.014,31,0.966,33,0.966,35,0.795,36,1.572,37,0.484,38,1.633,41,1.509,42,2.292,43,0.923,44,0.293,45,0.206,70,0.855,71,1.038,72,1.43,74,0.619,75,1.016,76,1.016,77,0.508,78,1.494,79,0.619,80,1.064,81,0.619,82,0.508,83,0.619,84,0.508,85,0.619,86,0.508,87,0.619,88,0.508,89,0.619,90,0.508,91,0.619,92,1.114,93,0.619,94,0.484,95,0.619,96,0.484,97,0.619,98,0.484,99,0.619,100,0.484,101,0.619,102,0.508,103,0.619,104,0.508,105,0.619,106,0.484,107,0.619,108,0.484,109,0.439,110,0.589,111,0.484,112,0.589,113,0.619,122,1.955,123,1.705,128,2.788,132,1.336,138,1.252,141,0.969,143,0.909,146,1.403,149,1.061,156,1.895,157,0.909,159,2.021,160,2.582,161,0.807,163,0.855,164,2.165,165,1.895,166,2.192,167,1.336,173,1.683,175,1.784,176,1.498,178,1.498,179,1.498,180,1.683,199,2.788,205,1.038,207,1.324,211,1.498,212,1.336,213,1.118,219,0.909,221,0.855,223,1.784,224,2.421,263,0.855,282,0.651,287,1.827,290,0.969,320,1.125,339,0.763,362,1.835,363,1.403,427,1.491,431,2.185,433,1.355,434,1.171,437,2.074,439,0.619,442,3.126,443,0.723,451,0.561,452,2.282,453,0.807,454,0.763,470,1.994,471,1.895,472,2.021,475,0.807,495,1.491,497,1.703,521,1.703,557,0.763,587,1.59,608,0.807,609,2.193,613,1.59,628,1.118,630,1.491,656,3.48,657,1.336,658,3.126,659,3.126,660,1.498,661,2.505,662,2.788,663,2.333,664,1.118,665,3.383,666,1.498,667,0.969,668,1.215,669,0.969,670,3.139,671,1.336,672,1.038,673,2.308,674,1.038,675,3.617,676,1.336,677,3.617,678,1.498,679,2.458,680,2.458,681,3.126,682,2.021,683,2.333,684,1.498,685,1.498,686,1.498,687,1.498,688,1.498,689,1.498,690,1.118,691,1.784,692,1.118,693,3.126,694,1.835,695,2.193,696,1.835,697,1.038,698,1.118,699,2.165,700,1.835,701,1.336,702,0.909,703,2.165,704,2.192,705,2.192,706,2.192,707,2.788,708,2.192,709,2.505,710,1.498,711,1.498,712,1.498,713,2.192,714,1.498,715,2.193,716,2.535,717,2.535,718,3.826,719,1.498,720,3.617,721,1.498,722,3.826,723,1.498,724,1.118,725,1.118,726,1.498,727,1.498,728,3.126,729,3.126,730,3.126,731,3.993,732,3.126,733,2.458,734,2.458,735,2.458,736,2.458,737,2.458,738,2.458,739,3.126,740,2.458,741,1.498,742,1.498,743,2.788,744,1.498,745,1.498,746,1.498,747,2.458,748,2.458,749,1.498,750,1.498,751,2.458,752,1.498,753,1.498,754,2.458,755,1.498,756,1.498,757,1.498,758,1.498,759,1.498,760,2.862,761,2.862,762,2.862,763,1.835,764,1.215,765,1.745,766,1.745,767,1.745,768,2.862,769,1.745,770,1.745,771,1.745,772,1.745,773,1.745,774,1.745,775,1.745,776,1.745,777,1.745,778,1.745,779,1.745,780,1.745,781,1.745,782,1.745,783,1.745,784,1.745,785,1.745,786,1.745,787,1.118,788,1.745,789,2.458,790,2.862,791,2.192,792,2.192,793,2.458,794,2.192,795,2.192,796,2.458,797,1.994,798,2.458,799,2.192,800,1.498,801,2.7,802,2.458,803,2.862,804,2.458,805,2.862,806,2.862,807,2.862,808,1.498,809,3.238,810,2.535,811,1.498,812,1.498,813,1.336,814,2.458,815,2.458,816,1.498,817,3.617,818,3.617,819,1.336,820,1.498,821,1.498,822,2.458,823,1.118,824,1.336,825,1.498,826,1.745,827,1.745,828,1.745,829,1.745,830,2.862,831,2.458,832,1.498,833,1.498,834,1.498,835,2.192,836,1.498]],["title/modules/FulltopicModule.html",[226,2.054,235,2.371]],["body/modules/FulltopicModule.html",[3,0.254,4,0.225,5,0.225,12,0.019,14,0.254,15,0.015,16,0.015,43,1.101,44,0.829,45,0.584,92,2.004,170,1.941,228,2.284,229,2.988,235,4.695,239,3.386,240,2.743,242,3.627,243,2.743,245,3.386,256,3.627,257,3.783,258,2.573,262,4.67,263,2.421,277,3.909,661,2.939,662,3.783,676,3.783,837,4.242,838,4.242,839,4.242,840,4.939,841,4.939,842,6.097,843,6.097,844,4.939,845,4.939,846,6.097,847,4.939]],["title/components/IndexComponent.html",[17,0.495,94,1.027]],["body/components/IndexComponent.html",[3,0.205,4,0.182,5,0.182,7,0.495,8,0.846,11,0.551,12,0.019,14,0.205,15,0.013,16,0.013,17,0.801,18,1.165,19,1.797,20,1.418,21,1.418,22,1.418,23,1.418,25,2.092,26,2.02,27,1.349,28,2.425,29,2.302,31,1.797,33,1.797,35,1.478,36,2.382,37,1.11,38,1.436,41,1.057,42,1.987,43,0.959,44,0.671,45,0.473,74,1.418,75,1.889,76,1.889,77,1.165,78,2.264,79,1.418,80,1.191,81,1.418,82,1.165,83,1.418,84,1.165,85,1.418,86,1.165,87,1.418,88,1.165,89,1.418,90,1.165,91,1.418,92,1.057,93,1.418,94,1.771,95,1.418,96,1.11,97,1.418,98,1.11,99,1.418,100,1.11,101,1.418,102,1.165,103,1.418,104,1.165,105,1.418,106,1.11,107,1.418,108,1.11,109,1.007,110,1.349,111,1.11,112,1.349,113,1.418,122,1.418,123,1.11,138,1.748,304,3.117,425,4.584,429,4.472,433,1.165,434,1.007,435,4.572,448,2.563,449,2.378,450,3.062,451,1.284,452,1.656,453,1.849,454,1.748,514,3.433,673,2.988,674,2.378,848,3.433,849,5.984,850,5.323,851,3.062,852,5.323,853,3.997,854,3.997]],["title/modules/IndexModule.html",[226,2.054,236,2.371]],["body/modules/IndexModule.html",[3,0.242,4,0.214,5,0.214,12,0.019,14,0.242,15,0.015,16,0.015,43,1.112,44,0.791,45,0.557,84,2.082,90,2.082,94,1.983,170,1.852,228,2.18,229,2.902,236,4.828,237,3.72,239,3.289,240,2.618,242,3.523,243,3.289,245,3.289,252,3.283,253,5.086,254,2.618,256,3.523,258,2.455,266,5.086,267,4.048,268,4.048,277,3.022,280,4.536,282,1.759,855,4.048,856,4.048,857,4.714,858,4.714,859,4.714,860,4.714,861,4.714]],["title/interfaces/Language.html",[0,0.437,862,2.833]],["body/interfaces/Language.html",[0,0.662,2,1.799,3,0.288,4,0.255,5,0.255,7,0.463,8,1.045,9,1.645,10,1.303,11,0.681,12,0.018,13,1.758,14,0.288,15,0.016,16,0.016,862,5.699,863,4.809]],["title/components/NavbarComponent.html",[17,0.495,96,1.027]],["body/components/NavbarComponent.html",[3,0.102,4,0.145,5,0.091,7,0.165,8,0.507,11,0.33,12,0.019,14,0.102,15,0.008,16,0.008,17,0.533,18,0.581,19,1.076,20,0.707,21,0.707,22,0.707,23,0.707,26,0.673,27,0.673,28,2.194,29,2.072,31,1.076,33,1.076,35,0.885,36,1.7,37,0.553,38,1.274,41,1.054,42,1.7,43,0.749,44,0.335,45,0.236,72,2.277,74,0.707,75,1.132,76,1.132,77,0.581,78,1.616,79,0.707,80,0.85,81,0.707,82,0.581,83,0.707,84,0.581,85,0.707,86,0.581,87,0.707,88,0.581,89,0.707,90,0.581,91,0.707,92,0.527,93,0.707,94,0.553,95,0.707,96,1.264,97,0.707,98,0.553,99,0.707,100,0.553,101,0.707,102,0.581,103,0.707,104,0.581,105,0.707,106,0.553,107,0.707,108,0.553,109,1.004,110,0.673,111,0.553,112,0.673,113,0.707,122,0.707,123,0.553,126,2.221,136,1.475,138,1.743,143,1.038,149,1.327,156,2.372,157,3.26,161,1.843,162,1.527,163,1.953,165,1.661,169,4.192,170,1.566,173,0.922,175,2.603,180,2.303,181,2.221,182,2.044,194,3.406,196,1.389,197,1.278,202,2.044,207,0.922,209,1.527,213,1.278,214,1.278,219,1.038,221,1.953,223,1.953,224,2.076,263,0.977,282,0.744,287,0.783,320,0.783,370,0.922,419,1.79,433,0.581,434,0.502,451,0.641,452,1.321,453,0.922,454,0.872,458,1.278,469,1.038,471,1.661,475,1.475,476,1.389,486,3.576,490,3.193,491,2.92,492,2.555,493,2.92,494,2.92,495,2.594,496,3.715,497,2.709,498,4.3,499,3.991,500,4.3,501,4.3,502,3.576,505,1.278,518,1.661,554,2.044,564,2.709,608,0.922,614,1.186,627,1.107,630,1.038,661,2.709,663,2.555,664,1.278,665,3.576,673,2.534,683,2.044,690,1.278,691,2.232,692,1.278,694,2.044,696,2.92,697,2.371,698,1.278,702,1.038,703,1.897,715,1.661,717,2.221,724,2.044,763,2.044,787,1.278,804,2.739,823,2.044,864,1.712,865,3.189,866,3.985,867,3.189,868,3.985,869,4.981,870,5.312,871,1.712,872,1.994,873,1.994,874,1.994,875,1.994,876,3.053,877,2.739,878,2.739,879,2.739,880,1.994,881,1.994,882,1.994,883,1.712,884,1.994,885,1.712,886,1.994,887,1.994,888,1.527,889,1.994,890,1.994,891,1.712,892,1.994,893,1.712,894,1.994,895,1.712,896,1.712,897,2.739,898,2.739,899,1.994,900,1.389,901,1.712,902,1.712,903,2.739,904,1.994,905,1.994,906,1.712,907,1.994,908,1.994,909,1.527,910,1.994,911,1.278,912,1.712,913,1.389,914,1.712,915,4.563,916,2.739,917,2.739,918,2.739,919,2.739,920,2.739,921,2.739,922,2.442,923,1.712,924,1.712,925,1.712,926,1.712,927,1.712,928,1.712,929,2.442,930,1.527,931,1.389,932,1.527,933,1.712,934,1.712,935,1.712,936,1.712,937,1.712,938,1.712,939,1.994,940,1.994,941,1.527,942,1.527,943,1.527,944,2.221,945,1.527,946,1.527,947,1.527,948,1.527,949,1.389,950,1.389,951,1.389,952,1.389,953,2.221,954,1.389,955,1.389,956,1.712,957,2.739,958,3.469,959,2.221,960,1.389,961,3.053,962,2.776,963,2.221,964,1.389,965,1.389,966,3.172,967,2.776,968,2.776,969,1.389,970,1.389,971,1.389,972,1.389,973,2.776,974,2.776,975,1.389,976,3.172,977,1.389,978,1.389,979,1.389,980,1.389,981,1.389,982,1.389,983,2.221,984,1.389,985,1.389,986,1.389,987,1.389,988,2.776,989,2.776,990,1.389,991,2.776,992,2.776,993,2.776]],["title/components/PostComponent.html",[17,0.495,98,1.027]],["body/components/PostComponent.html",[3,0.202,4,0.059,5,0.059,7,0.185,8,0.354,9,0.795,10,0.242,11,0.475,12,0.019,13,0.326,14,0.067,15,0.006,16,0.006,17,0.392,18,0.378,19,0.752,20,0.46,21,0.791,22,0.46,23,0.46,25,0.876,26,0.99,27,0.437,28,2.014,29,1.871,31,0.752,33,0.752,35,0.619,36,1.3,37,0.36,38,1.397,41,0.776,42,1.3,43,0.816,44,0.218,45,0.153,70,0.635,71,0.771,72,2.132,74,0.46,75,0.791,76,0.791,77,0.378,78,1.236,79,0.46,80,0.65,81,0.46,82,0.378,83,0.46,84,0.378,85,0.46,86,0.378,87,0.46,88,0.378,89,0.46,90,0.378,91,0.46,92,0.343,93,0.46,94,0.36,95,0.46,96,0.36,97,0.46,98,0.967,99,0.46,100,0.36,101,0.46,102,0.378,103,0.46,104,0.378,105,0.46,106,0.36,107,0.46,108,0.36,109,1.276,110,0.437,111,0.36,112,0.437,113,0.46,122,1.72,123,1.345,138,2.216,143,0.675,146,0.635,149,1.663,156,2.044,157,2.826,159,2.18,160,2.92,161,1.031,163,1.092,164,2.335,165,2.233,166,2.668,167,1.707,169,3.872,170,1.153,172,1.113,173,1.815,175,2.483,180,1.815,182,2.233,194,2.748,196,2.043,197,1.88,199,1.707,202,1.429,205,0.771,207,1.611,212,0.993,213,1.429,214,1.429,219,1.161,221,1.092,223,1.924,224,2.903,263,0.635,282,0.484,287,1.369,290,1.238,320,0.876,363,1.437,370,1.031,402,1.092,419,1.369,427,1.161,431,2.007,433,0.378,434,0.326,437,1.804,439,0.46,442,2.693,448,0.831,451,0.416,452,1.626,453,0.599,454,0.567,458,0.831,469,1.161,470,2.043,471,1.814,472,1.238,475,1.356,486,2.942,490,2.233,491,2.233,492,1.88,493,2.233,494,2.233,495,2.524,496,3.107,497,2.551,498,3.863,499,3.585,500,3.863,501,3.863,502,2.942,505,0.831,518,0.675,521,1.326,557,0.975,587,1.935,599,2.043,608,0.599,609,1.814,613,1.238,614,2.072,615,1.915,622,1.915,627,1.238,628,1.429,630,2.044,645,3.107,661,2.072,663,1.88,664,0.831,665,2.942,667,0.72,668,0.903,669,0.72,670,2.731,671,0.993,672,0.771,673,2.007,674,0.771,682,1.629,683,1.88,690,0.831,691,1.924,692,0.831,694,1.429,695,2.639,696,2.748,697,1.745,698,1.88,699,1.745,700,2.233,701,0.993,702,2.524,703,2.335,704,1.707,705,1.707,706,1.707,707,2.247,708,1.707,709,2.731,713,0.993,715,2.044,716,1.553,717,0.903,722,1.707,724,1.88,725,1.429,763,1.429,787,0.831,789,1.915,792,1.707,793,1.915,794,1.707,795,0.993,796,1.915,797,1.553,798,1.915,800,2.519,808,1.915,809,2.986,810,2.426,811,1.915,812,1.915,813,2.247,814,1.915,815,1.915,816,1.113,817,2.992,818,2.992,819,1.707,820,1.113,821,1.113,822,1.915,823,1.88,824,0.993,825,1.113,831,1.915,832,1.113,833,1.113,834,1.113,835,0.993,836,2.519,851,0.993,888,0.993,891,1.113,893,1.915,898,1.113,903,1.113,909,0.993,911,1.429,913,0.903,922,1.707,944,0.903,949,0.903,950,0.903,951,0.903,952,1.553,953,2.043,954,1.553,955,1.553,958,2.734,959,1.553,960,0.903,961,0.993,962,2.043,963,1.553,964,0.903,965,0.903,966,2.426,967,2.043,968,2.043,969,0.903,970,0.903,971,0.903,972,0.903,973,2.043,974,2.043,975,0.903,976,2.426,977,0.903,978,0.903,979,0.903,980,0.903,981,0.903,982,0.903,983,1.553,984,0.903,985,0.903,986,0.903,987,0.903,988,2.043,989,2.043,990,0.903,991,2.043,992,2.043,993,2.043,994,1.113,995,2.933,996,2.229,997,5.067,998,2.731,999,2.734,1000,2.933,1001,3.483,1002,2.229,1003,1.296,1004,1.296,1005,1.296,1006,1.296,1007,1.296,1008,1.296,1009,1.296,1010,1.296,1011,1.296,1012,3.376,1013,1.296,1014,1.296,1015,1.296,1016,0.993,1017,1.296,1018,1.296,1019,1.113,1020,1.296,1021,1.296,1022,1.296,1023,2.992,1024,2.229,1025,1.915,1026,2.229,1027,3.371,1028,3.483,1029,3.483,1030,1.296,1031,2.933,1032,1.296,1033,2.229,1034,1.296,1035,2.992,1036,1.915,1037,2.229,1038,2.229,1039,2.229,1040,2.229,1041,2.229,1042,2.229,1043,2.229,1044,2.229,1045,2.229,1046,2.229,1047,2.229,1048,2.229,1049,1.296,1050,1.296,1051,1.296,1052,1.296,1053,1.296,1054,1.296,1055,1.296,1056,1.296,1057,2.933,1058,1.296,1059,1.296,1060,1.296,1061,1.296,1062,1.296,1063,1.296,1064,1.296,1065,1.296,1066,1.296,1067,1.296,1068,1.113,1069,1.296,1070,1.296,1071,1.296,1072,1.296,1073,1.113,1074,1.113,1075,1.296,1076,1.296,1077,2.229,1078,2.229,1079,2.229,1080,2.229,1081,1.915,1082,1.296,1083,2.229,1084,3.483,1085,2.933,1086,4.287,1087,1.296,1088,2.229,1089,1.915,1090,0.993,1091,1.113,1092,1.113,1093,1.296,1094,1.296,1095,2.229,1096,2.229,1097,2.229]],["title/interfaces/ProrumsResponse.html",[0,0.437,1098,2.2]],["body/interfaces/ProrumsResponse.html",[0,0.659,2,1.791,3,0.286,4,0.253,5,0.253,7,0.461,8,1.042,10,1.3,11,0.679,12,0.018,14,0.286,15,0.016,16,0.016,434,1.652,715,3.746,998,4.279,1098,3.901,1099,4.787,1100,5.985]],["title/interfaces/Reaction.html",[0,0.437,1101,2.833]],["body/interfaces/Reaction.html",[0,0.662,2,1.799,3,0.288,4,0.255,5,0.255,7,0.463,8,1.045,9,1.645,10,1.303,11,0.681,12,0.018,13,1.758,14,0.288,15,0.016,16,0.016,1101,5.036,1102,4.809,1103,7.203]],["title/components/RegisterComponent.html",[17,0.495,100,1.027]],["body/components/RegisterComponent.html",[3,0.096,4,0.137,5,0.085,7,0.154,8,0.48,11,0.394,12,0.019,14,0.096,15,0.007,16,0.007,17,0.509,18,0.543,19,1.019,20,0.661,21,0.661,22,0.661,23,0.661,25,1.186,26,1.285,27,0.628,28,2.165,29,2.043,31,1.019,33,1.019,35,0.838,36,1.634,37,0.517,38,1.154,41,0.798,42,1.42,43,0.723,44,0.312,45,0.22,72,2.5,74,0.661,75,1.071,76,1.071,77,0.543,78,1.553,79,0.661,80,1.054,81,0.661,82,0.543,83,0.661,84,0.543,85,0.661,86,0.543,87,0.661,88,0.543,89,0.661,90,0.543,91,0.661,92,0.492,93,0.661,94,0.517,95,0.661,96,0.517,97,0.661,98,0.517,99,0.661,100,1.215,101,0.661,102,0.543,103,0.661,104,0.543,105,0.661,106,0.517,107,0.661,108,0.517,109,0.469,110,0.628,111,0.517,112,0.628,113,0.661,122,1.071,123,0.838,138,0.814,143,0.97,149,1.581,156,2.28,157,3.124,161,1.76,162,1.426,163,1.865,165,0.97,169,4.147,170,1.496,173,0.861,175,2.524,180,2.508,181,2.102,182,1.935,194,3.302,196,1.297,197,1.193,202,1.935,207,1.395,209,1.426,213,1.193,214,1.193,219,0.97,221,1.865,223,1.865,224,1.982,263,0.912,282,0.695,287,0.732,296,4.154,370,1.76,419,1.72,433,0.543,434,0.469,439,0.661,451,0.598,452,1.25,453,0.861,454,0.814,469,0.97,471,1.572,472,1.034,475,0.861,476,2.102,486,3.477,490,3.084,491,2.806,492,2.44,493,2.806,494,2.806,495,2.505,496,3.621,497,1.795,498,4.237,499,3.932,500,4.237,501,4.237,502,3.477,505,1.193,518,0.97,552,1.572,553,2.102,554,1.935,562,2.862,564,3.064,582,1.426,587,2.672,608,0.861,614,1.107,627,1.034,630,0.97,661,2.604,663,2.44,664,1.193,665,3.477,673,2.372,683,1.935,690,1.193,691,0.912,694,1.935,696,3.845,697,2.862,698,1.935,703,1.795,715,1.572,716,2.102,724,1.935,725,1.935,823,2.44,871,1.599,876,2.915,877,2.592,878,2.592,879,3.759,883,1.599,895,1.599,896,2.592,897,2.592,906,1.599,909,1.426,913,2.102,914,1.599,915,2.592,916,3.759,917,2.592,918,3.268,919,2.592,920,2.592,921,2.592,922,2.311,923,1.599,924,1.599,925,1.599,926,1.599,927,1.599,928,1.599,929,2.311,930,1.426,931,1.297,932,1.426,933,1.599,934,1.599,935,1.599,936,1.599,937,1.599,938,1.599,941,1.426,942,1.426,943,1.426,944,2.102,945,1.426,946,1.426,947,1.426,948,1.426,949,1.297,950,1.297,951,1.297,952,1.297,953,2.102,954,1.297,955,1.297,958,3.35,959,2.102,960,1.297,961,2.915,962,2.651,963,2.102,964,1.297,965,1.297,966,3.049,967,2.651,968,2.651,969,1.297,970,1.297,971,1.297,972,1.297,973,2.651,974,2.651,975,1.297,976,3.049,977,1.297,978,1.297,979,1.297,980,1.297,981,1.297,982,1.297,983,2.102,984,1.297,985,1.297,986,1.297,987,1.297,988,2.651,989,2.651,990,1.297,991,2.651,992,2.651,993,2.651,998,2.264,1025,1.599,1027,3.268,1035,3.268,1036,1.599,1068,3.268,1073,1.599,1104,1.599,1105,3.806,1106,3.018,1107,3.806,1108,1.862,1109,1.862,1110,1.862,1111,4.81,1112,1.862,1113,4.377,1114,1.862,1115,1.862,1116,1.599,1117,1.862,1118,1.862,1119,1.862,1120,1.862,1121,1.862,1122,1.862,1123,1.862,1124,1.862,1125,1.862,1126,1.862,1127,3.018,1128,1.862,1129,1.862,1130,1.862,1131,3.018,1132,1.862,1133,1.862,1134,1.862,1135,1.862,1136,1.862,1137,1.862,1138,3.018,1139,3.018,1140,3.018,1141,1.862,1142,1.862,1143,3.018]],["title/interfaces/Role.html",[0,0.437,1144,2.833]],["body/interfaces/Role.html",[0,0.636,2,1.729,3,0.276,4,0.245,5,0.245,7,0.445,8,1.021,9,1.624,10,1.376,11,0.736,12,0.019,13,1.857,14,0.276,15,0.016,16,0.016,70,3.485,1144,5.648,1145,4.621,1146,7.11]],["title/interfaces/Session.html",[0,0.437,1147,2.576]],["body/interfaces/Session.html",[0,0.6,2,1.629,3,0.26,4,0.231,5,0.231,7,0.42,8,0.985,10,1.419,11,0.753,12,0.019,13,1.686,14,0.26,15,0.015,16,0.015,434,1.898,552,3.63,557,3.048,715,3.63,900,4.855,998,4.146,1100,5.747,1147,4.316,1148,4.355,1149,6.97]],["title/modules/SharedModule.html",[226,2.054,237,1.926]],["body/modules/SharedModule.html",[3,0.209,4,0.185,5,0.185,12,0.019,14,0.209,15,0.013,16,0.013,18,2.149,43,1.101,44,0.682,45,0.48,86,2.149,88,2.149,96,2.047,100,1.906,102,2.149,104,2.149,170,1.597,228,1.879,229,2.637,237,3.988,239,2.989,240,2.257,242,3.201,243,2.257,245,2.989,256,3.201,258,2.116,262,4.121,263,1.991,277,3.45,280,4.121,282,1.517,1150,3.49,1151,3.49,1152,3.49,1153,4.063,1154,4.063,1155,4.063,1156,4.063,1157,4.063,1158,4.063,1159,4.063,1160,5.381,1161,4.063]],["title/components/ShorttopicsComponent.html",[17,0.495,102,1.078]],["body/components/ShorttopicsComponent.html",[3,0.167,4,0.147,5,0.147,7,0.268,8,0.733,9,0.741,10,0.86,11,0.555,12,0.019,14,0.167,15,0.011,16,0.011,17,0.717,18,0.945,19,1.556,20,1.151,21,1.151,22,1.151,23,1.151,26,1.095,27,1.095,28,2.367,29,2.244,31,1.556,33,1.556,35,1.279,36,2.179,37,0.9,38,1.401,41,0.858,42,1.72,43,0.927,44,0.544,45,0.383,70,2.628,71,1.929,72,1.811,74,1.151,75,1.635,76,1.635,77,0.945,78,2.072,79,1.151,80,1.089,81,1.151,82,0.945,83,1.151,84,0.945,85,1.151,86,0.945,87,1.151,88,0.945,89,1.151,90,0.945,91,1.151,92,0.858,93,1.151,94,0.9,95,1.151,96,0.9,97,1.151,98,0.9,99,1.151,100,0.9,101,1.151,102,1.702,103,1.151,104,0.945,105,1.151,106,0.9,107,1.151,108,0.9,109,0.817,110,1.095,111,0.9,112,1.095,113,1.151,122,1.151,123,0.9,136,1.5,146,1.589,149,1.868,156,1.689,159,1.801,160,1.801,161,2.131,163,1.589,164,1.929,165,1.689,173,2.48,175,2.259,180,2.48,185,1.801,193,2.259,207,1.5,221,2.628,223,2.861,224,1.689,282,1.21,325,2.742,370,1.5,427,1.689,431,2.803,433,0.945,434,0.817,437,2.107,439,1.151,443,1.343,444,2.785,447,2.785,448,2.079,451,1.042,452,1.343,469,1.689,471,2.4,472,2.56,495,1.689,499,1.929,587,1.801,597,1.801,598,3.53,608,1.5,609,3.041,624,2.484,625,2.484,626,2.484,627,1.801,628,3.437,629,2.484,630,1.689,631,3.53,682,2.978,699,3.19,764,2.259,791,3.53,797,3.21,799,3.53,801,4.394,809,2.259,810,2.259,813,2.484,931,2.259,1162,2.785,1163,4.609,1164,5.362,1165,4.609,1166,4.609,1167,3.243,1168,3.243,1169,3.243,1170,2.785,1171,2.785,1172,3.243,1173,2.785,1174,2.785,1175,2.785,1176,3.243,1177,3.243,1178,3.243,1179,3.243]],["title/interfaces/Thread.html",[0,0.437,667,2.054]],["body/interfaces/Thread.html",[0,0.59,2,1.603,3,0.256,4,0.227,5,0.227,7,0.413,8,0.975,9,1.583,10,1.416,11,0.767,12,0.019,13,1.881,14,0.256,15,0.015,16,0.015,402,3.256,557,3.031,667,3.407,691,3.397,695,3.61,801,4.443,1180,4.285,1181,5.308,1182,6.931,1183,5.308]],["title/injectables/ThreadService.html",[506,1.617,670,2.2]],["body/injectables/ThreadService.html",[3,0.223,4,0.197,5,0.197,7,0.359,9,0.99,10,1.162,11,0.644,12,0.019,13,1.835,14,0.223,15,0.014,16,0.014,35,1.558,37,1.203,38,1.493,41,1.484,43,1.025,44,0.727,45,0.512,80,1.162,115,2.578,136,2.004,146,3.051,254,2.407,287,2.206,290,2.407,320,2.206,339,1.895,433,1.814,434,1.568,437,2.447,439,1.538,451,1.392,453,2.004,454,1.895,458,2.778,475,2.004,506,2.455,507,2.578,510,2.778,511,4.48,515,2.778,518,2.257,613,2.407,647,4.299,650,3.018,651,3.018,655,3.018,667,2.407,668,3.018,670,3.339,695,2.923,699,3.917,702,2.257,709,2.578,911,2.778,998,2.578,1098,2.578,1184,3.722,1185,5.613,1186,4.821,1187,4.334,1188,5.613,1189,4.334,1190,5.613,1191,5.656,1192,4.334,1193,3.319,1194,4.334,1195,4.334,1196,3.722,1197,3.722,1198,3.722,1199,3.319,1200,3.722,1201,3.722,1202,3.319,1203,3.722,1204,4.334,1205,4.334]],["title/directives/ToggleDirective.html",[77,1.078,111,1.027]],["body/directives/ToggleDirective.html",[3,0.289,4,0.256,5,0.256,12,0.019,14,0.289,15,0.016,16,0.016,27,1.899,28,2.118,37,1.942,38,1.349,43,0.845,44,0.944,45,0.665,77,1.921,110,1.899,111,1.83,112,2.226,1206,4.831,1207,5.625]],["title/interfaces/Topic.html",[0,0.437,442,1.71]],["body/interfaces/Topic.html",[0,0.645,2,1.332,3,0.213,4,0.188,5,0.188,7,0.343,8,0.867,9,1.536,10,1.456,11,0.779,12,0.019,13,1.89,14,0.28,15,0.014,16,0.014,442,2.521,443,1.717,537,3.175,557,2.941,559,4.15,560,3.851,597,3.595,645,4.15,695,3.371,999,4.684,1012,4.684,1181,5.151,1183,5.151,1208,3.175,1209,5.776,1210,5.776,1211,5.776,1212,5.559,1213,5.776,1214,3.56]],["title/components/TopicComponent.html",[17,0.495,104,1.078]],["body/components/TopicComponent.html",[3,0.174,4,0.154,5,0.154,7,0.281,8,0.757,10,0.888,11,0.569,12,0.019,14,0.174,15,0.012,16,0.012,17,0.736,18,0.989,19,1.607,20,1.204,21,1.204,22,1.204,23,1.204,25,1.871,26,1.856,27,1.146,28,2.381,29,2.258,31,1.607,33,1.607,35,1.321,36,2.224,37,0.942,38,1.429,41,0.898,42,1.777,43,0.978,44,0.57,45,0.401,70,1.663,72,1.871,74,1.204,75,1.689,76,1.689,77,0.989,78,2.114,79,1.204,80,1.112,81,1.204,82,0.989,83,1.204,84,0.989,85,1.204,86,0.989,87,1.204,88,0.989,89,1.204,90,0.989,91,1.204,92,0.898,93,1.204,94,0.942,95,1.204,96,0.942,97,1.204,98,0.942,99,1.204,100,0.942,101,1.204,102,0.989,103,1.204,104,1.736,105,1.204,106,0.942,107,1.204,108,0.942,109,0.855,110,1.146,111,0.942,112,1.146,113,1.204,122,1.204,123,0.942,136,2.201,161,1.57,163,1.663,173,2.201,175,2.333,185,1.885,193,2.364,207,1.57,221,2.333,223,1.663,257,2.6,258,1.768,282,1.267,370,1.57,431,2.844,433,0.989,434,0.855,437,2.16,439,1.204,442,2.201,443,1.406,451,1.091,452,1.406,469,1.768,471,1.768,472,1.885,495,1.768,587,1.885,597,1.885,598,3.646,602,4.088,608,2.201,609,3.103,624,2.6,625,2.6,626,2.6,627,1.885,628,3.524,629,2.6,630,1.768,631,3.646,669,1.885,672,2.019,682,3.053,699,3.27,702,2.479,764,2.364,791,3.646,795,2.6,797,3.315,799,3.646,801,4.441,835,2.6,931,2.364,932,2.6,1170,2.915,1171,2.915,1173,2.915,1174,2.915,1215,2.915,1216,5.497,1217,4.76,1218,4.76,1219,3.394,1220,3.394,1221,4.76]],["title/injectables/TopicService.html",[431,1.617,506,1.617]],["body/injectables/TopicService.html",[3,0.217,4,0.131,5,0.131,7,0.239,9,1.546,10,1.354,11,0.689,12,0.019,13,1.887,14,0.148,15,0.01,16,0.01,35,1.175,37,0.801,38,1.624,41,1.761,43,0.885,44,0.484,45,0.341,80,1.243,109,1.067,115,1.716,136,2.557,138,2.782,146,3.017,149,0.84,254,1.602,287,2.173,290,2.352,295,1.261,320,2.565,339,1.261,427,2.205,431,1.852,433,1.941,434,1.678,437,2.565,439,1.023,442,1.958,443,2.44,449,2.519,451,0.927,453,1.334,454,1.261,458,3.217,475,1.958,506,1.852,507,1.716,510,1.849,511,3.947,515,1.849,518,2.205,519,2.209,520,1.849,521,1.716,522,2.009,582,2.209,597,2.787,599,3.851,613,1.602,620,3.637,638,3.243,641,3.243,645,4.184,647,4.715,650,3.851,651,3.851,653,3.243,654,3.243,655,2.949,669,1.602,691,1.413,695,3.399,702,2.613,709,2.519,718,3.243,801,2.714,802,3.637,885,2.477,911,3.217,998,2.519,999,2.009,1012,4.546,1019,2.477,1098,1.716,1186,3.637,1191,4.749,1193,2.209,1196,3.637,1197,3.637,1198,3.637,1199,3.243,1200,3.637,1201,3.637,1202,3.243,1203,3.637,1222,2.477,1223,4.234,1224,5.529,1225,4.234,1226,4.234,1227,4.234,1228,2.884,1229,4.234,1230,2.884,1231,2.884,1232,2.884,1233,2.884,1234,2.884,1235,4.234,1236,2.884,1237,4.234,1238,2.884,1239,2.884,1240,2.884,1241,4.234,1242,2.884,1243,4.234,1244,2.884,1245,2.884,1246,2.477,1247,2.884,1248,2.884,1249,4.234,1250,2.884,1251,2.884,1252,2.884,1253,2.884,1254,2.884,1255,2.884,1256,2.884,1257,2.884]],["title/interfaces/Topics.html",[0,0.437,443,1.532]],["body/interfaces/Topics.html",[0,0.665,2,1.397,3,0.223,4,0.198,5,0.198,7,0.36,8,0.894,9,1.559,10,1.455,11,0.771,12,0.019,13,1.885,14,0.289,15,0.014,16,0.014,442,2.011,443,2.331,537,5.05,557,2.986,559,2.788,560,2.587,597,2.415,645,2.788,695,2.265,999,4.756,1012,4.756,1181,5.23,1183,5.23,1208,3.331,1209,5.865,1210,5.865,1211,5.865,1212,3.735,1213,5.865,1214,5.663]],["title/components/TopicsComponent.html",[17,0.495,106,1.027]],["body/components/TopicsComponent.html",[3,0.17,4,0.151,5,0.151,7,0.274,8,0.744,9,0.756,11,0.61,12,0.019,13,1.179,14,0.17,15,0.012,16,0.012,17,0.726,18,0.965,19,1.579,20,1.175,21,1.175,22,1.175,23,1.175,25,1.839,26,1.831,27,1.118,28,2.374,29,2.251,31,1.579,33,1.579,35,1.299,36,2.2,37,0.92,38,1.548,41,0.876,42,1.746,43,1.018,44,0.556,45,0.392,74,1.175,75,1.66,76,1.66,77,0.965,78,2.092,79,1.175,80,1.1,81,1.175,82,0.965,83,1.175,84,0.965,85,1.175,86,0.965,87,1.175,88,0.965,89,1.175,90,0.965,91,1.175,92,0.876,93,1.175,94,0.92,95,1.175,96,0.92,97,1.175,98,0.92,99,1.175,100,0.92,101,1.175,102,0.965,103,1.175,104,0.965,105,1.175,106,1.636,107,1.175,108,0.92,109,0.834,110,1.118,111,0.92,112,1.118,113,1.175,122,1.925,123,1.506,136,2.164,149,1.363,159,1.84,160,2.598,164,1.971,165,1.725,180,1.532,185,1.84,282,1.236,295,1.448,320,1.302,427,3.07,430,3.946,431,2.822,433,0.965,434,0.834,437,2.444,439,1.175,443,2.247,448,2.999,451,1.064,452,2.247,552,2.437,590,4.018,597,3.826,599,3.778,608,1.532,609,3.07,669,1.84,672,1.971,673,2.901,674,1.971,682,3.013,691,2.658,692,2.123,700,2.999,763,2.999,764,2.307,787,2.123,1023,5.063,1089,4.018,1090,2.537,1258,2.845,1259,5.425,1260,4.679,1261,4.679,1262,3.312,1263,4.679,1264,3.312,1265,4.679,1266,3.312,1267,3.312,1268,3.312,1269,3.312,1270,5.894]],["title/interfaces/User.html",[0,0.437,109,0.932]],["body/interfaces/User.html",[0,0.276,2,0.751,3,0.12,4,0.106,5,0.106,7,0.193,8,0.574,9,1.298,10,1.345,11,0.687,12,0.019,13,1.492,14,0.186,15,0.011,16,0.009,45,0.276,80,0.824,109,1.354,123,1.003,141,3.156,149,1.566,287,2.406,308,1.627,309,4.356,310,1.627,311,1.627,312,1.627,313,1.627,314,1.627,315,1.627,316,1.298,317,2.516,318,2.516,320,2.864,321,1.627,324,1.627,325,1.39,326,4.399,327,3.445,328,4.657,329,4.188,330,1.498,331,2.516,332,2.516,333,1.627,334,2.516,335,2.516,336,1.498,337,3.077,338,3.186,339,2.174,340,2.516,341,1.627,342,1.627,343,4.396,344,2.516,345,1.498,346,3.077,347,1.627,348,1.627,349,2.832,350,3.186,351,2.516,352,3.958,353,1.627,354,1.627,355,1.627,356,1.627,357,2.316,358,1.627,359,1.627,360,1.627,361,2.516,362,2.316,363,1.145,364,1.627,365,1.627,366,1.627,367,1.627,368,1.627,369,3.445,370,2.043,371,1.627,372,1.627,373,2.516,374,1.627,375,1.627,376,1.627,377,1.627,378,1.627,379,1.627,380,1.627,381,1.627,382,1.627,383,1.627,384,1.627,385,1.627,386,1.627,387,1.627,388,2.316,389,1.627,390,1.627,391,1.627,392,1.627,393,1.627,394,1.627,395,1.627,396,1.627,397,1.627,398,1.627,399,1.627,400,1.627,401,1.627,402,3.145,403,1.627,404,1.498,405,2.316,406,1.39,407,1.498,408,1.39,409,1.498,410,1.627,411,1.498,412,1.627,413,1.498,414,2.316,415,1.498,416,1.498,417,1.627,418,1.39,419,0.918,420,4.307,434,1.79,545,1.498,548,2.007,550,2.007,552,2.589,553,3.462,554,3.186,555,3.462,556,3.807,557,2.174,558,3.807,559,3.186,560,2.957,561,3.103,562,2.149,563,2.516,564,2.149,565,2.767,566,2.767,567,2.767,568,2.767,569,2.767,570,2.767,571,2.767,572,2.767]],["title/components/UserComponent.html",[17,0.495,108,1.027]],["body/components/UserComponent.html",[3,0.115,4,0.159,5,0.102,7,0.186,8,0.556,11,0.445,12,0.019,14,0.115,15,0.009,16,0.009,17,0.576,18,0.653,19,1.181,20,0.795,21,0.795,22,0.795,23,0.795,26,0.757,27,0.757,28,2.241,29,2.118,31,1.181,33,1.181,37,0.622,38,1.166,43,0.877,44,0.376,45,0.265,72,2.195,74,0.795,75,1.241,76,1.241,77,0.653,78,1.725,79,0.795,80,1.042,81,0.795,82,0.653,83,0.795,84,0.653,85,0.795,86,0.653,87,0.795,88,0.653,89,0.795,90,0.653,91,0.795,92,0.593,93,0.795,94,0.622,95,0.795,96,0.622,97,0.795,98,0.622,99,0.795,100,0.622,101,0.795,102,0.653,103,0.795,104,0.653,105,0.795,106,0.622,107,0.795,108,1.349,109,1.628,110,0.757,111,0.622,112,0.757,113,0.795,122,1.527,123,1.194,156,2.531,157,3.231,159,1.245,160,1.245,161,1.617,163,1.098,164,1.333,165,1.822,169,4.264,170,1.691,173,1.036,175,2.86,180,1.989,181,3.385,182,2.242,194,3.581,197,1.437,202,2.242,207,1.617,214,1.437,219,1.167,221,2.108,224,1.822,282,0.837,294,1.925,402,1.714,419,1.91,427,2.745,431,2.552,433,0.653,434,0.564,437,1.691,439,0.795,443,1.782,451,0.72,452,1.449,469,1.822,486,3.741,490,3.379,491,3.379,492,3.116,493,3.379,494,3.379,495,2.745,496,3.87,497,3.136,498,4.403,499,4.086,500,4.403,501,4.403,502,3.741,505,1.437,555,2.436,557,1.53,560,2.081,562,2.081,608,1.036,609,2.531,627,1.245,630,1.167,669,1.245,672,1.333,673,2.443,674,1.333,682,2.389,697,2.081,700,2.242,792,2.679,794,2.679,809,1.561,810,1.561,823,1.437,851,1.716,876,2.679,929,3.295,930,1.716,941,2.679,942,2.679,943,2.679,944,2.996,945,2.679,946,2.679,947,2.679,948,2.679,949,1.561,950,1.561,951,1.561,952,1.561,953,2.436,954,1.561,955,1.561,956,1.925,957,3.004,958,3.672,959,2.436,960,1.561,962,2.996,963,2.436,964,1.561,965,1.561,966,3.385,967,2.996,968,2.996,969,1.561,970,1.561,971,1.561,972,1.561,973,2.996,974,2.996,975,1.561,976,3.385,977,1.561,978,1.561,979,1.561,980,1.561,981,1.561,982,1.561,983,2.436,984,1.561,985,1.561,986,1.561,987,1.561,988,2.996,989,2.996,990,1.561,991,2.996,992,2.996,993,2.996,1016,1.716,1081,3.004,1175,1.925,1271,1.925,1272,4.302,1273,3.498,1274,4.302,1275,2.241,1276,2.241,1277,3.498,1278,2.241,1279,3.498,1280,2.241,1281,3.498,1282,3.498,1283,3.498,1284,3.498,1285,3.498,1286,2.241,1287,3.498]],["title/modules/UserModule.html",[226,2.054,238,2.371]],["body/modules/UserModule.html",[3,0.265,4,0.235,5,0.235,12,0.019,14,0.265,15,0.016,16,0.016,43,1.054,44,0.867,45,0.611,108,2.028,170,2.03,228,2.389,229,3.071,237,3.804,238,4.782,239,3.481,240,2.869,242,3.728,243,3.481,245,3.481,252,3.598,256,3.728,258,2.691,1288,4.437,1289,4.437,1290,5.166,1291,5.166,1292,5.166]],["title/injectables/UserService.html",[506,1.617,673,1.617]],["body/injectables/UserService.html",[3,0.147,4,0.13,5,0.13,7,0.414,8,0.67,9,1.544,10,1.352,11,0.636,12,0.019,13,1.48,14,0.147,15,0.01,16,0.01,35,1.17,37,0.796,38,1.595,41,1.625,43,0.923,44,0.481,45,0.339,80,1.241,109,1.548,115,1.706,122,1.017,123,0.796,131,4.295,136,1.326,138,2.687,146,3.011,149,1.607,254,1.592,287,2.414,290,2.777,296,3.229,320,2.414,339,2.187,419,1.127,433,1.712,434,1.48,437,1.965,439,1.017,449,2.508,451,0.921,452,2.072,454,1.254,475,1.326,506,1.844,507,1.706,509,3.83,510,1.838,511,3.938,515,1.838,518,2.604,520,1.838,522,1.997,552,3.06,553,1.997,554,1.838,555,1.997,556,3.229,557,2.187,558,2.196,559,1.838,560,1.706,562,3.28,563,3.84,564,3.876,610,3.83,614,1.706,638,3.229,641,2.196,650,2.937,651,1.997,653,2.196,654,2.196,655,1.997,673,2.187,691,3.259,702,1.493,703,1.706,709,1.706,715,2.871,763,2.703,787,1.838,888,2.196,900,2.937,901,3.621,902,3.621,911,1.838,912,3.621,913,1.997,1016,2.196,1074,2.462,1098,1.706,1116,2.462,1147,1.997,1193,2.196,1199,3.83,1202,2.196,1246,3.621,1293,2.462,1294,5.001,1295,4.216,1296,4.216,1297,5.513,1298,2.867,1299,2.867,1300,4.216,1301,2.867,1302,2.867,1303,2.867,1304,4.216,1305,2.867,1306,4.216,1307,2.867,1308,2.867,1309,2.867,1310,2.867,1311,2.867,1312,2.867,1313,2.867,1314,2.867,1315,2.867,1316,2.462,1317,2.867,1318,2.867,1319,2.867,1320,5.513,1321,2.867,1322,5.001,1323,2.867,1324,2.867,1325,2.867,1326,4.216,1327,2.867,1328,2.867,1329,2.867,1330,2.867,1331,2.867,1332,4.216,1333,2.867,1334,2.867,1335,2.867,1336,2.867,1337,4.216,1338,4.216,1339,2.867,1340,2.867,1341,4.216,1342,2.867,1343,2.462,1344,2.867,1345,2.867,1346,2.867,1347,2.867,1348,2.867]],["title/coverage.html",[1349,4.338]],["body/coverage.html",[0,0.854,1,2.104,5,0.137,6,2.595,11,0.313,12,0.019,15,0.011,16,0.011,17,0.961,18,0.88,24,2.595,45,0.518,77,0.88,82,0.88,84,0.88,86,0.88,88,0.88,90,0.88,92,0.799,94,0.839,96,0.839,98,0.839,100,0.839,102,0.88,104,0.88,106,0.839,108,0.839,109,0.761,111,0.839,114,2.595,149,2.266,219,2.281,295,1.321,304,1.573,305,4.571,316,2.433,326,4.752,363,1.481,406,2.606,408,2.606,418,2.606,419,1.722,422,2.595,429,1.937,430,1.797,431,1.321,442,1.397,443,1.252,506,2.624,508,2.595,523,1.937,524,2.595,527,2.595,532,2.314,533,2.595,545,4.571,573,2.314,574,2.595,575,2.595,589,2.595,593,2.595,619,5.374,637,2.595,656,2.104,657,3.355,667,1.678,670,1.797,673,1.321,848,2.595,862,2.314,863,2.595,864,2.595,994,2.595,1098,1.797,1099,2.595,1101,2.314,1102,2.595,1104,2.595,1144,2.314,1145,2.595,1147,2.104,1148,2.595,1162,2.595,1180,2.595,1184,2.595,1206,2.595,1208,3.355,1215,2.595,1222,2.595,1258,2.595,1271,2.595,1293,2.595,1349,2.595,1350,3.021,1351,3.021,1352,3.021,1353,6.612,1354,3.021,1355,4.38,1356,5.153,1357,5.153,1358,6.933,1359,7.524,1360,3.762,1361,3.762,1362,3.762,1363,3.762,1364,3.762,1365,3.762,1366,5.652,1367,4.38,1368,3.021,1369,3.021,1370,4.38,1371,3.021,1372,2.595,1373,3.762,1374,2.595,1375,3.762,1376,2.595,1377,2.595,1378,3.021,1379,3.021]],["title/dependencies.html",[229,2.18,1380,2.364]],["body/dependencies.html",[12,0.019,15,0.016,16,0.016,44,0.89,229,2.597,247,5.466,248,4.874,258,2.76,263,2.597,282,1.978,439,1.88,900,3.691,1092,4.551,1316,4.551,1381,5.299,1382,7.493,1383,5.299,1384,6.364,1385,5.299,1386,5.299,1387,5.299,1388,5.299,1389,5.299,1390,5.299,1391,5.299,1392,5.299,1393,5.299,1394,5.299,1395,5.299,1396,5.299,1397,5.299,1398,5.299,1399,5.299]],["title/miscellaneous/functions.html",[1400,2.15,1401,3.821]],["body/miscellaneous/functions.html",[7,0.288,10,1.124,11,0.774,12,0.019,15,0.012,16,0.012,41,1.902,80,1.41,122,2.137,123,1.672,219,3.137,305,2.231,327,3.105,328,4.523,329,4.397,330,3.105,336,3.105,338,3.105,343,4.451,345,3.105,349,3.105,350,3.862,357,3.105,369,4.203,404,3.105,405,4.203,406,3.584,407,3.105,408,3.584,409,3.105,411,3.105,413,3.105,414,3.105,415,3.105,416,3.105,419,2.367,433,2.192,434,1.895,545,2.231,1360,5.174,1361,5.174,1362,5.174,1363,5.174,1364,5.174,1365,5.174,1400,2.424,1401,2.989,1402,6.123,1403,6.123]],["title/index.html",[7,0.256,1404,3.087,1405,3.087]],["body/index.html",[4,0.22,12,0.015,15,0.015,16,0.015,17,0.876,25,1.9,29,1.479,80,0.902,126,3.366,170,1.9,363,2.369,526,3.702,743,3.702,824,3.702,1090,5.505,1091,5.625,1343,5.167,1380,3.702,1406,6.016,1407,4.833,1408,6.55,1409,6.55,1410,4.833,1411,4.833,1412,6.016,1413,7.05,1414,7.289,1415,4.833,1416,4.833,1417,4.833,1418,4.833,1419,4.833,1420,4.833,1421,4.833,1422,4.833,1423,4.833,1424,6.55,1425,4.833,1426,6.854,1427,4.833,1428,4.833,1429,4.833,1430,4.833,1431,6.016,1432,6.016,1433,6.854,1434,4.833,1435,6.016,1436,4.833,1437,4.833,1438,4.833,1439,4.833,1440,6.016,1441,4.833,1442,4.833,1443,4.833,1444,4.833,1445,4.833,1446,6.55,1447,4.833,1448,4.833,1449,4.833,1450,3.702,1451,4.833,1452,4.833]],["title/modules.html",[228,2.336]],["body/modules.html",[12,0.016,15,0.016,16,0.016,227,3.873,228,2.572,234,3.565,235,3.565,236,3.565,237,2.896,238,3.565,248,5.69,632,3.873,1453,7.429,1454,7.429,1455,7.501,1456,5.561,1457,5.561]],["title/overview.html",[1450,3.869]],["body/overview.html",[2,1.25,12,0.019,15,0.013,16,0.013,18,2.019,19,1.313,77,1.134,82,2.019,84,1.72,86,2.019,88,2.019,90,1.72,92,1.832,94,1.639,96,1.923,98,1.639,100,1.639,102,2.019,104,2.019,106,1.639,108,1.639,111,1.639,143,2.026,170,1.529,227,5.283,228,1.799,229,2.562,230,3.342,231,3.342,232,3.342,233,3.342,234,3.785,235,4.347,236,4.662,237,3.987,238,4.441,239,2.903,240,2.161,281,2.71,325,2.315,507,2.315,540,2.98,632,4.396,633,3.342,819,2.98,837,3.342,838,3.342,839,3.342,855,3.342,856,3.342,1150,3.342,1151,3.342,1152,3.342,1288,3.342,1289,3.342,1450,2.98,1458,3.891,1459,3.891,1460,3.891,1461,3.891]],["title/properties.html",[8,0.707,1380,2.364]],["body/properties.html",[8,0.95,12,0.018,15,0.017,16,0.017,526,4.579,1462,5.978]],["title/routes.html",[281,3.518]],["body/routes.html",[12,0.017,15,0.017,16,0.017,281,4.194]],["title/miscellaneous/variables.html",[1400,2.15,1463,3.821]],["body/miscellaneous/variables.html",[7,0.328,9,1.452,11,0.705,12,0.019,15,0.013,16,0.013,80,1.186,109,0.997,122,2.35,123,1.839,149,1.986,205,3.146,304,2.062,305,2.538,306,4.051,309,4.819,343,4.472,370,2.446,388,3.818,402,2.592,418,3.782,419,2.079,420,4.819,421,3.032,545,2.538,562,3.146,563,3.684,564,3.146,565,4.051,566,4.051,567,4.051,568,4.051,569,4.051,570,4.051,571,4.051,572,4.051,725,3.391,1372,3.4,1373,5.459,1374,3.4,1375,3.4,1376,4.543,1377,4.543,1400,2.758,1402,3.4,1403,3.4,1463,3.4,1464,5.289,1465,3.959,1466,3.959,1467,3.959,1468,3.959,1469,3.959,1470,5.289]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1462,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["0.3s",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5rem",{"_index":937,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["0/1",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":923,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["004dff",{"_index":493,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["0054b0",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["006dc9",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["00a0fc",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["0px",{"_index":503,"title":{},"body":{"components/CategoryComponent.html":{}}}],["1",{"_index":143,"title":{"classes/Convert-1.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["1.0.4",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":819,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"overview.html":{}}}],["100",{"_index":630,"title":{},"body":{"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["100px",{"_index":813,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{}}}],["100vh",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["12px",{"_index":1173,"title":{},"body":{"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["13.2.0",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["13.2.4",{"_index":1410,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["138",{"_index":1086,"title":{},"body":{"components/PostComponent.html":{}}}],["14.0.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1459,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":1461,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":938,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["2",{"_index":325,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/ShorttopicsComponent.html":{},"interfaces/User.html":{},"overview.html":{}}}],["2.3.0",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1043,"title":{},"body":{"components/PostComponent.html":{}}}],["200px",{"_index":1285,"title":{},"body":{"components/UserComponent.html":{}}}],["20px",{"_index":823,"title":{},"body":{"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["211",{"_index":1143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["235",{"_index":822,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["23px",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":1084,"title":{},"body":{"components/PostComponent.html":{}}}],["25px",{"_index":951,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["2px",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":602,"title":{},"body":{"components/ForumComponent.html":{},"components/TopicComponent.html":{}}}],["305px",{"_index":473,"title":{},"body":{"components/CategoryComponent.html":{}}}],["30px",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["333",{"_index":940,"title":{},"body":{"components/NavbarComponent.html":{}}}],["333333",{"_index":482,"title":{},"body":{"components/CategoryComponent.html":{}}}],["4",{"_index":1286,"title":{},"body":{"components/UserComponent.html":{}}}],["4.1.1",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":927,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["45px",{"_index":834,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["480px",{"_index":1141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["5",{"_index":1460,"title":{},"body":{"overview.html":{}}}],["50",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{}}}],["500px",{"_index":812,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["50px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["555",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["55px",{"_index":631,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["5px",{"_index":469,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["600",{"_index":496,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["60px",{"_index":830,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["68",{"_index":957,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserComponent.html":{}}}],["7",{"_index":1458,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":627,"title":{},"body":{"components/ForumComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["743ad5",{"_index":934,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["777",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["7s",{"_index":500,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["80px",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["82",{"_index":1088,"title":{},"body":{"components/PostComponent.html":{}}}],["860089",{"_index":494,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["_filter",{"_index":760,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["_filter(value",{"_index":754,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["_usuario",{"_index":1294,"title":{},"body":{"injectables/UserService.html":{}}}],["a(r(\"category",{"_index":322,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{}}}],["a(r(\"user",{"_index":561,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["a(typ",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["a.nav",{"_index":920,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["absolute",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["accessors",{"_index":763,"title":{},"body":{"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{}}}],["accion",{"_index":889,"title":{},"body":{"components/NavbarComponent.html":{}}}],["acciona",{"_index":1021,"title":{},"body":{"components/PostComponent.html":{}}}],["action",{"_index":1060,"title":{},"body":{"components/PostComponent.html":{}}}],["activatedroute",{"_index":609,"title":{},"body":{"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["active",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["actual_component",{"_index":113,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["add",{"_index":743,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"index.html":{}}}],["add(event",{"_index":740,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["additional",{"_index":369,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["adipisicing",{"_index":53,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["advertisement",{"_index":1,"title":{"interfaces/Advertisement.html":{}},"body":{"interfaces/Advertisement.html":{},"interfaces/Config.html":{},"coverage.html":{}}}],["advertisement.interface",{"_index":538,"title":{},"body":{"interfaces/Config.html":{}}}],["advertisements",{"_index":30,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["advertisements'},{'name",{"_index":81,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["advertisements.component.css",{"_index":32,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["advertisements.component.html",{"_index":34,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["advertisements/advertisements.component",{"_index":1156,"title":{},"body":{"modules/SharedModule.html":{}}}],["advertisementscomponent",{"_index":18,"title":{"components/AdvertisementsComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["against",{"_index":355,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["al",{"_index":518,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["alguno",{"_index":468,"title":{},"body":{"components/CategoryComponent.html":{}}}],["align",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["align2",{"_index":588,"title":{},"body":{"components/FooterComponent.html":{}}}],["align:center",{"_index":941,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["allfruits",{"_index":732,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["amet",{"_index":51,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["angular",{"_index":1408,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/keycodes",{"_index":660,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["angular/common",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"components/TopicComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"modules/IndexModule.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":678,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["angular/material/card",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":676,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{}}}],["angular/material/divider",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":844,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["angular/material/grid",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/IndexModule.html":{}}}],["angular/material/icon",{"_index":847,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["angular/material/progress",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":498,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["animation:inputhighlighter",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["animations",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["aplicacion",{"_index":887,"title":{},"body":{"components/NavbarComponent.html":{}}}],["apodo",{"_index":553,"title":{},"body":{"classes/Convert-1.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["apodo_escritor",{"_index":1209,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["app",{"_index":29,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":733,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["appmodule",{"_index":227,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":234,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptoggle",{"_index":112,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["array",{"_index":1303,"title":{},"body":{"injectables/UserService.html":{}}}],["array.isarray(typ",{"_index":391,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["array.isarray(val",{"_index":371,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["arrayitems",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["artifacts",{"_index":1427,"title":{},"body":{"index.html":{}}}],["asignamos",{"_index":1340,"title":{},"body":{"injectables/UserService.html":{}}}],["asigno",{"_index":618,"title":{},"body":{"components/ForumComponent.html":{}}}],["aspernatur",{"_index":56,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["asserts",{"_index":313,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["async",{"_index":1270,"title":{},"body":{"components/TopicsComponent.html":{}}}],["async)?.apodo",{"_index":1081,"title":{},"body":{"components/PostComponent.html":{},"components/UserComponent.html":{}}}],["async)?.apodo_escritor",{"_index":790,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["async)?.cuerpo",{"_index":798,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["async)?.descripcion",{"_index":623,"title":{},"body":{"components/ForumComponent.html":{}}}],["async)?.escritor",{"_index":791,"title":{},"body":{"components/FulltopicComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["async)?.fecha",{"_index":799,"title":{},"body":{"components/FulltopicComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["async)?.nombre",{"_index":622,"title":{},"body":{"components/ForumComponent.html":{},"components/PostComponent.html":{}}}],["async)?.pais",{"_index":796,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["async)?.tipo",{"_index":789,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["async)?.titulo",{"_index":797,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["async)?.ultima_visita",{"_index":794,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/UserComponent.html":{}}}],["auto",{"_index":476,"title":{},"body":{"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1419,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":651,"title":{},"body":{"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["available",{"_index":1457,"title":{},"body":{"modules.html":{}}}],["axios",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":519,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/TopicService.html":{}}}],["background",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Config.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["background:transparent",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["bar",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["bar:after",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["bar:before",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["bars",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["between",{"_index":810,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["black",{"_index":587,"title":{},"body":{"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["block",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["body.classlist.add('dark",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["body.classlist.remove('dark",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["body.dark",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":1100,"title":{},"body":{"interfaces/ProrumsResponse.html":{},"interfaces/Session.html":{}}}],["bootstrap",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["border:none",{"_index":955,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["borrado",{"_index":1210,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["borrar",{"_index":718,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"injectables/TopicService.html":{}}}],["borrar(id",{"_index":1229,"title":{},"body":{"injectables/TopicService.html":{}}}],["boton",{"_index":891,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{}}}],["botones",{"_index":820,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["bottom",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["bottom:1px",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["bottom:50px",{"_index":942,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["box",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":818,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["browse",{"_index":1455,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1426,"title":{},"body":{"index.html":{}}}],["button",{"_index":922,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["c00",{"_index":928,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["cambiar",{"_index":1205,"title":{},"body":{"injectables/ThreadService.html":{}}}],["capabilities",{"_index":1444,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1044,"title":{},"body":{"components/PostComponent.html":{}}}],["card",{"_index":70,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/Role.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["card.core",{"_index":1094,"title":{},"body":{"components/PostComponent.html":{}}}],["card__primary",{"_index":1059,"title":{},"body":{"components/PostComponent.html":{}}}],["caso",{"_index":1128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cast",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cast(json.parse(json",{"_index":321,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["cast(val",{"_index":404,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["categoria",{"_index":645,"title":{},"body":{"injectables/ForumService.html":{},"components/PostComponent.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{}}}],["categorias",{"_index":450,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/IndexComponent.html":{}}}],["categories",{"_index":425,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/IndexComponent.html":{}}}],["category",{"_index":304,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"classes/Convert.html":{},"components/IndexComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category'},{'name",{"_index":85,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["category.component.css",{"_index":423,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.component.html",{"_index":424,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.description",{"_index":463,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.name",{"_index":462,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category/category.component",{"_index":859,"title":{},"body":{"modules/IndexModule.html":{}}}],["categorycomponent",{"_index":84,"title":{"components/CategoryComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice",{"_index":429,"title":{"injectables/CategoryService.html":{}},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/IndexComponent.html":{},"coverage.html":{}}}],["categorytojson",{"_index":541,"title":{},"body":{"classes/Convert.html":{}}}],["categorytojson(value",{"_index":323,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{}}}],["categoría",{"_index":1039,"title":{},"body":{"components/PostComponent.html":{}}}],["cc0000",{"_index":73,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{}}}],["center",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["change",{"_index":1421,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":523,"title":{"interfaces/Changelog.html":{}},"body":{"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"coverage.html":{}}}],["changelog'},{'name",{"_index":87,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["changelog.component.css",{"_index":528,"title":{},"body":{"components/ChangelogComponent.html":{}}}],["changelog.component.html",{"_index":529,"title":{},"body":{"components/ChangelogComponent.html":{}}}],["changelog.interface",{"_index":539,"title":{},"body":{"interfaces/Config.html":{}}}],["changelog/changelog.component",{"_index":1155,"title":{},"body":{"modules/SharedModule.html":{}}}],["changelogcomponent",{"_index":86,"title":{"components/ChangelogComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":525,"title":{},"body":{"interfaces/Changelog.html":{}}}],["check",{"_index":1449,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1439,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":483,"title":{},"body":{"components/CategoryComponent.html":{}}}],["circle",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":45,"title":{"classes/Convert.html":{},"classes/Convert-1.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":540,"title":{},"body":{"classes/Convert.html":{},"classes/Convert-1.html":{},"overview.html":{}}}],["clear",{"_index":745,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["cli",{"_index":1409,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_forummodule",{"_index":633,"title":{},"body":{"modules/ForumModule.html":{},"overview.html":{}}}],["cluster_forummodule_imports",{"_index":634,"title":{},"body":{"modules/ForumModule.html":{}}}],["cluster_fulltopicmodule",{"_index":837,"title":{},"body":{"modules/FulltopicModule.html":{},"overview.html":{}}}],["cluster_fulltopicmodule_declarations",{"_index":839,"title":{},"body":{"modules/FulltopicModule.html":{},"overview.html":{}}}],["cluster_fulltopicmodule_exports",{"_index":838,"title":{},"body":{"modules/FulltopicModule.html":{},"overview.html":{}}}],["cluster_indexmodule",{"_index":855,"title":{},"body":{"modules/IndexModule.html":{},"overview.html":{}}}],["cluster_indexmodule_declarations",{"_index":856,"title":{},"body":{"modules/IndexModule.html":{},"overview.html":{}}}],["cluster_indexmodule_imports",{"_index":857,"title":{},"body":{"modules/IndexModule.html":{}}}],["cluster_sharedmodule",{"_index":1150,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1152,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1151,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1288,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1289,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1290,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":824,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"index.html":{}}}],["coinciden",{"_index":1134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":72,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["color:#888",{"_index":945,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["color:black",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["color:rgb(82",{"_index":1087,"title":{},"body":{"components/PostComponent.html":{}}}],["color:white",{"_index":1287,"title":{},"body":{"components/UserComponent.html":{}}}],["column",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["comma",{"_index":658,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["command",{"_index":1440,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["component",{"_index":17,"title":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":79,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["componentes",{"_index":884,"title":{},"body":{"components/NavbarComponent.html":{}}}],["components",{"_index":19,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["con",{"_index":582,"title":{},"body":{"components/FooterComponent.html":{},"components/RegisterComponent.html":{},"injectables/TopicService.html":{}}}],["conexión",{"_index":793,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["config",{"_index":532,"title":{"interfaces/Config.html":{}},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["confirmada",{"_index":1121,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmar",{"_index":1139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1113,"title":{},"body":{"components/RegisterComponent.html":{}}}],["conformado",{"_index":1196,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["consectetur",{"_index":52,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["console.log(name",{"_index":1118,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(resp",{"_index":914,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(resp.ok",{"_index":1034,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(resp.resp",{"_index":1052,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.route.params",{"_index":1056,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.threads",{"_index":726,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["const",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(categoryservice",{"_index":428,"title":{},"body":{"components/CategoryComponent.html":{}}}],["constructor(fb",{"_index":871,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(forumservice",{"_index":600,"title":{},"body":{"components/ForumComponent.html":{}}}],["constructor(httpclient",{"_index":510,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":451,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(topicservice",{"_index":764,"title":{},"body":{"components/FulltopicComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{}}}],["constructor(userservice",{"_index":851,"title":{},"body":{"components/IndexComponent.html":{},"components/PostComponent.html":{},"components/UserComponent.html":{}}}],["content",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["context",{"_index":1376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contrario",{"_index":1129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contraseña",{"_index":916,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["contraseñas",{"_index":1133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controller",{"_index":698,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["convert",{"_index":316,"title":{"classes/Convert.html":{},"classes/Convert-1.html":{}},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["converts",{"_index":308,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["correo",{"_index":554,"title":{},"body":{"classes/Convert-1.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["country",{"_index":573,"title":{"interfaces/Country.html":{}},"body":{"interfaces/Country.html":{},"coverage.html":{}}}],["cover",{"_index":932,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TopicComponent.html":{}}}],["coverage",{"_index":1349,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":1123,"title":{},"body":{"components/RegisterComponent.html":{}}}],["css",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{}}}],["cuenta",{"_index":918,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["cuerpo",{"_index":695,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{}}}],["cuerpo).subscribe",{"_index":1050,"title":{},"body":{"components/PostComponent.html":{}}}],["cursor",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["d",{"_index":362,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FulltopicComponent.html":{},"interfaces/User.html":{}}}],["d53a9d",{"_index":935,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["daniel",{"_index":583,"title":{},"body":{"components/FooterComponent.html":{}}}],["dark",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["darktheme",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":402,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Changelog.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/PostComponent.html":{},"interfaces/Thread.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["date(val",{"_index":364,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["date:'fulldate",{"_index":800,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["date:'medium",{"_index":795,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/TopicComponent.html":{}}}],["date:'short",{"_index":1172,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["date:\\'fulldate",{"_index":836,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["date:\\'medium",{"_index":835,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/TopicComponent.html":{}}}],["date:\\'short",{"_index":1179,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["datepipe",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/FulltopicModule.html":{},"components/TopicComponent.html":{}}}],["datos",{"_index":612,"title":{},"body":{"components/ForumComponent.html":{}}}],["ddd",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["de",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["debe",{"_index":1040,"title":{},"body":{"components/PostComponent.html":{}}}],["deben",{"_index":1046,"title":{},"body":{"components/PostComponent.html":{}}}],["declarations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["decoration",{"_index":624,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["decorators",{"_index":779,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["default",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":703,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1115,"title":{},"body":{"components/RegisterComponent.html":{}}}],["delay(2000",{"_index":1126,"title":{},"body":{"components/RegisterComponent.html":{}}}],["deleniti",{"_index":69,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["dependencies",{"_index":229,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":596,"title":{},"body":{"components/ForumComponent.html":{}}}],["descripcion",{"_index":590,"title":{},"body":{"interfaces/Forum.html":{},"components/TopicsComponent.html":{}}}],["descripcion_foro",{"_index":1214,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["description",{"_index":306,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"miscellaneous/variables.html":{}}}],["desde",{"_index":1019,"title":{},"body":{"components/PostComponent.html":{},"injectables/TopicService.html":{}}}],["desloguea",{"_index":905,"title":{},"body":{"components/NavbarComponent.html":{}}}],["destructuring",{"_index":1025,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["dev",{"_index":1416,"title":{},"body":{"index.html":{}}}],["development",{"_index":1411,"title":{},"body":{"index.html":{}}}],["devuelva",{"_index":1069,"title":{},"body":{"components/PostComponent.html":{}}}],["devuelve",{"_index":1202,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["direction",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["directive",{"_index":77,"title":{"directives/ToggleDirective.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1425,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1430,"title":{},"body":{"index.html":{}}}],["display",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["display:block",{"_index":946,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["dist",{"_index":1429,"title":{},"body":{"index.html":{}}}],["document.body",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.add('dark",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('dark",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":49,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["dom",{"_index":22,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["dynamic",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1437,"title":{},"body":{"index.html":{}}}],["ea",{"_index":63,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["eaque",{"_index":57,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["ease",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["edge",{"_index":484,"title":{},"body":{"components/CategoryComponent.html":{}}}],["edit",{"_index":1001,"title":{},"body":{"components/PostComponent.html":{}}}],["edit/:id",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editar",{"_index":722,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["edittopic",{"_index":1223,"title":{},"body":{"injectables/TopicService.html":{}}}],["edittopic(id",{"_index":1231,"title":{},"body":{"injectables/TopicService.html":{}}}],["edittopic(id:number",{"_index":1254,"title":{},"body":{"injectables/TopicService.html":{}}}],["ee00ff",{"_index":492,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["ejecutarse",{"_index":1203,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["ejecutese",{"_index":1120,"title":{},"body":{"components/RegisterComponent.html":{}}}],["el",{"_index":702,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["element",{"_index":76,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["elementref",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["elit",{"_index":54,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["email",{"_index":876,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["emoji",{"_index":1103,"title":{},"body":{"interfaces/Reaction.html":{}}}],["en",{"_index":1336,"title":{},"body":{"injectables/UserService.html":{}}}],["end",{"_index":1090,"title":{},"body":{"components/PostComponent.html":{},"components/TopicsComponent.html":{},"index.html":{}}}],["enter",{"_index":659,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["entry",{"_index":1197,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["environment",{"_index":1373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envío",{"_index":1037,"title":{},"body":{"components/PostComponent.html":{}}}],["error",{"_index":1131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["error(`invalid",{"_index":332,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["es",{"_index":1028,"title":{},"body":{"components/PostComponent.html":{}}}],["escritor",{"_index":1211,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["esta",{"_index":1068,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["estar",{"_index":1047,"title":{},"body":{"components/PostComponent.html":{}}}],["este",{"_index":912,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["et",{"_index":60,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["eum",{"_index":62,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["eveniet",{"_index":66,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["event",{"_index":768,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["event.chipinput!.clear",{"_index":746,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["event.value",{"_index":741,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["events:none",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["ex",{"_index":59,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["exclusivo",{"_index":1315,"title":{},"body":{"injectables/UserService.html":{}}}],["execute",{"_index":1435,"title":{},"body":{"index.html":{}}}],["expected",{"_index":333,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{}}}],["f5f7fa",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["fallido",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":388,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["falta",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["family",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{}}}],["fb",{"_index":683,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["fecha",{"_index":1181,"title":{},"body":{"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["fecha_actual",{"_index":997,"title":{},"body":{"components/PostComponent.html":{}}}],["fecha_registro",{"_index":558,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fetch",{"_index":647,"title":{},"body":{"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["ff00ea",{"_index":481,"title":{},"body":{"components/CategoryComponent.html":{}}}],["fff",{"_index":488,"title":{},"body":{"components/CategoryComponent.html":{}}}],["ffffff",{"_index":505,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["field",{"_index":845,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1422,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1175,"title":{},"body":{"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["filteredfruits",{"_index":730,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["filtervalue",{"_index":755,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["firefox",{"_index":480,"title":{},"body":{"components/CategoryComponent.html":{}}}],["firma",{"_index":555,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["first",{"_index":1442,"title":{},"body":{"index.html":{}}}],["fit",{"_index":931,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["flex",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["float",{"_index":831,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["fluid",{"_index":629,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["font",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["footer",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":89,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["footer.component.css",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1159,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercomponent",{"_index":88,"title":{"components/FooterComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":697,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["formbuilder",{"_index":661,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":662,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{}}}],["formgroup",{"_index":663,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":1160,"title":{},"body":{"modules/SharedModule.html":{}}}],["formulario",{"_index":893,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{}}}],["foro",{"_index":597,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{}}}],["foros",{"_index":461,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/ForumService.html":{}}}],["forum",{"_index":295,"title":{"interfaces/Forum.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"classes/Convert.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["forum'},{'name",{"_index":91,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["forum.component.css",{"_index":594,"title":{},"body":{"components/ForumComponent.html":{}}}],["forum.component.html",{"_index":595,"title":{},"body":{"components/ForumComponent.html":{}}}],["forum.interface",{"_index":307,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{}}}],["forum/forum.component",{"_index":861,"title":{},"body":{"modules/IndexModule.html":{}}}],["forumcomponent",{"_index":90,"title":{"components/ForumComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forummodule",{"_index":632,"title":{"modules/ForumModule.html":{}},"body":{"modules/ForumModule.html":{},"modules.html":{},"overview.html":{}}}],["forums",{"_index":426,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/ForumService.html":{}}}],["forumservice",{"_index":430,"title":{"injectables/ForumService.html":{}},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/TopicsComponent.html":{},"coverage.html":{}}}],["foto",{"_index":557,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/Forum.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/Session.html":{},"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["foto_foro",{"_index":1212,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["fruit",{"_index":656,"title":{"interfaces/Fruit.html":{}},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"coverage.html":{}}}],["fruit.tolowercase().includes(filtervalue",{"_index":758,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["fruitctrl",{"_index":729,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["fruitinput",{"_index":739,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["full",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulltopic",{"_index":679,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["fulltopic'},{'name",{"_index":93,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["fulltopic.component",{"_index":841,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["fulltopic.component.css",{"_index":681,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["fulltopic.component.html",{"_index":680,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["fulltopic/fulltopic.component",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulltopic/fulltopic.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["fulltopiccomponent",{"_index":92,"title":{"components/FulltopicComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fulltopicmodule",{"_index":235,"title":{"modules/FulltopicModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FulltopicModule.html":{},"modules.html":{},"overview.html":{}}}],["function",{"_index":326,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["function(el",{"_index":1063,"title":{},"body":{"components/PostComponent.html":{}}}],["functions",{"_index":1401,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1445,"title":{},"body":{"index.html":{}}}],["generales",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["generate",{"_index":1424,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1407,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["getall",{"_index":1224,"title":{},"body":{"injectables/TopicService.html":{}}}],["getbyforum",{"_index":1185,"title":{},"body":{"injectables/ThreadService.html":{}}}],["getbyforum(id",{"_index":1188,"title":{},"body":{"injectables/ThreadService.html":{}}}],["getbyid",{"_index":638,"title":{},"body":{"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["getbyid(id",{"_index":641,"title":{},"body":{"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["getbyid2",{"_index":1225,"title":{},"body":{"injectables/TopicService.html":{}}}],["getbyid2(id",{"_index":1235,"title":{},"body":{"injectables/TopicService.html":{}}}],["getbyidnotobserver",{"_index":1295,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyidnotobserver(id",{"_index":1300,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyuser",{"_index":1226,"title":{},"body":{"injectables/TopicService.html":{}}}],["getbyuser(user",{"_index":1237,"title":{},"body":{"injectables/TopicService.html":{}}}],["getforums",{"_index":639,"title":{},"body":{"injectables/ForumService.html":{}}}],["getforums(categoria",{"_index":643,"title":{},"body":{"injectables/ForumService.html":{}}}],["getlist",{"_index":509,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/UserService.html":{}}}],["getlist():array",{"_index":1317,"title":{},"body":{"injectables/UserService.html":{}}}],["getprops",{"_index":350,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["getsession",{"_index":1296,"title":{},"body":{"injectables/UserService.html":{}}}],["getsession(mail",{"_index":1304,"title":{},"body":{"injectables/UserService.html":{}}}],["getter",{"_index":888,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":1404,"title":{"index.html":{}},"body":{}}],["gettopics",{"_index":1227,"title":{},"body":{"injectables/TopicService.html":{}}}],["gettopics(forum",{"_index":1239,"title":{},"body":{"injectables/TopicService.html":{}}}],["getusuario",{"_index":787,"title":{},"body":{"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{}}}],["go",{"_index":1448,"title":{},"body":{"index.html":{}}}],["goldberg",{"_index":586,"title":{},"body":{"components/FooterComponent.html":{}}}],["gradient",{"_index":499,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["gradient(68deg",{"_index":491,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["gradient(to",{"_index":933,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["graph",{"_index":1456,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1125,"title":{},"body":{"components/RegisterComponent.html":{}}}],["grey",{"_index":1174,"title":{},"body":{"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["groove",{"_index":504,"title":{},"body":{"components/CategoryComponent.html":{}}}],["group",{"_index":949,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["guardamos",{"_index":1335,"title":{},"body":{"injectables/UserService.html":{}}}],["guardar",{"_index":1283,"title":{},"body":{"components/UserComponent.html":{}}}],["gutter",{"_index":478,"title":{},"body":{"components/CategoryComponent.html":{}}}],["h2",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["h3",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["h5",{"_index":470,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["h6",{"_index":1177,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["header",{"_index":625,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["height",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["height:3px",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["height:60",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["help",{"_index":1446,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":827,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["highlight",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["highlighter",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["hilo.cuerpo",{"_index":805,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["hilo.fecha",{"_index":807,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["hilo.usuario",{"_index":806,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["hostbinding",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":75,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["http://localhost:3000/auth/login",{"_index":1331,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3000/auth/register",{"_index":1342,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3000/auth/renew",{"_index":1347,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3000/post",{"_index":1253,"title":{},"body":{"injectables/TopicService.html":{}}}],["http://localhost:3000/post/edit",{"_index":1255,"title":{},"body":{"injectables/TopicService.html":{}}}],["http://localhost:3000/post/thread",{"_index":1195,"title":{},"body":{"injectables/ThreadService.html":{}}}],["http://localhost:4200",{"_index":1418,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":511,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/IndexModule.html":{}}}],["httpheaders",{"_index":1311,"title":{},"body":{"injectables/UserService.html":{}}}],["icon",{"_index":1058,"title":{},"body":{"components/PostComponent.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Advertisement.html":{},"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"interfaces/Language.html":{},"components/PostComponent.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["id_advertisement",{"_index":534,"title":{},"body":{"interfaces/Config.html":{}}}],["id_categoria_fk",{"_index":591,"title":{},"body":{"interfaces/Forum.html":{}}}],["id_changelog",{"_index":535,"title":{},"body":{"interfaces/Config.html":{}}}],["id_country_fk",{"_index":572,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["id_foro",{"_index":599,"title":{},"body":{"components/ForumComponent.html":{},"components/PostComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{}}}],["id_foro_fk",{"_index":1213,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["id_language_fk",{"_index":570,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["id_role_fk",{"_index":571,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["id_tema",{"_index":699,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{}}}],["id_tema_fk",{"_index":1182,"title":{},"body":{"interfaces/Thread.html":{}}}],["id_user",{"_index":1274,"title":{},"body":{"components/UserComponent.html":{}}}],["id_usuario",{"_index":1191,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["id_usuario_fk",{"_index":1183,"title":{},"body":{"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["identifier",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["if(!resp.ok",{"_index":1067,"title":{},"body":{"components/PostComponent.html":{}}}],["if(password",{"_index":1119,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(resp.ok",{"_index":716,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["if(this.darktheme",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.topicform.valid",{"_index":1026,"title":{},"body":{"components/PostComponent.html":{}}}],["image",{"_index":929,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["img",{"_index":628,"title":{},"body":{"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["imguwu",{"_index":925,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["implements",{"_index":25,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"index.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["importacion",{"_index":1313,"title":{},"body":{"injectables/UserService.html":{}}}],["important",{"_index":471,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["importantes",{"_index":886,"title":{},"body":{"components/NavbarComponent.html":{}}}],["importo",{"_index":453,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["imports",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1093,"title":{},"body":{"components/PostComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":95,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["index.component",{"_index":860,"title":{},"body":{"modules/IndexModule.html":{}}}],["index.component.css",{"_index":849,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.html",{"_index":850,"title":{},"body":{"components/IndexComponent.html":{}}}],["index/index.component",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["index/index.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["indexcomponent",{"_index":94,"title":{"components/IndexComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["indexmodule",{"_index":236,"title":{"modules/IndexModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IndexModule.html":{},"modules.html":{},"overview.html":{}}}],["infinite",{"_index":501,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["ingresar",{"_index":915,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["iniciado",{"_index":1221,"title":{},"body":{"components/TopicComponent.html":{}}}],["inicio",{"_index":907,"title":{},"body":{"components/NavbarComponent.html":{}}}],["injectable",{"_index":506,"title":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":507,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":608,"title":{},"body":{"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["input('id_tema",{"_index":1169,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["input:focus",{"_index":958,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["input:valid",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["input[type=checkbox",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["input[type=checkbox]:checked",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["inputhighlighter",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["inputs",{"_index":598,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["interesar",{"_index":467,"title":{},"body":{"components/CategoryComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Advertisement.html":{},"interfaces/Category.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"interfaces/Fruit.html":{},"interfaces/Language.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{}},"body":{"interfaces/Advertisement.html":{},"interfaces/Category.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"interfaces/Language.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Advertisement.html":{},"interfaces/Category.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"interfaces/Fruit.html":{},"interfaces/Language.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"interfaces/Thread.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/category.interface",{"_index":514,"title":{},"body":{"injectables/CategoryService.html":{},"components/IndexComponent.html":{}}}],["interfaces/forum.interface",{"_index":1268,"title":{},"body":{"components/TopicsComponent.html":{}}}],["interfaces/response.interface",{"_index":1193,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["interfaces/session.interface",{"_index":1312,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaces/thread.interface",{"_index":668,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{}}}],["interfaces/topic.interface",{"_index":669,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["interfaces/user.interface",{"_index":1016,"title":{},"body":{"components/PostComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["interfaz",{"_index":1251,"title":{},"body":{"injectables/TopicService.html":{}}}],["invalidvalue",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidvalue(\"date",{"_index":366,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["invalidvalue(\"object",{"_index":372,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["invalidvalue(typ",{"_index":327,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["ipsum",{"_index":48,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["isnan(d.valueof",{"_index":365,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["items",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["js",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":309,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["json.parse",{"_index":314,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["json.stringify(typ",{"_index":334,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["json.stringify(uncast(value",{"_index":324,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["json.stringify(val",{"_index":335,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["jsontojsprops",{"_index":406,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsontojsprops(typ",{"_index":336,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["jstojsonprops",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jstojsonprops(typ",{"_index":345,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["justify",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["jwt",{"_index":901,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["k",{"_index":368,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["karma",{"_index":1436,"title":{},"body":{"index.html":{}}}],["key",{"_index":329,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["l",{"_index":358,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["la",{"_index":614,"title":{},"body":{"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["label",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["label::after",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["laborum",{"_index":65,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["language",{"_index":862,"title":{"interfaces/Language.html":{}},"body":{"interfaces/Language.html":{},"coverage.html":{}}}],["large",{"_index":815,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["las",{"_index":1132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["last_visit",{"_index":569,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lato",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["le",{"_index":1339,"title":{},"body":{"injectables/UserService.html":{}}}],["left",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["left:0",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["left:50",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["left:5px",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["legend",{"_index":74,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["lemon",{"_index":734,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["letter",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["lime",{"_index":735,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["linear",{"_index":490,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["link",{"_index":921,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["list",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/IndexModule.html":{}}}],["lista",{"_index":449,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"components/IndexComponent.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["lista.subscribe((resp",{"_index":522,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["listado",{"_index":1071,"title":{},"body":{"components/PostComponent.html":{}}}],["literal",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["llama",{"_index":517,"title":{},"body":{"injectables/CategoryService.html":{}}}],["llamo",{"_index":705,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["lo",{"_index":903,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{}}}],["localstorage",{"_index":902,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('dark",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('token",{"_index":1348,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem('token",{"_index":908,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.setitem('dark",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.setitem('token",{"_index":1333,"title":{},"body":{"injectables/UserService.html":{}}}],["location",{"_index":566,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":869,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loginform",{"_index":868,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logo",{"_index":536,"title":{},"body":{"interfaces/Config.html":{}}}],["logout",{"_index":870,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logueado",{"_index":913,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["logueados",{"_index":1075,"title":{},"body":{"components/PostComponent.html":{}}}],["loguear",{"_index":1330,"title":{},"body":{"injectables/UserService.html":{}}}],["lorem",{"_index":47,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["los",{"_index":458,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["ltima",{"_index":792,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/UserComponent.html":{}}}],["ltimos",{"_index":464,"title":{},"body":{"components/CategoryComponent.html":{}}}],["m",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["m(additional",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["mail",{"_index":563,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["manda",{"_index":906,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["map",{"_index":339,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["map((fruit",{"_index":687,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["map.call(document.queryselectorall(selector",{"_index":1062,"title":{},"body":{"components/PostComponent.html":{}}}],["map[p.js",{"_index":347,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["map[p.json",{"_index":341,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["mapeo",{"_index":650,"title":{},"body":{"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["margin",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["mas",{"_index":885,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TopicService.html":{}}}],["matautocompleteselectedevent",{"_index":677,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["matcardmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipinputevent",{"_index":675,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["matchipsmodule",{"_index":842,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["matdividermodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":727,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["material/card",{"_index":1092,"title":{},"body":{"components/PostComponent.html":{},"dependencies.html":{}}}],["material/ripple",{"_index":1018,"title":{},"body":{"components/PostComponent.html":{}}}],["matformfieldmodule",{"_index":843,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["matgridlistmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/IndexModule.html":{}}}],["maticonmodule",{"_index":846,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["matprogressbarmodule",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":472,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["mdc",{"_index":1057,"title":{},"body":{"components/PostComponent.html":{}}}],["mdcripple",{"_index":1017,"title":{},"body":{"components/PostComponent.html":{}}}],["mdcripple(el",{"_index":1064,"title":{},"body":{"components/PostComponent.html":{}}}],["media",{"_index":811,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["mediante",{"_index":613,"title":{},"body":{"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["mensaje",{"_index":1130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["metadata",{"_index":27,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/PostComponent.html":{}}}],["miscellaneous",{"_index":1400,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":939,"title":{},"body":{"components/NavbarComponent.html":{}}}],["module",{"_index":226,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}},"body":{}}],["modules",{"_index":228,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1447,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":802,"title":{},"body":{"components/FulltopicComponent.html":{},"injectables/TopicService.html":{}}}],["mostrar(id",{"_index":1241,"title":{},"body":{"injectables/TopicService.html":{}}}],["mostraruwu",{"_index":720,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["moz",{"_index":502,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["msg",{"_index":1201,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["msj",{"_index":1111,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mt",{"_index":1082,"title":{},"body":{"components/PostComponent.html":{}}}],["máximo",{"_index":1042,"title":{},"body":{"components/PostComponent.html":{}}}],["name",{"_index":80,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":865,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":97,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["navbar.component.css",{"_index":866,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":867,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":1154,"title":{},"body":{"modules/SharedModule.html":{}}}],["navbarcomponent",{"_index":96,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1417,"title":{},"body":{"index.html":{}}}],["need",{"_index":1441,"title":{},"body":{"index.html":{}}}],["neue",{"_index":828,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["never",{"_index":330,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":363,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1414,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{}}}],["nickname",{"_index":562,"title":{},"body":{"classes/Convert-1.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nombre",{"_index":552,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nombre_foro",{"_index":537,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{}}}],["none",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["normal",{"_index":816,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["nos",{"_index":1136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["notices",{"_index":46,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["null",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"interfaces/User.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Advertisement.html":{},"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"interfaces/Language.html":{},"components/PostComponent.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["numbers",{"_index":400,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["o",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["o(props",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":370,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(props).foreach(key",{"_index":374,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["object.getownpropertynames(val).foreach(key",{"_index":384,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["object.prototype.hasownproperty.call(props",{"_index":385,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["object.prototype.hasownproperty.call(val",{"_index":378,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["objeto",{"_index":655,"title":{},"body":{"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":437,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":521,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/TopicService.html":{}}}],["obtengo",{"_index":448,"title":{},"body":{"components/CategoryComponent.html":{},"components/IndexComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicsComponent.html":{}}}],["ok",{"_index":998,"title":{},"body":{"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["ok.msj",{"_index":1138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["one",{"_index":356,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["oninit",{"_index":26,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["opacity:1",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["optional",{"_index":434,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["orange",{"_index":736,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["otro",{"_index":1250,"title":{},"body":{"injectables/TopicService.html":{}}}],["out",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["outline:none",{"_index":960,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["overflow",{"_index":474,"title":{},"body":{"components/CategoryComponent.html":{}}}],["overview",{"_index":1450,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{}}}],["p.js",{"_index":342,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["p.json",{"_index":348,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["p.typ",{"_index":344,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["pablojavierprietocepeda@gmail.com",{"_index":877,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["package",{"_index":1380,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["padding:10px",{"_index":954,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["page",{"_index":1452,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":1070,"title":{},"body":{"components/PostComponent.html":{}}}],["pais",{"_index":560,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["para",{"_index":520,"title":{},"body":{"injectables/CategoryService.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["paramenters",{"_index":1198,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["parameters",{"_index":433,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["pariatur",{"_index":67,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["parsed",{"_index":401,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["pasa",{"_index":1252,"title":{},"body":{"injectables/TopicService.html":{}}}],["pasar",{"_index":611,"title":{},"body":{"components/ForumComponent.html":{}}}],["password",{"_index":564,"title":{},"body":{"classes/Convert-1.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perfil",{"_index":829,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["permissions",{"_index":1146,"title":{},"body":{"interfaces/Role.html":{}}}],["perpetrada",{"_index":890,"title":{},"body":{"components/NavbarComponent.html":{}}}],["picture",{"_index":567,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["pipe(map((response",{"_index":653,"title":{},"body":{"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":1438,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["por",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/NavbarComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{}}}],["posicion",{"_index":592,"title":{},"body":{"interfaces/Forum.html":{}}}],["position",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"classes/Convert.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"miscellaneous/variables.html":{}}}],["position:absolute",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["position:relative",{"_index":950,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["post",{"_index":709,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["post'},{'name",{"_index":99,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["post.component.css",{"_index":995,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.html",{"_index":996,"title":{},"body":{"components/PostComponent.html":{}}}],["post/:id",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["post/post.component",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["postcomponent",{"_index":98,"title":{"components/PostComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postthread",{"_index":693,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["posttopic",{"_index":1186,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["posttopic(cuerpo",{"_index":1190,"title":{},"body":{"injectables/ThreadService.html":{}}}],["posttopic(foro",{"_index":1243,"title":{},"body":{"injectables/TopicService.html":{}}}],["pre",{"_index":814,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["presionar",{"_index":1022,"title":{},"body":{"components/PostComponent.html":{}}}],["previa",{"_index":1077,"title":{},"body":{"components/PostComponent.html":{}}}],["private",{"_index":452,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserComponent.html":{}}}],["project",{"_index":1406,"title":{},"body":{"index.html":{}}}],["prop",{"_index":375,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["prop.key",{"_index":383,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["prop.typ",{"_index":382,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Advertisement.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["props",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["props[key",{"_index":376,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["prorums",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["prorumsresponse",{"_index":1098,"title":{"interfaces/ProrumsResponse.html":{}},"body":{"interfaces/ProrumsResponse.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["providedin",{"_index":515,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":317,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["publicar",{"_index":1023,"title":{},"body":{"components/PostComponent.html":{},"components/TopicsComponent.html":{}}}],["pueden",{"_index":1076,"title":{},"body":{"components/PostComponent.html":{}}}],["quas",{"_index":55,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["que",{"_index":911,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["quo",{"_index":58,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["r",{"_index":1363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["r(name",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["radius",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["ratione",{"_index":61,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["reacciones",{"_index":731,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["reaction",{"_index":1101,"title":{"interfaces/Reaction.html":{}},"body":{"interfaces/Reaction.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/FulltopicModule.html":{},"modules/SharedModule.html":{}}}],["recusandae",{"_index":64,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["red",{"_index":1127,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirecciones",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["reference",{"_index":1451,"title":{},"body":{"index.html":{}}}],["register",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":101,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["register(mail",{"_index":1306,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1105,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1106,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":1161,"title":{},"body":{"modules/SharedModule.html":{}}}],["registercomponent",{"_index":100,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":1107,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registramos",{"_index":1116,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["registrar",{"_index":1140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration_date",{"_index":568,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["regístrate",{"_index":919,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":1420,"title":{},"body":{"index.html":{}}}],["remove",{"_index":761,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["remove(fruit",{"_index":748,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["removemos",{"_index":899,"title":{},"body":{"components/NavbarComponent.html":{}}}],["require",{"_index":1377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp",{"_index":715,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"injectables/UserService.html":{}}}],["resp.apodo",{"_index":1323,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.correo",{"_index":1324,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.fecha_registro",{"_index":1327,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.firma",{"_index":1325,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.foto",{"_index":1338,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.id",{"_index":1321,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.nombre",{"_index":1322,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.ok",{"_index":1332,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.pais",{"_index":1329,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.resp",{"_index":1036,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["resp.token",{"_index":1334,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.ubicacion",{"_index":1326,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.uid",{"_index":1337,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.ultima_visita",{"_index":1328,"title":{},"body":{"injectables/UserService.html":{}}}],["resp[0].path",{"_index":1055,"title":{},"body":{"components/PostComponent.html":{}}}],["responder",{"_index":803,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["response",{"_index":1341,"title":{},"body":{"injectables/UserService.html":{}}}],["response[0",{"_index":654,"title":{},"body":{"injectables/ForumService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["respuesta",{"_index":1200,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{}}}],["result",{"_index":373,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["result[key",{"_index":386,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["result[prop.key",{"_index":380,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["results",{"_index":15,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":320,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"components/ChangelogComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revisamos",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["rgb(138",{"_index":1085,"title":{},"body":{"components/PostComponent.html":{}}}],["rgb(211",{"_index":1142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["rgb(235",{"_index":821,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["rgb(255",{"_index":1083,"title":{},"body":{"components/PostComponent.html":{}}}],["rgb(68",{"_index":956,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserComponent.html":{}}}],["right",{"_index":1089,"title":{},"body":{"components/PostComponent.html":{},"components/TopicsComponent.html":{}}}],["right:50",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["ripples",{"_index":1061,"title":{},"body":{"components/PostComponent.html":{}}}],["roboto",{"_index":826,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["role",{"_index":1144,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["root",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/CategoryService.html":{},"injectables/ForumService.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":83,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["rotatey(180deg",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["route",{"_index":682,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["router",{"_index":665,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forroot(routes",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":281,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routeservice",{"_index":690,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":808,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["run",{"_index":1413,"title":{},"body":{"index.html":{}}}],["running",{"_index":1431,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":315,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["rutas",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":439,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/ThreadService.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["saca",{"_index":1137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["saco",{"_index":701,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["safari",{"_index":485,"title":{},"body":{"components/CategoryComponent.html":{}}}],["sans",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{}}}],["scaffolding",{"_index":1423,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":477,"title":{},"body":{"components/CategoryComponent.html":{}}}],["se",{"_index":1020,"title":{},"body":{"components/PostComponent.html":{}}}],["selected",{"_index":762,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["selected(event",{"_index":751,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["selector",{"_index":28,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["separatorkeyscodes",{"_index":728,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["serif",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{}}}],["serve",{"_index":1415,"title":{},"body":{"index.html":{}}}],["server",{"_index":1412,"title":{},"body":{"index.html":{}}}],["services/category.service",{"_index":854,"title":{},"body":{"components/IndexComponent.html":{}}}],["services/forum.service",{"_index":1269,"title":{},"body":{"components/TopicsComponent.html":{}}}],["services/thread.service",{"_index":671,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["services/topic.service",{"_index":672,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["services/user.service",{"_index":674,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/PostComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["servicio",{"_index":706,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["servicios",{"_index":454,"title":{},"body":{"components/CategoryComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["session",{"_index":1147,"title":{"interfaces/Session.html":{}},"body":{"interfaces/Session.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["shared/navbar/navbar.component",{"_index":636,"title":{},"body":{"modules/ForumModule.html":{}}}],["shared/register/register.component",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/IndexModule.html":{},"modules/UserModule.html":{}}}],["sharedmodule",{"_index":237,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["shorttopics",{"_index":1163,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["shorttopics'},{'name",{"_index":103,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["shorttopics.component.css",{"_index":1164,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["shorttopics.component.html",{"_index":1165,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["shorttopics/shorttopics.component",{"_index":1158,"title":{},"body":{"modules/SharedModule.html":{}}}],["shorttopicscomponent",{"_index":102,"title":{"components/ShorttopicsComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shouldn't",{"_index":403,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["si",{"_index":1027,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["sign",{"_index":565,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["sit",{"_index":50,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["size",{"_index":495,"title":{},"body":{"components/CategoryComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["size:14px",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["size:18px",{"_index":953,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["sizing",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["skiplocationchange",{"_index":724,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["slice",{"_index":930,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["small",{"_index":943,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["solid",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"components/ChangelogComponent.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"components/FooterComponent.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"modules/ForumModule.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"modules/FulltopicModule.html":{},"components/IndexComponent.html":{},"modules/IndexModule.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"directives/ToggleDirective.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":809,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/UserComponent.html":{}}}],["spacebet",{"_index":1176,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["spacing",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.interface.ts",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.interface.ts",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/forum/forum.module.ts",{"_index":635,"title":{},"body":{"modules/ForumModule.html":{}}}],["src/app/fulltopic/fulltopic.component.ts",{"_index":657,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"coverage.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:105",{"_index":775,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:111",{"_index":766,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:19",{"_index":765,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:33",{"_index":788,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:37",{"_index":782,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:41",{"_index":781,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:42",{"_index":786,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:43",{"_index":785,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:45",{"_index":773,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:53",{"_index":769,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:57",{"_index":771,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:61",{"_index":770,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:65",{"_index":772,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:73",{"_index":784,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:74",{"_index":778,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:75",{"_index":777,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:76",{"_index":783,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:77",{"_index":776,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:80",{"_index":780,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:83",{"_index":767,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.component.ts:97",{"_index":774,"title":{},"body":{"components/FulltopicComponent.html":{}}}],["src/app/fulltopic/fulltopic.module.ts",{"_index":840,"title":{},"body":{"modules/FulltopicModule.html":{}}}],["src/app/index/category/category.component.ts",{"_index":422,"title":{},"body":{"components/CategoryComponent.html":{},"coverage.html":{}}}],["src/app/index/category/category.component.ts:17",{"_index":436,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/index/category/category.component.ts:18",{"_index":438,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/index/category/category.component.ts:19",{"_index":432,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/index/forum/forum.component.ts",{"_index":593,"title":{},"body":{"components/ForumComponent.html":{},"coverage.html":{}}}],["src/app/index/forum/forum.component.ts:13",{"_index":601,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/forum/forum.component.ts:16",{"_index":603,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/forum/forum.component.ts:18",{"_index":607,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/forum/forum.component.ts:19",{"_index":605,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/forum/forum.component.ts:20",{"_index":606,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/forum/forum.component.ts:22",{"_index":604,"title":{},"body":{"components/ForumComponent.html":{}}}],["src/app/index/index.component.ts",{"_index":848,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts:13",{"_index":852,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:19",{"_index":853,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.module.ts",{"_index":858,"title":{},"body":{"modules/IndexModule.html":{}}}],["src/app/interfaces/advertisement.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Advertisement.html":{},"coverage.html":{}}}],["src/app/interfaces/category.interface",{"_index":440,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/interfaces/category.interface.ts",{"_index":305,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/category.interface.ts:22",{"_index":544,"title":{},"body":{"classes/Convert.html":{}}}],["src/app/interfaces/category.interface.ts:26",{"_index":543,"title":{},"body":{"classes/Convert.html":{}}}],["src/app/interfaces/changelog.interface.ts",{"_index":524,"title":{},"body":{"interfaces/Changelog.html":{},"coverage.html":{}}}],["src/app/interfaces/config.interface.ts",{"_index":533,"title":{},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["src/app/interfaces/country.interface.ts",{"_index":574,"title":{},"body":{"interfaces/Country.html":{},"coverage.html":{}}}],["src/app/interfaces/forum.interface",{"_index":441,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{}}}],["src/app/interfaces/forum.interface.ts",{"_index":589,"title":{},"body":{"interfaces/Forum.html":{},"coverage.html":{}}}],["src/app/interfaces/language.interface.ts",{"_index":863,"title":{},"body":{"interfaces/Language.html":{},"coverage.html":{}}}],["src/app/interfaces/reaction.interface.ts",{"_index":1102,"title":{},"body":{"interfaces/Reaction.html":{},"coverage.html":{}}}],["src/app/interfaces/response.interface.ts",{"_index":1099,"title":{},"body":{"interfaces/ProrumsResponse.html":{},"coverage.html":{}}}],["src/app/interfaces/role.interface.ts",{"_index":1145,"title":{},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["src/app/interfaces/session.interface.ts",{"_index":1148,"title":{},"body":{"interfaces/Session.html":{},"coverage.html":{}}}],["src/app/interfaces/thread.interface.ts",{"_index":1180,"title":{},"body":{"interfaces/Thread.html":{},"coverage.html":{}}}],["src/app/interfaces/topic.interface",{"_index":444,"title":{},"body":{"components/CategoryComponent.html":{},"components/ShorttopicsComponent.html":{}}}],["src/app/interfaces/topic.interface.ts",{"_index":1208,"title":{},"body":{"interfaces/Topic.html":{},"interfaces/Topics.html":{},"coverage.html":{}}}],["src/app/interfaces/user.interface",{"_index":882,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/interfaces/user.interface.ts",{"_index":545,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user.interface.ts:27",{"_index":549,"title":{},"body":{"classes/Convert-1.html":{}}}],["src/app/interfaces/user.interface.ts:31",{"_index":551,"title":{},"body":{"classes/Convert-1.html":{}}}],["src/app/post/post.component.ts",{"_index":994,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["src/app/post/post.component.ts:20",{"_index":1010,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:21",{"_index":1008,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:22",{"_index":1007,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:23",{"_index":1006,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:24",{"_index":1002,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:33",{"_index":1015,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:37",{"_index":1013,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:42",{"_index":1014,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:44",{"_index":1011,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:45",{"_index":1009,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:47",{"_index":1005,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:63",{"_index":1003,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:82",{"_index":1004,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/services/category.service",{"_index":445,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/services/category.service.ts",{"_index":508,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/services/category.service.ts:12",{"_index":513,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:8",{"_index":512,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/forum.service",{"_index":446,"title":{},"body":{"components/CategoryComponent.html":{},"components/ForumComponent.html":{}}}],["src/app/services/forum.service.ts",{"_index":637,"title":{},"body":{"injectables/ForumService.html":{},"coverage.html":{}}}],["src/app/services/forum.service.ts:13",{"_index":644,"title":{},"body":{"injectables/ForumService.html":{}}}],["src/app/services/forum.service.ts:33",{"_index":646,"title":{},"body":{"injectables/ForumService.html":{}}}],["src/app/services/forum.service.ts:37",{"_index":642,"title":{},"body":{"injectables/ForumService.html":{}}}],["src/app/services/forum.service.ts:9",{"_index":640,"title":{},"body":{"injectables/ForumService.html":{}}}],["src/app/services/thread.service.ts",{"_index":1184,"title":{},"body":{"injectables/ThreadService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts:10",{"_index":1187,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:14",{"_index":1189,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:18",{"_index":1192,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/topic.service",{"_index":447,"title":{},"body":{"components/CategoryComponent.html":{},"components/ShorttopicsComponent.html":{}}}],["src/app/services/topic.service.ts",{"_index":1222,"title":{},"body":{"injectables/TopicService.html":{},"coverage.html":{}}}],["src/app/services/topic.service.ts:10",{"_index":1228,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:14",{"_index":1233,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:18",{"_index":1238,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:43",{"_index":1240,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:47",{"_index":1234,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:52",{"_index":1236,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:57",{"_index":1244,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:63",{"_index":1232,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:69",{"_index":1230,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/topic.service.ts:73",{"_index":1242,"title":{},"body":{"injectables/TopicService.html":{}}}],["src/app/services/user.service",{"_index":883,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:11",{"_index":1298,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1309,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":1302,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1299,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:50",{"_index":1301,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:70",{"_index":1310,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:74",{"_index":1305,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:93",{"_index":1307,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:99",{"_index":1308,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/advertisements/advertisements.component.ts",{"_index":24,"title":{},"body":{"components/AdvertisementsComponent.html":{},"coverage.html":{}}}],["src/app/shared/advertisements/advertisements.component.ts:12",{"_index":40,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["src/app/shared/advertisements/advertisements.component.ts:8",{"_index":39,"title":{},"body":{"components/AdvertisementsComponent.html":{}}}],["src/app/shared/changelog/changelog.component.ts",{"_index":527,"title":{},"body":{"components/ChangelogComponent.html":{},"coverage.html":{}}}],["src/app/shared/changelog/changelog.component.ts:12",{"_index":531,"title":{},"body":{"components/ChangelogComponent.html":{}}}],["src/app/shared/changelog/changelog.component.ts:8",{"_index":530,"title":{},"body":{"components/ChangelogComponent.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":580,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:8",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":864,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:14",{"_index":880,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:17",{"_index":872,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:21",{"_index":881,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:25",{"_index":873,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:37",{"_index":874,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:44",{"_index":875,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/register/register.component.ts",{"_index":1104,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/shared/register/register.component.ts:12",{"_index":1108,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/register/register.component.ts:18",{"_index":1114,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/register/register.component.ts:25",{"_index":1112,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/register/register.component.ts:29",{"_index":1110,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/register/register.component.ts:61",{"_index":1109,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1153,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/shorttopics/shorttopics.component.ts",{"_index":1162,"title":{},"body":{"components/ShorttopicsComponent.html":{},"coverage.html":{}}}],["src/app/shared/shorttopics/shorttopics.component.ts:13",{"_index":1166,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["src/app/shared/shorttopics/shorttopics.component.ts:18",{"_index":1168,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["src/app/shared/shorttopics/shorttopics.component.ts:19",{"_index":1167,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["src/app/shared/topic/topic.component.ts",{"_index":1215,"title":{},"body":{"components/TopicComponent.html":{},"coverage.html":{}}}],["src/app/shared/topic/topic.component.ts:15",{"_index":1218,"title":{},"body":{"components/TopicComponent.html":{}}}],["src/app/shared/topic/topic.component.ts:19",{"_index":1220,"title":{},"body":{"components/TopicComponent.html":{}}}],["src/app/shared/topic/topic.component.ts:21",{"_index":1219,"title":{},"body":{"components/TopicComponent.html":{}}}],["src/app/toggle.directive.ts",{"_index":1206,"title":{},"body":{"directives/ToggleDirective.html":{},"coverage.html":{}}}],["src/app/toggle.directive.ts:6",{"_index":1207,"title":{},"body":{"directives/ToggleDirective.html":{}}}],["src/app/topics/topics.component.ts",{"_index":1258,"title":{},"body":{"components/TopicsComponent.html":{},"coverage.html":{}}}],["src/app/topics/topics.component.ts:16",{"_index":1261,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/topics/topics.component.ts:23",{"_index":1267,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/topics/topics.component.ts:26",{"_index":1264,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/topics/topics.component.ts:27",{"_index":1266,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/topics/topics.component.ts:29",{"_index":1262,"title":{},"body":{"components/TopicsComponent.html":{}}}],["src/app/user/user.component.ts",{"_index":1271,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:14",{"_index":1275,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:17",{"_index":1276,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:18",{"_index":1280,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:19",{"_index":1278,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.module.ts",{"_index":1291,"title":{},"body":{"modules/UserModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":479,"title":{},"body":{"components/CategoryComponent.html":{}}}],["start",{"_index":1178,"title":{},"body":{"components/ShorttopicsComponent.html":{}}}],["started",{"_index":1405,"title":{"index.html":{}},"body":{}}],["starting",{"_index":947,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["startwith",{"_index":666,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["startwith(null",{"_index":686,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["state",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["statements",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":318,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["stored",{"_index":1428,"title":{},"body":{"index.html":{}}}],["strawberry",{"_index":737,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"interfaces/Language.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":310,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["styles",{"_index":21,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["styleurls",{"_index":31,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["stylings",{"_index":948,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["su",{"_index":621,"title":{},"body":{"components/ForumComponent.html":{}}}],["submit",{"_index":892,"title":{},"body":{"components/NavbarComponent.html":{}}}],["subscribe",{"_index":714,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["subscribe(resp",{"_index":896,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":1453,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1454,"title":{},"body":{"modules.html":{}}}],["t",{"_index":405,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["tanto",{"_index":904,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tap",{"_index":610,"title":{},"body":{"components/ForumComponent.html":{},"injectables/ForumService.html":{},"injectables/UserService.html":{}}}],["te",{"_index":466,"title":{},"body":{"components/CategoryComponent.html":{}}}],["tema",{"_index":801,"title":{},"body":{"components/FulltopicComponent.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{}}}],["temas",{"_index":427,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["template",{"_index":20,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["tener",{"_index":1041,"title":{},"body":{"components/PostComponent.html":{}}}],["test",{"_index":1434,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1443,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1433,"title":{},"body":{"index.html":{}}}],["text",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["textarea",{"_index":952,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["textarea:focus",{"_index":959,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["textarea:valid",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["theme",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["this._filter(fruit",{"_index":688,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this._usuario",{"_index":1320,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allfruits.filter(fruit",{"_index":757,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.allfruits.slice",{"_index":689,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.categoryservice.getlist",{"_index":435,"title":{},"body":{"components/CategoryComponent.html":{},"components/IndexComponent.html":{}}}],["this.fb.group",{"_index":694,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["this.filteredfruits",{"_index":684,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.foro",{"_index":616,"title":{},"body":{"components/ForumComponent.html":{}}}],["this.forums",{"_index":459,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.forumservice.getbyid(parseint(this.id_foro",{"_index":617,"title":{},"body":{"components/ForumComponent.html":{}}}],["this.forumservice.getbyid(this.id_foro",{"_index":1263,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.forumservice.getlist",{"_index":460,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.fruitctrl.setvalue(null",{"_index":747,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.fruitctrl.valuechanges.pipe",{"_index":685,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.fruitinput.nativeelement.value",{"_index":753,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.httpclient.get('http://localhost:3000/categories",{"_index":516,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.httpclient.get('http://localhost:3000/forums",{"_index":648,"title":{},"body":{"injectables/ForumService.html":{}}}],["this.httpclient.get('http://localhost:3000/user",{"_index":1246,"title":{},"body":{"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get('http://localhost:3000/users",{"_index":1319,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`http://localhost:3000/forum/${id",{"_index":652,"title":{},"body":{"injectables/ForumService.html":{}}}],["this.httpclient.get(`http://localhost:3000/forums",{"_index":649,"title":{},"body":{"injectables/ForumService.html":{}}}],["this.httpclient.get(`http://localhost:3000/threads/${id",{"_index":1194,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.httpclient.get(`http://localhost:3000/topic/${id",{"_index":1249,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.httpclient.get(`http://localhost:3000/topics",{"_index":1245,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.httpclient.get(`http://localhost:3000/topics/${forum",{"_index":1248,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.httpclient.post(`http://localhost:3000/post/hide",{"_index":1256,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.httpclient.post(`http://localhost:3000/post/show",{"_index":1257,"title":{},"body":{"injectables/TopicService.html":{}}}],["this.httpclient.post(url",{"_index":1199,"title":{},"body":{"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["this.id_foro",{"_index":1031,"title":{},"body":{"components/PostComponent.html":{}}}],["this.id_tema",{"_index":713,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["this.loginform.value",{"_index":894,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ok",{"_index":1035,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["this.postthread.value",{"_index":710,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.reacciones.indexof(fruit",{"_index":749,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.reacciones.push(event.option.viewvalue",{"_index":752,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.reacciones.push(value",{"_index":744,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.reacciones.splice(index",{"_index":750,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.registerform.value",{"_index":1117,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.snapshot.params[\"id",{"_index":700,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["this.route.url.subscribe",{"_index":1053,"title":{},"body":{"components/PostComponent.html":{}}}],["this.router.navigatebyurl",{"_index":897,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl('/edit",{"_index":723,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.router.navigatebyurl('/topic",{"_index":1051,"title":{},"body":{"components/PostComponent.html":{}}}],["this.router.navigatebyurl('/topics",{"_index":1033,"title":{},"body":{"components/PostComponent.html":{}}}],["this.tema",{"_index":1170,"title":{},"body":{"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["this.temas",{"_index":455,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.threadservice.getbyforum(parseint(this.id_tema",{"_index":708,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["this.threadservice.posttopic(cuerpo",{"_index":711,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.tipo",{"_index":1054,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls['categoria'].value",{"_index":1078,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls['cuerpo'].value",{"_index":1080,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls['titulo'].value",{"_index":1079,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls[\\'categoria\\'].value",{"_index":1095,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls[\\'cuerpo\\'].value",{"_index":1097,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.controls[\\'titulo\\'].value",{"_index":1096,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicform.value",{"_index":1024,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicservice.borrar(this.id_tema).subscribe",{"_index":719,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.topicservice.edittopic(this.id_tema",{"_index":1049,"title":{},"body":{"components/PostComponent.html":{}}}],["this.topicservice.getall",{"_index":456,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.topicservice.getbyid(parseint(this.id_tema",{"_index":1171,"title":{},"body":{"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["this.topicservice.getbyid2(parseint(this.id_tema",{"_index":704,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["this.topicservice.getbyuser(parseint(this.id_user",{"_index":1277,"title":{},"body":{"components/UserComponent.html":{}}}],["this.topicservice.gettopics(this.id_foro",{"_index":1265,"title":{},"body":{"components/TopicsComponent.html":{}}}],["this.topicservice.mostrar(this.id_tema).subscribe",{"_index":721,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.topicservice.posttopic(this.id_foro",{"_index":1030,"title":{},"body":{"components/PostComponent.html":{}}}],["this.user",{"_index":1065,"title":{},"body":{"components/PostComponent.html":{}}}],["this.userservice.getbyid(parseint(this.id_user",{"_index":1279,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getbyid(resp.uid",{"_index":1066,"title":{},"body":{"components/PostComponent.html":{}}}],["this.userservice.getsession(email",{"_index":895,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userservice.register(email",{"_index":1122,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.usuario",{"_index":692,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/TopicsComponent.html":{}}}],["this.userservice.validartoken().subscribe",{"_index":909,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usuario.id",{"_index":712,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["this.usuario.id!).subscribe",{"_index":1032,"title":{},"body":{"components/PostComponent.html":{}}}],["thread",{"_index":667,"title":{"interfaces/Thread.html":{}},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["threads",{"_index":707,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["threadservice",{"_index":670,"title":{"injectables/ThreadService.html":{}},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["throw",{"_index":331,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["thumb",{"_index":489,"title":{},"body":{"components/CategoryComponent.html":{}}}],["tiempo",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["tienes",{"_index":917,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["tipo",{"_index":999,"title":{},"body":{"components/PostComponent.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{}}}],["title",{"_index":71,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/ChangelogComponent.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{}}}],["titulo",{"_index":1012,"title":{},"body":{"components/PostComponent.html":{},"interfaces/Topic.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{}}}],["to/from",{"_index":311,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["tocategory",{"_index":542,"title":{},"body":{"classes/Convert.html":{}}}],["tocategory(json",{"_index":319,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{}}}],["todo",{"_index":1204,"title":{},"body":{"injectables/ThreadService.html":{}}}],["todos",{"_index":457,"title":{},"body":{"components/CategoryComponent.html":{}}}],["toggle",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle.directive",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["toggledirective",{"_index":111,"title":{"directives/ToggleDirective.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"directives/ToggleDirective.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":900,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Session.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["top",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["top:10px",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["top:25",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["topic",{"_index":442,"title":{"interfaces/Topic.html":{}},"body":{"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"coverage.html":{}}}],["topic'},{'name",{"_index":105,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["topic.component.css",{"_index":1216,"title":{},"body":{"components/TopicComponent.html":{}}}],["topic.component.html",{"_index":1217,"title":{},"body":{"components/TopicComponent.html":{}}}],["topic/:id",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["topic/topic.component",{"_index":1157,"title":{},"body":{"modules/SharedModule.html":{}}}],["topiccomponent",{"_index":104,"title":{"components/TopicComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["topicform",{"_index":1000,"title":{},"body":{"components/PostComponent.html":{}}}],["topicos",{"_index":1072,"title":{},"body":{"components/PostComponent.html":{}}}],["topics",{"_index":443,"title":{"interfaces/Topics.html":{}},"body":{"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["topics'},{'name",{"_index":107,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["topics.component.css",{"_index":1259,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topics.component.html",{"_index":1260,"title":{},"body":{"components/TopicsComponent.html":{}}}],["topics/:id",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["topics/topics.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["topicscomponent",{"_index":106,"title":{"components/TopicsComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["topicservice",{"_index":431,"title":{"injectables/TopicService.html":{}},"body":{"components/CategoryComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["touser",{"_index":546,"title":{},"body":{"classes/Convert-1.html":{}}}],["touser(json",{"_index":548,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["track",{"_index":487,"title":{},"body":{"components/CategoryComponent.html":{}}}],["transform",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["transform(el",{"_index":360,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transform(v",{"_index":381,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transform(val",{"_index":349,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["transform(val[key",{"_index":387,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformarray(typ.arrayitems",{"_index":396,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformdate(val",{"_index":361,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformenum(typ",{"_index":392,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformobject(getprops(typ",{"_index":398,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformobject(props",{"_index":367,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformprimitive(typ",{"_index":351,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformunion(typ.unionmembers",{"_index":394,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transformunion(typs",{"_index":353,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["transition",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["transition:0.2s",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["translatex(50px",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey",{"_index":833,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["transparent",{"_index":936,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["tree",{"_index":23,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["trim",{"_index":742,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["true",{"_index":725,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["true}).then",{"_index":898,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{}}}],["ts",{"_index":1316,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["tslib",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["tus",{"_index":1281,"title":{},"body":{"components/UserComponent.html":{}}}],["typ",{"_index":343,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typ.additional",{"_index":399,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.hasownproperty(\"arrayitems",{"_index":395,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.hasownproperty(\"props",{"_index":397,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.hasownproperty(\"unionmembers",{"_index":393,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.jsontojs",{"_index":337,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.jstojson",{"_index":346,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.props.foreach((p",{"_index":340,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typ.ref",{"_index":389,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Advertisement.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Changelog.html":{},"interfaces/Config.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/Country.html":{},"interfaces/Forum.html":{},"components/ForumComponent.html":{},"injectables/ForumService.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"interfaces/Language.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"interfaces/ProrumsResponse.html":{},"interfaces/Reaction.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/Session.html":{},"components/ShorttopicsComponent.html":{},"interfaces/Thread.html":{},"injectables/ThreadService.html":{},"interfaces/Topic.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"interfaces/Topics.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typemap",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typemap[typ.ref",{"_index":390,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typeof",{"_index":352,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["types",{"_index":312,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["typs",{"_index":357,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["typs.length",{"_index":359,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["título",{"_index":1045,"title":{},"body":{"components/PostComponent.html":{}}}],["tópicos",{"_index":465,"title":{},"body":{"components/CategoryComponent.html":{}}}],["u",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["u(...typs",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["u(null",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"miscellaneous/variables.html":{}}}],["ubicacion",{"_index":556,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ubicación",{"_index":1284,"title":{},"body":{"components/UserComponent.html":{}}}],["uid",{"_index":1149,"title":{},"body":{"interfaces/Session.html":{}}}],["ul",{"_index":924,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ullam",{"_index":68,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/ChangelogComponent.html":{}}}],["ultima_visita",{"_index":559,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/Topic.html":{},"interfaces/Topics.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["un",{"_index":620,"title":{},"body":{"components/ForumComponent.html":{},"injectables/TopicService.html":{}}}],["una",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["uncast",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["uncast(val",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":338,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["unionmembers",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["unit",{"_index":1432,"title":{},"body":{"index.html":{}}}],["url",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/PostComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["url('https://fonts.googleapis.com/css?family=lato",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["use",{"_index":1091,"title":{},"body":{"components/PostComponent.html":{},"index.html":{}}}],["user",{"_index":109,"title":{"interfaces/User.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"classes/Convert-1.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.component",{"_index":1292,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.css",{"_index":1272,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":1273,"title":{},"body":{"components/UserComponent.html":{}}}],["user/:id",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/user.component",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/user.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["usercomponent",{"_index":108,"title":{"components/UserComponent.html":{}},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":238,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1318,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":673,"title":{"injectables/UserService.html":{}},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertojson",{"_index":547,"title":{},"body":{"classes/Convert-1.html":{}}}],["usertojson(value",{"_index":550,"title":{},"body":{"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["uso",{"_index":1314,"title":{},"body":{"injectables/UserService.html":{}}}],["usuario",{"_index":691,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Thread.html":{},"injectables/TopicService.html":{},"components/TopicsComponent.html":{},"injectables/UserService.html":{}}}],["usuario.nombre",{"_index":804,"title":{},"body":{"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{}}}],["usuarios",{"_index":1074,"title":{},"body":{"components/PostComponent.html":{},"injectables/UserService.html":{}}}],["v",{"_index":377,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["vacíos",{"_index":1048,"title":{},"body":{"components/PostComponent.html":{}}}],["val",{"_index":328,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["val[key",{"_index":379,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["valida",{"_index":1135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validamos",{"_index":910,"title":{},"body":{"components/NavbarComponent.html":{}}}],["validartoken",{"_index":1297,"title":{},"body":{"injectables/UserService.html":{}}}],["validate",{"_index":354,"title":{},"body":{"interfaces/Category.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"interfaces/User.html":{}}}],["validators",{"_index":664,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":878,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":879,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":696,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["valido",{"_index":1029,"title":{},"body":{"components/PostComponent.html":{}}}],["value",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryComponent.html":{},"classes/Convert.html":{},"classes/Convert-1.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":756,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["var",{"_index":78,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{},"components/UserComponent.html":{}}}],["variable",{"_index":619,"title":{},"body":{"components/ForumComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1463,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificamos",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":526,"title":{},"body":{"interfaces/Changelog.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["vicente",{"_index":585,"title":{},"body":{"components/FooterComponent.html":{}}}],["viewchild",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["viewchild('fruitinput",{"_index":738,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["vila",{"_index":584,"title":{},"body":{"components/FooterComponent.html":{}}}],["visita",{"_index":1282,"title":{},"body":{"components/UserComponent.html":{}}}],["vista",{"_index":615,"title":{},"body":{"components/ForumComponent.html":{},"components/PostComponent.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AdvertisementsComponent.html":{},"components/AppComponent.html":{},"components/ChangelogComponent.html":{},"components/FooterComponent.html":{},"components/ForumComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/IndexComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/TopicsComponent.html":{}}}],["válido",{"_index":1038,"title":{},"body":{"components/PostComponent.html":{}}}],["webkit",{"_index":486,"title":{},"body":{"components/CategoryComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["weight",{"_index":626,"title":{},"body":{"components/ForumComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{}}}],["weight:normal",{"_index":944,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["white",{"_index":497,"title":{},"body":{"components/CategoryComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["width",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ForumComponent.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/ShorttopicsComponent.html":{},"components/TopicComponent.html":{},"components/UserComponent.html":{}}}],["width:0",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["width:40px",{"_index":926,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["width:50",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["window.location.reload",{"_index":717,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{}}}],["word",{"_index":817,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["wrap",{"_index":825,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["wtf",{"_index":759,"title":{},"body":{"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{}}}],["www.pavlo.cl",{"_index":581,"title":{},"body":{"components/FooterComponent.html":{}}}],["x",{"_index":1247,"title":{},"body":{"injectables/TopicService.html":{}}}],["xito",{"_index":1124,"title":{},"body":{"components/RegisterComponent.html":{}}}],["y",{"_index":475,"title":{},"body":{"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"interfaces/Fruit.html":{},"components/FulltopicComponent.html":{},"components/NavbarComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"injectables/ThreadService.html":{},"injectables/TopicService.html":{},"injectables/UserService.html":{}}}],["ya",{"_index":1073,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["z",{"_index":832,"title":{},"body":{"components/FulltopicComponent.html":{},"components/PostComponent.html":{}}}],["zone.js",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/ForumModule.html":{},"modules/FulltopicModule.html":{},"modules/IndexModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Advertisement.html":{"url":"interfaces/Advertisement.html","title":"interface - Advertisement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Advertisement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/advertisement.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            advertisement\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        advertisement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        advertisement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Advertisement {\n    id: number,\n    advertisement: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdvertisementsComponent.html":{"url":"components/AdvertisementsComponent.html","title":"component - AdvertisementsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdvertisementsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/advertisements/advertisements.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-advertisements\n            \n\n            \n                styleUrls\n                ./advertisements.component.css\n            \n\n\n\n            \n                templateUrl\n                ./advertisements.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/advertisements/advertisements.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/advertisements/advertisements.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-advertisements',\n  templateUrl: './advertisements.component.html',\n  styleUrls: ['./advertisements.component.css']\n})\nexport class AdvertisementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      Notices\n      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quas aspernatur eaque quo ex, et ratione eum ea recusandae laborum eveniet, pariatur ullam deleniti!\n    \n\n    \n\n    \n                \n                    ./advertisements.component.css\n                \n                .card-title {\n    color: #cc0000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Notices      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quas aspernatur eaque quo ex, et ratione eum ea recusandae laborum eveniet, pariatur ullam deleniti!    '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvertisementsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                darktheme\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dark\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dark\n                        \n                    \n                \n            \n            \n                \ndark()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        darktheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('dark')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Prorums'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostBinding, HostListener, OnInit, Pipe, ViewChild } from '@angular/core';\nimport { ToggleDirective } from './toggle.directive';\n// dark theme fallido por falta de tiempo\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  title = 'Prorums';\n  darktheme = localStorage.getItem('dark');\n  ngOnInit(): void {\n    if(this.darktheme === null) {\n      localStorage.setItem('dark', \"1\");\n      document.body.classList.add('dark-theme'); \n    }\n    if(this.darktheme === \"1\") {\n      document.body.classList.add('dark-theme');\n    }\n    else {\n      document.body.classList.remove('dark-theme'); \n    }\n    \n  }\n\n  dark() {\n    let body = document.body;\n    if(this.darktheme === \"1\") {\n      localStorage.setItem('dark', \"1\");\n      body.classList.add('dark-theme');\n    }\n    else {\n      localStorage.setItem('dark', \"0\");\n      body.classList.remove('dark-theme'); \n    }\n      \n    \n  }\n  \n}\n\n\n\n    \n\n    \n        \n\n\n\n    \n        \n            \n        \n        \n            \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* css generales */\n@import url('https://fonts.googleapis.com/css?family=Lato');\n\n* {\n    box-sizing: border-box;\n  }\n  \n  body {\n    background-color: #f5f7fa;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    transition: all ease-in-out 0.3s;\n    min-height: 100vh;\n    font-family: 'Lato', sans-serif;\n    margin: 0;\n  }\n  \n  h2 {\n    margin-bottom: 0;\n  }\n  \n  h3 {\n    color: #0054B0;\n  }\n  \n  p {\n    letter-spacing: 1px;\n  }\n  \n  body.dark-theme h2, body.dark-theme p {\n    color: #ddd;\n  }\n  \n  .toggle input[type=checkbox] {\n    display: none;\n  }\n  \n  .toggle label {\n    background-color: #777;\n    border: 2px solid #555;\n    border-radius: 50px;\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    transition: all ease-in-out 0.3s;\n    width: 80px;\n    height: 30px;\n  }\n  \n  .toggle label::after {\n    background-color: #555;\n    border-radius: 50%;\n    content: ' ';\n    cursor: pointer;\n    display: inline-block;\n    position: absolute;\n    left: 2px;\n    top: 2px;\n    transition: all ease-in-out 0.3s;\n    width: 23px;\n    height: 23px;\n  }\n  \n  .toggle input[type=checkbox]:checked ~ label {\n    background-color: #00a0fc;\n    border-color: #006dc9;\n  }\n  \n  .toggle input[type=checkbox]:checked ~ label::after {\n    background-color: #0054B0;\n    transform: translateX(50px);\n  }\n\n  .toggle {\n      text-align: center;\n      margin-top: 30px;\n  }\n\n  .circle { \n    border-radius: 50px;\n    padding: 10px 15px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nToggleDirective\n\nToggleDirective\n\nAppModule -->\n\nToggleDirective->AppModule\n\n\n\n\n\nTopicsComponent\n\nTopicsComponent\n\nAppModule -->\n\nTopicsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFulltopicModule\n\nFulltopicModule\n\nAppModule -->\n\nFulltopicModule->AppModule\n\n\n\n\n\nIndexModule\n\nIndexModule\n\nAppModule -->\n\nIndexModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            PostComponent\n                        \n                        \n                            ToggleDirective\n                        \n                        \n                            TopicsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            FulltopicModule\n                        \n                        \n                            IndexModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IndexModule } from './index/index.module';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { TopicsComponent } from './topics/topics.component';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ToggleDirective } from './toggle.directive';\nimport { FulltopicModule } from './fulltopic/fulltopic.module';\nimport { UserModule } from './user/user.module';\nimport { PostComponent } from './post/post.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopicsComponent,\n    ToggleDirective,\n    PostComponent,\n  ],\n  imports: [\n    MatGridListModule,\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    IndexModule,\n    HttpClientModule,\n    CommonModule,\n    FulltopicModule,\n    UserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatProgressBarModule\n  ],\n  providers: [DatePipe],\n  exports: [DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FulltopicComponent } from './fulltopic/fulltopic.component';\nimport { IndexComponent } from './index/index.component';\nimport { PostComponent } from './post/post.component';\nimport { RegisterComponent } from './shared/register/register.component';\nimport { TopicsComponent } from './topics/topics.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [ // redirecciones / rutas url\n  {\n    path: '',\n    component: IndexComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'profile',\n    component: IndexComponent\n  },\n  {\n    path: 'forum',\n    component: TopicsComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'post/:id',\n    component: PostComponent\n  },\n  {\n    path: 'edit/:id',\n    component: PostComponent\n  },\n  {\n    path: 'topics/:id',\n    component: TopicsComponent\n  },\n  {\n    path: 'topic/:id',\n    component: FulltopicComponent\n  },\n  {\n    path: 'user/:id',\n    component: UserComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/category.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     null | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Forum } from \"./forum.interface\";\n\nexport interface Category {\n    id:          number;\n    name:        string;\n    description: null | string;\n    position:    number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toCategory(json: string): Category[] {\n        return cast(JSON.parse(json), a(r(\"Category\")));\n    }\n\n    public static categoryToJson(value: Category[]): string {\n        return JSON.stringify(uncast(value, a(r(\"Category\"))), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i  transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        return invalidValue(typ, val);\n    }\n    if (typ === false) return invalidValue(typ, val);\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nconst typeMap: any = {\n    \"Category\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"description\", js: \"description\", typ: u(null, \"\") },\n        { json: \"position\", js: \"position\", typ: 0 },\n    ], false),\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryComponent.html":{"url":"components/CategoryComponent.html","title":"component - CategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/category/category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category\n            \n\n            \n                styleUrls\n                ./category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                forums$\n                            \n                            \n                                temas$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, forumService: ForumService, topicService: TopicService)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/category/category.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        forumService\n                                                  \n                                                        \n                                                                        ForumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : this.categoryService.getList()\n                    \n                \n                    \n                        \n                                Defined in src/app/index/category/category.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forums$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/category/category.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temas$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/category/category.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/interfaces/category.interface';\nimport { Forum } from 'src/app/interfaces/forum.interface';\nimport { Topic, Topics } from 'src/app/interfaces/topic.interface';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ForumService } from 'src/app/services/forum.service';\nimport { TopicService } from 'src/app/services/topic.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent {\n\n  categories: Category[] = this.categoryService.getList(); // obtengo lista de categorias\n  forums$!: Observable;\n  temas$!: Observable;\n  \n  constructor(private categoryService: CategoryService,\n               private forumService: ForumService,\n               private topicService: TopicService) { // importo servicios\n    this.temas$ = this.topicService.getAll() // obtengo todos los temas\n    this.forums$ = this.forumService.getList(); // obtengo todos los foros\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ category.name }}\n                {{ category.description }}\n            \n            \n                \n                    \n                \n            \n        \n    \n    \n        \n            \n                Últimos temas / tópicos\n                ¿Te interesará alguno?\n            \n            \n                 \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./category.component.css\n                \n                .card-body {\n    padding: 5px;\n}\n\np, h5 {\n    padding: 0 !important;\n    margin: 0;\n}\n\n.temas {\n    max-height: 305px;\n    overflow-y: auto;\n    scrollbar-gutter: stable;\n}\n\n/* ===== Scrollbar CSS ===== */\n  /* Firefox */\n  * {\n    scrollbar-width: auto;\n    /* scrollbar-color: #ff00ea #333333; */\n    scrollbar-color: #CC0000 !important;\n  }\n\n  /* Chrome, Edge, and Safari */\n  *::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  *::-webkit-scrollbar-track {\n    /* background: #333333; */\n    background-color: #fff;\n  }\n\n  *::-webkit-scrollbar-thumb {\n    /* background: linear-gradient(68deg, #ee00ff, #004dff, #860089); */\n    background-size: 600% 600%;\n    background-color: #cc0000;\n    color: white;\n    /* -webkit-animation: gradient 7s ease infinite;\n    -moz-animation: gradient 7s ease infinite;\n    -o-animation: gradient 7s ease infinite;\n    animation: gradient 7s ease infinite; */\n    border: 0px groove #ffffff;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ category.name }}                {{ category.description }}                                                                                                                                            Últimos temas / tópicos                ¿Te interesará alguno?                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'CategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Category[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Category } from '../interfaces/category.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private httpClient: HttpClient) { }\n \n  getList(): Category[] {\n    let categories: Category[] = [];\n    let lista = this.httpClient.get('http://localhost:3000/categories'); // llama al backend para obtener categorias\n\n    lista.subscribe((resp: any) => {\n      for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Changelog.html":{"url":"interfaces/Changelog.html","title":"interface - Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Changelog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/changelog.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changes\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Changelog {\n    version: string,\n    changes: string,\n    date: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangelogComponent.html":{"url":"components/ChangelogComponent.html","title":"component - ChangelogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangelogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/changelog/changelog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changelog\n            \n\n            \n                styleUrls\n                ./changelog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changelog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/changelog/changelog.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/changelog/changelog.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.css']\n})\nexport class ChangelogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      Changelog\n      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quas aspernatur eaque quo ex, et ratione eum ea recusandae laborum eveniet, pariatur ullam deleniti!\n    \n\n\n    \n\n    \n                \n                    ./changelog.component.css\n                \n                .card-title {\n    color: #cc0000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Changelog      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quas aspernatur eaque quo ex, et ratione eum ea recusandae laborum eveniet, pariatur ullam deleniti!    '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangelogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            background\n                                        \n                                \n                                \n                                        \n                                            id_advertisement\n                                        \n                                \n                                \n                                        \n                                            id_changelog\n                                        \n                                \n                                \n                                        \n                                            logo\n                                        \n                                \n                                \n                                        \n                                            nombre_foro\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        background:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_advertisement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_advertisement:         Advertisement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Advertisement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_changelog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_changelog:         Changelog\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Changelog\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre_foro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre_foro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Advertisement } from \"./advertisement.interface\";\nimport { Changelog } from \"./changelog.interface\";\n\nexport interface Config {\n    nombre_foro: string,\n    id_advertisement: Advertisement,\n    id_changelog: Changelog,\n    logo: string,\n    background: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convert.html":{"url":"classes/Convert.html","title":"class - Convert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/category.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                categoryToJson\n                            \n                            \n                                    Static\n                                toCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        categoryToJson\n                        \n                    \n                \n            \n            \n                \n                    \n                    categoryToJson(value: Category[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/category.interface.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Category[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        toCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    toCategory(json: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/category.interface.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Category[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Forum } from \"./forum.interface\";\n\nexport interface Category {\n    id:          number;\n    name:        string;\n    description: null | string;\n    position:    number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toCategory(json: string): Category[] {\n        return cast(JSON.parse(json), a(r(\"Category\")));\n    }\n\n    public static categoryToJson(value: Category[]): string {\n        return JSON.stringify(uncast(value, a(r(\"Category\"))), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i  transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        return invalidValue(typ, val);\n    }\n    if (typ === false) return invalidValue(typ, val);\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nconst typeMap: any = {\n    \"Category\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"description\", js: \"description\", typ: u(null, \"\") },\n        { json: \"position\", js: \"position\", typ: 0 },\n    ], false),\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Convert-1.html":{"url":"classes/Convert-1.html","title":"class - Convert-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Convert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toUser\n                            \n                            \n                                    Static\n                                userToJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        toUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    toUser(json: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/user.interface.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        userToJson\n                        \n                    \n                \n            \n            \n                \n                    \n                    userToJson(value: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/user.interface.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface User {\n    id?:                 number;\n    nombre?:             string;\n    apodo?:              string;\n    correo?:             string;\n    firma?:              string;\n    ubicacion?:          string;\n    foto?:               string;\n    fecha_registro?:     Date;\n    ultima_visita?:      Date;\n    pais?:               number;\n}\n\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toUser(json: string): User[] {\n        return cast(JSON.parse(json), a(r(\"User\")));\n    }\n\n    public static userToJson(value: User[]): string {\n        return JSON.stringify(uncast(value, a(r(\"User\"))), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i  transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        return invalidValue(typ, val);\n    }\n    if (typ === false) return invalidValue(typ, val);\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nconst typeMap: any = {\n    \"User\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"nickname\", js: \"nickname\", typ: \"\" },\n        { json: \"mail\", js: \"mail\", typ: \"\" },\n        { json: \"password\", js: \"password\", typ: \"\" },\n        { json: \"sign\", js: \"sign\", typ: \"\" },\n        { json: \"location\", js: \"location\", typ: \"\" },\n        { json: \"picture\", js: \"picture\", typ: \"\" },\n        { json: \"registration_date\", js: \"registration_date\", typ: Date },\n        { json: \"last_visit\", js: \"last_visit\", typ: Date },\n        { json: \"id_language_fk\", js: \"id_language_fk\", typ: 0 },\n        { json: \"id_role_fk\", js: \"id_role_fk\", typ: 0 },\n        { json: \"id_country_fk\", js: \"id_country_fk\", typ: 0 },\n    ], false),\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/country.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    id: number,\n    country: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n            \n              \n            \n            Prorums por www.pavlo.cl\n            \n        \n        \n    \n    \n        con Daniel Ávila y Vicente Goldberg\n    \n    \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                a {\n    color: black;\n    margin: auto;\n}\n\n.align {\n    display: flex;\n}\n\n.align2 {\n    display: flex;\n}\n\np {\n    margin: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Prorums por www.pavlo.cl                                            con Daniel Ávila y Vicente Goldberg        '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Forum.html":{"url":"interfaces/Forum.html","title":"interface - Forum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Forum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/forum.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            foto\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id_categoria_fk\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            posicion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_categoria_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_categoria_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posicion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        posicion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Forum {\n    id:              number;\n    nombre:          string;\n    descripcion:     string;\n    foto:            string;\n    posicion:        number;\n    id_categoria_fk: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForumComponent.html":{"url":"components/ForumComponent.html","title":"component - ForumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/forum/forum.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forum\n            \n\n            \n                styleUrls\n                ./forum.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forum.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desc\n                            \n                            \n                                foro$\n                            \n                            \n                                nombre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id_foro\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(forumService: ForumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/forum/forum.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forumService\n                                                  \n                                                        \n                                                                        ForumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id_foro\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"3\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/index/forum/forum.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/forum/forum.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/index/forum/forum.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foro$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/forum/forum.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/index/forum/forum.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, Observable, tap } from 'rxjs';\nimport { Forum } from 'src/app/interfaces/forum.interface';\nimport { ForumService } from 'src/app/services/forum.service';\n\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.css']\n})\nexport class ForumComponent implements OnInit {\n  constructor(private forumService: ForumService) { \n  }\n  @Input() id_foro: string = \"3\"; // input para pasar datos mediante la vista\n\n  nombre: string = '';\n  desc: string = '';\n  foro$!: Observable;\n\n  ngOnInit(): void {\n    \n    this.foro$ = this.forumService.getById(parseInt(this.id_foro)); // asigno a la variable foro un foro por su id\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            {{ (foro$ | async)?.nombre }}\n            {{ (foro$ | async)?.descripcion }} \n        \n    \n\n    \n\n    \n                \n                    ./forum.component.css\n                \n                a {\n    text-decoration: none;\n    color: black;\n}\n\nh5, p {\n    color: black !important;\n}\n\n.card-header {\n    font-weight: 700 !important;\n}\n\n.foro {\n    padding: 5px;\n}\n\n.img-fluid {\n    max-height: 100%;\n}\n\nimg {\n    width: 55px;\n    height: 55px;\n}\n\n.img {\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ (foro$ | async)?.nombre }}            {{ (foro$ | async)?.descripcion }}             '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForumModule.html":{"url":"modules/ForumModule.html","title":"module - ForumModule","body":"\n                   \n\n\n\n\n    Modules\n    ForumModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ForumModule\n\n\n\ncluster_ForumModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nForumModule\n\nForumModule\n\nForumModule -->\n\nSharedModule->ForumModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forum/forum.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { NavbarComponent } from '../shared/navbar/navbar.component';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class ForumModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ForumService.html":{"url":"injectables/ForumService.html","title":"injectable - ForumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ForumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forum.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getById\n                            \n                            \n                                getForums\n                            \n                            \n                                getList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/forum.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/forum.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getForums\n                        \n                    \n                \n            \n            \n                \ngetForums(categoria: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/forum.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoria\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/forum.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap, map } from 'rxjs';\nimport { Forum } from 'src/app/interfaces/forum.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForumService {\n\n  constructor(private httpClient: HttpClient) { } // importo servicios de fetch\n\n  getForums(categoria: number) {\n    let lista = this.httpClient.get('http://localhost:3000/forums/' + categoria); // get fetch al backend para obtener lista de foros de la categoria\n    let forums: Forum[] = []\n    lista.subscribe((resp: any) => {   \n      for (let i = 0; i  {\n    return this.httpClient.get(`http://localhost:3000/forums`);\n  } // mapeo automatico de lista mediante fetch\n\n  getById(id: number): Observable {\n    return this.httpClient.get(`http://localhost:3000/forum/${id}`)\n    .pipe(map((response: Forum[]) => response[0]));\n  } // mapeo automatico de objeto mediante fetch\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fruit.html":{"url":"interfaces/Fruit.html","title":"interface - Fruit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fruit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fulltopic/fulltopic.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, Observable, startWith } from 'rxjs';\nimport { Thread } from '../interfaces/thread.interface';\nimport { Topic, Topics } from '../interfaces/topic.interface';\nimport { ThreadService } from '../services/thread.service';\nimport { TopicService } from '../services/topic.service';\nimport { UserService } from '../services/user.service';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\n@Component({\n  selector: 'app-fulltopic',\n  templateUrl: './fulltopic.component.html',\n  styleUrls: ['./fulltopic.component.css']\n})\nexport class FulltopicComponent implements OnInit {\n\n  constructor(private topicService: TopicService, \n    private route: ActivatedRoute,\n    private userService: UserService,\n    private threadService: ThreadService,\n    private fb: FormBuilder,\n    private router: Router) {\n      this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n        startWith(null),\n        map((fruit: string | null) => (fruit ? this._filter(fruit) : this.allFruits.slice())),\n      );\n    } // importo servicios y routeservice\n\n  get usuario () {\n    return this.userService.usuario;\n  }\n\n  postThread: FormGroup = this.fb.group({\n    cuerpo:  [ '', [ Validators.required] ],\n  }) // form controller\n\n  id_tema = this.route.snapshot.params[\"id\"]; // saco el id del url\n  topic$: Observable = this.topicService.getById2(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n  threads$: Observable = this.threadService.getByForum(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n\n  post() {\n    const { cuerpo } = this.postThread.value;\n    const body = { cuerpo }\n    this.threadService.postTopic(cuerpo, this.usuario.id!, this.id_tema)\n      .subscribe( resp => {\n        if(resp.ok) window.location.reload();\n      } );\n  }\n  borrar() {\n    this.topicService.borrar(this.id_tema).subscribe( resp => { if(resp.ok) window.location.reload(); });\n  }\n\n  mostraruwu() {\n    this.topicService.mostrar(this.id_tema).subscribe( resp => { if(resp.ok) window.location.reload(); });\n  }\n\n  editar() {\n    this.router.navigateByUrl('/edit/' + this.id_tema, {skipLocationChange: true});\n  }\n\n  ngOnInit(): void {\n    console.log(this.threads$);\n    \n  }\n\n\n\n  //material\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl('');\n  filteredFruits: Observable;\n  reacciones: string[] = ['😂'];\n  allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('fruitInput')\n  fruitInput!: ElementRef;\n\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.reacciones.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.reacciones.indexOf(fruit);\n\n    if (index >= 0) {\n      this.reacciones.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.reacciones.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\n  }\n\n}\n\n// wtf\nexport interface Fruit {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FulltopicComponent.html":{"url":"components/FulltopicComponent.html","title":"component - FulltopicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FulltopicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/fulltopic/fulltopic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-fulltopic\n            \n\n            \n                styleUrls\n                ./fulltopic.component.css\n            \n\n\n\n            \n                templateUrl\n                ./fulltopic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allFruits\n                            \n                            \n                                filteredFruits\n                            \n                            \n                                fruitCtrl\n                            \n                            \n                                fruitInput\n                            \n                            \n                                id_tema\n                            \n                            \n                                postThread\n                            \n                            \n                                reacciones\n                            \n                            \n                                separatorKeysCodes\n                            \n                            \n                                threads$\n                            \n                            \n                                topic$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                add\n                            \n                            \n                                borrar\n                            \n                            \n                                editar\n                            \n                            \n                                mostraruwu\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                post\n                            \n                            \n                                remove\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(topicService: TopicService, route: ActivatedRoute, userService: UserService, threadService: ThreadService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/fulltopic/fulltopic.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(event: MatChipInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatChipInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        borrar\n                        \n                    \n                \n            \n            \n                \nborrar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostraruwu\n                        \n                    \n                \n            \n            \n                \nmostraruwu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(fruit: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fruit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fulltopic/fulltopic.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allFruits\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry']\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFruits\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fruitCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fruitInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fruitInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_tema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.route.snapshot.params[\"id\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    cuerpo:  [ '', [ Validators.required] ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reacciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['😂']\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        separatorKeysCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ENTER, COMMA]\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threads$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.threadService.getByForum(parseInt(this.id_tema))\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topic$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.topicService.getById2(parseInt(this.id_tema))\n                    \n                \n                    \n                        \n                                Defined in src/app/fulltopic/fulltopic.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/fulltopic/fulltopic.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, Observable, startWith } from 'rxjs';\nimport { Thread } from '../interfaces/thread.interface';\nimport { Topic, Topics } from '../interfaces/topic.interface';\nimport { ThreadService } from '../services/thread.service';\nimport { TopicService } from '../services/topic.service';\nimport { UserService } from '../services/user.service';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\n@Component({\n  selector: 'app-fulltopic',\n  templateUrl: './fulltopic.component.html',\n  styleUrls: ['./fulltopic.component.css']\n})\nexport class FulltopicComponent implements OnInit {\n\n  constructor(private topicService: TopicService, \n    private route: ActivatedRoute,\n    private userService: UserService,\n    private threadService: ThreadService,\n    private fb: FormBuilder,\n    private router: Router) {\n      this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n        startWith(null),\n        map((fruit: string | null) => (fruit ? this._filter(fruit) : this.allFruits.slice())),\n      );\n    } // importo servicios y routeservice\n\n  get usuario () {\n    return this.userService.usuario;\n  }\n\n  postThread: FormGroup = this.fb.group({\n    cuerpo:  [ '', [ Validators.required] ],\n  }) // form controller\n\n  id_tema = this.route.snapshot.params[\"id\"]; // saco el id del url\n  topic$: Observable = this.topicService.getById2(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n  threads$: Observable = this.threadService.getByForum(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n\n  post() {\n    const { cuerpo } = this.postThread.value;\n    const body = { cuerpo }\n    this.threadService.postTopic(cuerpo, this.usuario.id!, this.id_tema)\n      .subscribe( resp => {\n        if(resp.ok) window.location.reload();\n      } );\n  }\n  borrar() {\n    this.topicService.borrar(this.id_tema).subscribe( resp => { if(resp.ok) window.location.reload(); });\n  }\n\n  mostraruwu() {\n    this.topicService.mostrar(this.id_tema).subscribe( resp => { if(resp.ok) window.location.reload(); });\n  }\n\n  editar() {\n    this.router.navigateByUrl('/edit/' + this.id_tema, {skipLocationChange: true});\n  }\n\n  ngOnInit(): void {\n    console.log(this.threads$);\n    \n  }\n\n\n\n  //material\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl('');\n  filteredFruits: Observable;\n  reacciones: string[] = ['😂'];\n  allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('fruitInput')\n  fruitInput!: ElementRef;\n\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.reacciones.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.reacciones.indexOf(fruit);\n\n    if (index >= 0) {\n      this.reacciones.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.reacciones.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\n  }\n\n}\n\n// wtf\nexport interface Fruit {\n  name: string;\n}\n\n    \n\n    \n        \n\n    \n        \n            {{ (topic$ | async)?.tipo }}\n        \n        \n            \n                \n                    \n                      {{ (topic$ | async)?.apodo_escritor }}\n                      \n                        \n                      \n                      \n                      {{ (topic$ | async)?.escritor }}\n                      \n                      Última Conexión: \n                      {{ (topic$ | async)?.ultima_visita | date:'medium' }}\n                      {{ (topic$ | async)?.pais }}\n                    \n                \n            \n            \n                \n                    {{ (topic$ | async)?.titulo }} \n                \n                {{ (topic$ | async)?.cuerpo }}\n                \n                    {{ (topic$ | async)?.fecha | date:'fullDate' }}\n                \n\n                \n                    Reacciones :D\n                    \n                      \n                        {{fruit}}\n                      \n                      \n                    \n                \n                  \n            \n        \n    \n\n\n\n\n    \n        \n        \n            Borrar tema\n        \n        \n            Mostrar tema\n        \n        Editar\n    \n\n\n\n\n\n    Responder:\n    \n        \n            \n                \n                  \n                      \n                  \n                \n                \n                      {{ usuario.nombre }}\n                \n              \n        \n    \n\n\n\n    \n        \n            \n                    \n                        \n                        \n                                \n                        \n                                        \n                            \n                                \n                                    {{ hilo.cuerpo }}\n                                \n                            \n                            \n                                {{ hilo.usuario }} - {{ hilo.fecha | date:'medium' }}\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./fulltopic.component.css\n                \n                .info {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n@media (max-width: 500px) {\n    .info {\n      flex-direction: column;\n    }\n  }\n\nh5 {\n    padding: 10px;\n}\n\n.foto {\n    height: 100px !important;\n    text-align: center;\n}\n\nimg {\n    height: 100%;\n}\n\npre {\n    color: black;\n    font-size: large;\n    white-space: normal !important;\n    word-break: break-word;\n}\n\n.resp {\n    margin-left: 10%;\n}\n\n.botones {\n    display: flex;\n    justify-content: space-between;\n}\n\n.title {\n    display: flex;\n    justify-content: space-between;\n}\n\n.body {\n    background-color: rgb(235, 235, 235);\n    border-radius: 10px;\n}\n\n.card {\n    margin: 20px;\n}\n\ncode {\n    color: black;\n    font-size: large;\n    white-space: pre-wrap !important;\n    word-break: break-word;\n    font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.perfil {\n    border-radius: 50%;\n    max-width: 60px;\n    max-height: 60px;\n}\n\n.float {\n    position: absolute;\n    z-index: 100;\n    padding: 10px 10px;\n    border-radius: 10px;\n    transform: translateY(-45px);\n  }\n\n.float h5 {\n    margin: 0;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ (topic$ | async)?.tipo }}                                                                                      {{ (topic$ | async)?.apodo_escritor }}                                                                                                                {{ (topic$ | async)?.escritor }}                                            Última Conexión:                       {{ (topic$ | async)?.ultima_visita | date:\\'medium\\' }}                      {{ (topic$ | async)?.pais }}                                                                                                {{ (topic$ | async)?.titulo }}                                 {{ (topic$ | async)?.cuerpo }}                                    {{ (topic$ | async)?.fecha | date:\\'fullDate\\' }}                                                    Reacciones :D                                                                  {{fruit}}                                                                                                                                                          Borrar tema                            Mostrar tema                Editar        Responder:                                                                                                                                                        {{ usuario.nombre }}                                                                                                                                                                                                                                                                                                                                      {{ hilo.cuerpo }}                                                                                                                        {{ hilo.usuario }} - {{ hilo.fecha | date:\\'medium\\' }}                                                                                                                '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'FulltopicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FulltopicModule.html":{"url":"modules/FulltopicModule.html","title":"module - FulltopicModule","body":"\n                   \n\n\n\n\n    Modules\n    FulltopicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FulltopicModule\n\n\n\ncluster_FulltopicModule_exports\n\n\n\ncluster_FulltopicModule_declarations\n\n\n\n\nFulltopicComponent\n\nFulltopicComponent\n\n\n\nFulltopicModule\n\nFulltopicModule\n\nFulltopicModule -->\n\nFulltopicComponent->FulltopicModule\n\n\n\n\n\nFulltopicComponent \n\nFulltopicComponent \n\nFulltopicComponent  -->\n\nFulltopicModule->FulltopicComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/fulltopic/fulltopic.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FulltopicComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FulltopicComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { FulltopicComponent } from './fulltopic.component';\nimport { FormBuilder, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [\n    FulltopicComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatIconModule\n  ],\n  exports: [\n    FulltopicComponent\n  ],\n})\nexport class FulltopicModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.css\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/index.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : this.categoryService.getList()\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Category } from '../interfaces/category.interface';\nimport { CategoryService } from '../services/category.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  categories: Category[] = this.categoryService.getList(); // obtengo lista de categorias\n  \n  constructor(private userService: UserService, private categoryService: CategoryService) {\n    \n  } // importo servicios\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./index.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IndexModule.html":{"url":"modules/IndexModule.html","title":"module - IndexModule","body":"\n                   \n\n\n\n\n    Modules\n    IndexModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IndexModule\n\n\n\ncluster_IndexModule_declarations\n\n\n\ncluster_IndexModule_imports\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\n\n\nIndexModule\n\nIndexModule\n\nIndexModule -->\n\nCategoryComponent->IndexModule\n\n\n\n\n\nForumComponent\n\nForumComponent\n\nIndexModule -->\n\nForumComponent->IndexModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nIndexModule -->\n\nIndexComponent->IndexModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nIndexModule -->\n\nSharedModule->IndexModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/index/index.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoryComponent\n                        \n                        \n                            ForumComponent\n                        \n                        \n                            IndexComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryComponent } from './category/category.component';\nimport { IndexComponent } from './index.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { ForumComponent } from './forum/forum.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n\n\n@NgModule({\n  declarations: [\n    CategoryComponent,\n    IndexComponent,\n    ForumComponent,\n  ],\n  imports: [\n    MatGridListModule,\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    HttpClientModule,\n  ],\n  exports: [\n  ]\n})\nexport class IndexModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/language.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Language {\n    id: number,\n    language: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/navbar/navbar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/navbar/navbar.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    email:  ['pablojavierprietocepeda@gmail.com', [ Validators.required, Validators.email]],\n    password: [ '', [ Validators.required, Validators.minLength(3)]]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/navbar/navbar.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { UserService } from 'src/app/services/user.service';\n// de los componentes mas importantes de la aplicacion\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  loginForm: FormGroup = this.fb.group({\n    email:  ['pablojavierprietocepeda@gmail.com', [ Validators.required, Validators.email]],\n    password: [ '', [ Validators.required, Validators.minLength(3)]]\n  }) // form controller\n\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) { } // importo servicios y routeservice\n\n  get usuario(): User{\n    return this.userService.usuario; // getter de userservice\n  }\n\n  login() { // accion login perpetrada por el boton submit del formulario\n    const { email, password } =  this.loginForm.value\n    this.userService.getSession(email, password)\n      .subscribe(resp => {\n        if( resp ) {\n          this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n            window.location.reload();\n          });\n        }\n      })\n  }\n\n  logout() { // removemos token jwt del localstorage, por lo tanto desloguea al usuario y lo manda al inicio\n    localStorage.removeItem('token')\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n      window.location.reload();\n    });\n  }\n\n  ngOnInit(): void {\n    this.userService.validarToken().subscribe( // validamos que este logueado\n      resp => {\n        console.log(resp)\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          Prorums\n        \n\n        \n\n        \n          \n            \n              \n                {{ usuario.nombre }}\n              (Logout)\n            \n            \n              \n                 \n              \n            \n          \n        \n        \n        \n          \n            \n              Ingresar\n            \n          \n        \n        \n      \n    \n  \n\n\n  \n    \n      \n        Ingresar\n        \n              \n          \n          \n          \n          Correo\n        \n              \n          \n          \n          \n          Contraseña\n        \n        Ingresar\n        \n        ¿No tienes cuenta?\n           Regístrate\n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                a.nav-link {\n    margin: 0 30px !important;\n}\n\na, button {\n    align-items: center;\n    text-align: center;\n    margin: auto;\n    color: #000;\n}\n\nul {\n    padding: 10px 0;\n}\n\n.imguwu {\n    width:40px; \n    height: 40px;\n    border: 2px solid #c00;\n    border-image-slice: 1;\n    object-fit: cover;\n    /* border-image-source: linear-gradient(to left, #743ad5, #d53a9d); */\n}\n\nbutton {\n    border: 0;\n    background-color: transparent;\n}\n\na, a.nav-link {\n    padding: 0.5rem 1rem;\n    margin: 0 !important;\n}\n\nform {\n    padding: 20px;\n}\n\n.modal-content {\n background-color: #333;\n}\n\nh2 \t\t { \n    text-align:center; \n    margin-bottom:50px; \n  }\n  h2 small { \n    font-weight:normal; \n    color:#888; \n    display:block; \n  }\n  \n  /* form starting stylings ------------------------------- */\n  .group \t\t\t  { \n    position:relative; \n    margin-bottom: 25px;\n  }\n  input, textarea\t\t\t\t{\n    font-size:18px;\n    padding:10px 10px 10px 5px;\n    border:none;\n    background-color: rgb(68, 68, 68);\n    color: white;\n    font-size: 700;\n    text-align: center;\n    width: 100%;\n  }\n  input:focus, textarea:focus \t\t{ outline:none; }\n  \n  /* LABEL ======================================= */\n  label \t\t\t\t {\n    color:black; \n    font-size:18px;\n    font-weight:normal;\n    position:absolute;\n    pointer-events:none;\n    left:5px;\n    top:10px;\n    transition:0.2s ease all; \n    -moz-transition:0.2s ease all; \n    -webkit-transition:0.2s ease all;\n    \n  }\n  \n  /* active state */\n  input:focus ~ label, input:valid ~ label, textarea:focus ~ label, textarea:valid ~ label \t\t{\n    top:-20px;\n    font-size:14px;\n    color:black; \n  }\n  \n  /* BOTTOM BARS ================================= */\n  .bar:before, .bar:after \t{\n      content:'';\n      height:3px; \n      width:0;\n      bottom:1px; \n      position:absolute;\n      background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n      background-size: 600% 600%;\n      color:black; \n      -webkit-animation: gradient 7s ease infinite;\n      -moz-animation: gradient 7s ease infinite;\n      -o-animation: gradient 7s ease infinite;\n      animation: gradient 7s ease infinite;\n      transition:0.2s ease all; \n  }\n  .bar:before {\n    left:50%;\n  }\n  .bar:after {\n    right:50%; \n    transform: rotateY(180deg);\n  }\n  \n  /* active state */\n  input:focus ~ .bar:before, input:focus ~ .bar:after {\n    width:50%;\n  }\n  \n  /* HIGHLIGHTER ================================== */\n  .highlight {\n    position:absolute;\n    height:60%; \n    top:25%; \n    left:0;\n    pointer-events:none;\n    opacity:1;\n    \n  }\n  \n  /* active state */\n  input:focus ~ .highlight {\n    -webkit-animation:inputHighlighter 0.2s ease-in-out;\n    -moz-animation:inputHighlighter 0.2s ease-in-out;\n    animation:inputHighlighter 0.2s ease-in-out;\n  }\n  \n  /* ANIMATIONS ================ */\n  @-webkit-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @-moz-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ffffff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Prorums                                                                            {{ usuario.nombre }}              (Logout)                                                                                                                                                       Ingresar                                                                      Ingresar                                                              Correo                                                              Contraseña                Ingresar                ¿No tienes cuenta?           Regístrate                      '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post\n            \n\n            \n                styleUrls\n                ./post.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fecha_actual\n                            \n                            \n                                id_foro\n                            \n                            \n                                id_tema\n                            \n                            \n                                ok\n                            \n                            \n                                threads$\n                            \n                            \n                                tipo\n                            \n                            \n                                topic$\n                            \n                            \n                                topicForm\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, fb: FormBuilder, route: ActivatedRoute, topicService: TopicService, threadService: ThreadService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/post/post.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fecha_actual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_foro\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.route.snapshot.params[\"id\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_tema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.route.snapshot.params[\"id\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threads$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.threadService.getByForum(parseInt(this.id_tema))\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topic$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.topicService.getById2(parseInt(this.id_tema))\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topicForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    titulo:  [ '', [ Validators.required] ],\n    categoria:  [ '', [ Validators.required ] ],\n    cuerpo: [ '', [ Validators.required] ]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/post/post.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/post/post.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Thread } from '../interfaces/thread.interface';\nimport { Topic } from '../interfaces/topic.interface';\nimport { User } from '../interfaces/user.interface';\nimport { ThreadService } from '../services/thread.service';\nimport { TopicService } from '../services/topic.service';\nimport { UserService } from '../services/user.service';\nimport { MDCRipple } from '@material/ripple';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  \n  tipo = 0;\n  ok = ''\n  id_tema = this.route.snapshot.params[\"id\"]; // saco el id del url\n  id_foro = this.route.snapshot.params[\"id\"]; // obtengo el id desde la url\n  fecha_actual = new Date()\n\n  constructor(private userService: UserService, \n              private fb: FormBuilder, \n              private route: ActivatedRoute,\n              private topicService: TopicService,\n              private threadService: ThreadService,\n              private router: Router) {} // importo servicios y routeservice\n              \n  get usuario(){\n    return this.userService.usuario; // getter de usuario de userService\n  }\n              \n  topicForm: FormGroup = this.fb.group({\n    titulo:  [ '', [ Validators.required] ],\n    categoria:  [ '', [ Validators.required ] ],\n    cuerpo: [ '', [ Validators.required] ]\n  }) // form controller\n  user$!: Observable;\n  \n  topic$: Observable = this.topicService.getById2(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n  threads$: Observable = this.threadService.getByForum(parseInt(this.id_tema)); // llamo a obtener mediante id del servicio de temas\n              \n  post() { // se acciona al presionar el boton de publicar\n    const { titulo, categoria, cuerpo } = this.topicForm.value; // object destructuring del form controller\n    if(this.topicForm.valid) { // si es valido:\n      this.topicService.postTopic(this.id_foro, titulo, categoria, cuerpo, this.id_foro, this.usuario.id!).subscribe( resp => {\n        if(resp.ok) {\n          this.router.navigateByUrl('/topics/' + this.id_foro, {skipLocationChange: true})\n        } else {\n          console.log(resp.ok!)\n          this.ok = resp.resp!\n        }\n      })\n    } else { // si no es valido:\n      this.ok = 'Envío de formulario no válido, la categoría debe tener máximo 20 caracteres, el título y el cuerpo no deben estar vacíos.'\n    }\n  }\n\n  edit() {\n    const { titulo, categoria, cuerpo } = this.topicForm.value; // object destructuring del form controller\n    if(this.topicForm.valid) { // si es valido:\n      this.topicService.editTopic(this.id_tema, titulo, categoria, cuerpo).subscribe( resp => {\n        if(resp.ok) {\n          this.router.navigateByUrl('/topic/' + this.id_tema, {skipLocationChange: true}).then(() => {\n            window.location.reload();\n          })\n        } else {\n          console.log(resp.resp!)\n          this.ok = resp.resp!\n        }\n      })\n    } else { // si no es valido:\n      this.ok = 'Envío de formulario no válido, la categoría debe tener máximo 20 caracteres, el título y el cuerpo no deben estar vacíos.'\n    }\n  }\n\n\n  ngOnInit(): void {\n    this.route.url.subscribe( resp => { \n      this.tipo = (resp[0].path == 'post') ? 1 : 0;\n    });\n    console.log(this.route.params);\n    const selector = '.mdc-button, .mdc-icon-button, .mdc-card__primary-action';\n    const ripples = [].map.call(document.querySelectorAll(selector), function(el) {\n      return new MDCRipple(el);\n    });\n    \n    this.userService.validarToken().subscribe(\n      resp => {\n        this.user$ = this.userService.getById(resp.uid!)\n        if(!resp.ok) { // si el usuario no esta logueado, que lo devuelva a la pagina de listado de topicos, ya que los usuarios no logueados no pueden publicar\n          this.router.navigateByUrl('/topics/' + this.id_foro, {skipLocationChange: true})\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n            \n          \n      \n      \n      \n      Titulo\n    \n\n          \n        \n        \n        \n        Categoria\n      \n      \n          \n        \n        \n        \n        Cuerpo\n    \n    \n    \n        {{ ok }}\n    \n    \n         {{ ok }}\n    \n    \n    \n        {{ (tipo == 0) ? 'Editar': 'Publicar' }}\n    \n\n\n\nVista previa:\n\n\n\n    \n        \n            \n                \n                    \n                        \n                            {{ (topic$ | async)?.tipo }}\n                        \n                    \n                    \n                        \n                            \n                                {{ (topic$ | async)?.titulo }}\n                            \n                            {{ (topic$ | async)?.cuerpo }}\n                            \n                                {{ fecha_actual | date:'fullDate' }}\n                            \n                        \n                    \n                \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            {{ this.topicForm.controls['categoria'].value }}\n                        \n                    \n                    \n                        \n                            \n                                {{ this.topicForm.controls['titulo'].value }}\n                            \n                            {{ this.topicForm.controls['cuerpo'].value }}\n                            \n                                {{ fecha_actual | date:'fullDate' }}\n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            \n                \n                    {{ this.topicForm.controls['categoria'].value }}\n                \n            \n            \n                \n                    \n                        \n                          {{ (user$ | async)?.apodo }}\n                          \n                            \n                          \n                          \n                          {{ (user$ | async)?.nombre }}\n                          \n                          Última Conexión: \n                          {{ (topic$ | async)?.ultima_visita | date:'medium' }}\n                          {{ (topic$ | async)?.pais }}\n                        \n                    \n                \n                \n                    \n                        {{ this.topicForm.controls['titulo'].value }}\n                    \n                    {{ this.topicForm.controls['cuerpo'].value }}\n                    \n                        {{ fecha_actual | date:'fullDate' }}\n                    \n                \n                \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./post.component.css\n                \n                .mt-10 {\n    margin-top: 20px;\n}\n\n.group \t\t\t  { \n    position:relative; \n    margin-bottom: 25px;\n  }\n  input, textarea\t\t\t\t{\n    font-size:18px;\n    padding:10px 10px 10px 5px;\n    border:none;\n    background-color: rgb(255, 255, 255);\n    color: black;\n    font-size: 700;\n    width: 100%;\n    border-bottom: 2px solid rgb(138, 138, 138);\n  }\n\ntextarea {\n    font-size:18px;\n    padding:10px 10px 10px 5px;\n    border:none;\n    background-color: rgb(255, 255, 255);\n    color: black;\n    font-size: 700;\n    width: 100%;\n    min-height: 100px;\n    border-bottom: 2px solid rgb(138, 138, 138);\n    border-left: 2px solid rgb(138, 138, 138);\n}\n  input:focus, textarea:focus \t\t{ outline:none; }\n  \n  /* LABEL ======================================= */\n  label \t\t\t\t {\n    color:rgb(82, 82, 82); \n    font-size:18px;\n    font-weight:normal;\n    position:absolute;\n    pointer-events:none;\n    left:5px;\n    top:10px;\n    transition:0.2s ease all; \n    -moz-transition:0.2s ease all; \n    -webkit-transition:0.2s ease all;\n    \n  }\n  \n  /* active state */\n  input:focus ~ label, input:valid ~ label, textarea:focus ~ label, textarea:valid ~ label \t\t{\n    top:-20px;\n    font-size:14px;\n    color:black;\n  }\n  \n  /* BOTTOM BARS ================================= */\n  .bar:before, .bar:after \t{\n      content:'';\n      height:3px; \n      width:0;\n      bottom:1px; \n      position:absolute;\n      background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n      background-size: 600% 600%;\n      color: white;\n      -webkit-animation: gradient 7s ease infinite;\n      -moz-animation: gradient 7s ease infinite;\n      -o-animation: gradient 7s ease infinite;\n      animation: gradient 7s ease infinite;\n      transition:0.2s ease all; \n  }\n  .bar:before {\n    left:50%;\n  }\n  .bar:after {\n    right:50%; \n    transform: rotateY(180deg);\n  }\n  \n  /* active state */\n  input:focus ~ .bar:before, input:focus ~ .bar:after {\n    width:50%;\n  }\n  \n  /* HIGHLIGHTER ================================== */\n  .highlight {\n    position:absolute;\n    height:60%; \n    top:25%; \n    left:0;\n    pointer-events:none;\n    opacity:1;\n    \n  }\n  \n  /* active state */\n  input:focus ~ .highlight {\n    -webkit-animation:inputHighlighter 0.2s ease-in-out;\n    -moz-animation:inputHighlighter 0.2s ease-in-out;\n    animation:inputHighlighter 0.2s ease-in-out;\n  }\n  \n  /* ANIMATIONS ================ */\n  @-webkit-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @-moz-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ffffff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: white;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n\n  .info {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n@media (max-width: 500px) {\n    .info {\n      flex-direction: column;\n    }\n  }\n\nh5 {\n    padding: 10px;\n}\n\n.foto {\n    height: 100px !important;\n    text-align: center;\n}\n\nimg {\n    height: 100%;\n}\n\ncode {\n    color: black;\n    font-size: large;\n    white-space: pre-wrap !important;\n    word-break: break-word;\n}\n\n.right {\n  display: flex;\n  justify-content: flex-end;\n  right: 0;\n}\n\n.info {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n@media (max-width: 500px) {\n  .info {\n    flex-direction: column;\n  }\n}\n\nh5 {\n  padding: 10px;\n}\n\n.foto {\n  height: 100px !important;\n  text-align: center;\n}\n\nimg {\n  height: 100%;\n}\n\npre {\n  color: black;\n  font-size: large;\n  white-space: normal !important;\n  word-break: break-word;\n}\n\n.resp {\n  margin-left: 10%;\n}\n\n.botones {\n  display: flex;\n  justify-content: space-between;\n}\n\n.title {\n  display: flex;\n  justify-content: space-between;\n}\n\n.body {\n  background-color: rgb(235, 235, 235);\n  border-radius: 10px 10px 0 0;\n  padding: 10px 0 0 0;\n}\n\n.card {\n  margin: 20px;\n}\n\n.float {\n  position: absolute;\n  z-index: 100;\n  padding: 10px 10px;\n  border-radius: 10px;\n  transform: translateY(-45px);\n}\n\n.float h5 {\n  margin: 0;\n  padding: 0;\n}\n\n@use \"@material/card\";\n@include card.core-styles;\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Titulo                                              Categoria                                                      Cuerpo                    {{ ok }}                 {{ ok }}                    {{ (tipo == 0) ? \\'Editar\\': \\'Publicar\\' }}    Vista previa:                                                                                                                {{ (topic$ | async)?.tipo }}                                                                                                                                                    {{ (topic$ | async)?.titulo }}                                                        {{ (topic$ | async)?.cuerpo }}                                                            {{ fecha_actual | date:\\'fullDate\\' }}                                                                                                                                                                                                                                        {{ this.topicForm.controls[\\'categoria\\'].value }}                                                                                                                                                    {{ this.topicForm.controls[\\'titulo\\'].value }}                                                        {{ this.topicForm.controls[\\'cuerpo\\'].value }}                                                            {{ fecha_actual | date:\\'fullDate\\' }}                                                                                                                                                                                                                                                        {{ this.topicForm.controls[\\'categoria\\'].value }}                                                                                                                              {{ (user$ | async)?.apodo }}                                                                                                                                    {{ (user$ | async)?.nombre }}                                                    Última Conexión:                           {{ (topic$ | async)?.ultima_visita | date:\\'medium\\' }}                          {{ (topic$ | async)?.pais }}                                                                                                                        {{ this.topicForm.controls[\\'titulo\\'].value }}                                        {{ this.topicForm.controls[\\'cuerpo\\'].value }}                                            {{ fecha_actual | date:\\'fullDate\\' }}                                                                                                                '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProrumsResponse.html":{"url":"interfaces/ProrumsResponse.html","title":"interface - ProrumsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProrumsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ok\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ok\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ok:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProrumsResponse {\n    ok: boolean,\n    resp?: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reaction.html":{"url":"interfaces/Reaction.html","title":"interface - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/reaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Reaction {\n    id: number,\n    emoji: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/register/register.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/register/register.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/register/register.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    msj: '',\n    color: 'white'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    email:  ['pablojavierprietocepeda@gmail.com', [ Validators.required, Validators.email]],\n    name: [ '', [Validators.required] ],\n    nickname: [ '', [Validators.required] ],\n    password: [ '', [ Validators.required, Validators.minLength(3)] ],\n    confirmPassword: [ '', [Validators.required, Validators.minLength(3)] ]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { delay } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, \n              private userService: UserService,\n              private router: Router) { } // importo servicios y routeservice\n\n  registerForm: FormGroup = this.fb.group({\n    email:  ['pablojavierprietocepeda@gmail.com', [ Validators.required, Validators.email]],\n    name: [ '', [Validators.required] ],\n    nickname: [ '', [Validators.required] ],\n    password: [ '', [ Validators.required, Validators.minLength(3)] ],\n    confirmPassword: [ '', [Validators.required, Validators.minLength(3)] ]\n  }) // form controller\n  ok = {\n    msj: '',\n    color: 'white'\n  };\n  register() { // registramos al usuario\n    const { email, name, nickname, password, confirmPassword } =  this.registerForm.value // object destructuring del form controller\n    console.log(name, nickname);\n    \n    if(password === confirmPassword) { // ejecutese si la password esta confirmada\n      this.userService.register(email, name, nickname, password)\n      .subscribe(resp => {\n        console.log(resp)\n        if(resp.ok) {\n          this.ok = {\n            msj: 'Cuenta creada con éxito',\n            color: 'green'\n          }\n          delay(2000);\n          this.userService.getSession(email, password)\n          .subscribe(resp => {\n            if( resp ) {\n              this.router.navigateByUrl('/', {skipLocationChange: true});\n            }\n          })\n        } else this.ok = {\n          msj: resp.resp!,\n          color: 'red'\n        }\n      })\n    } else this.ok = { // caso contrario, manda mensaje de error\n        msj: 'Las contraseñas no coinciden.',\n        color: 'red'\n    }\n    \n  }\n\n  ngOnInit(): void {\n    this.userService.validarToken().subscribe( // valida si esta logueado, si ya esta logueado nos saca del register\n      resp => {\n        if(resp.ok) {\n          this.router.navigateByUrl('#', {skipLocationChange: true})\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        {{ ok.msj }}\n\n    Ingresar\n    \n          \n        \n        \n        \n        Correo\n    \n          \n        \n        \n        \n        Nombre\n    \n          \n        \n        \n        \n        Apodo\n    \n          \n        \n        \n        \n        Contraseña\n    \n          \n        \n        \n        \n        Confirmar Contraseña\n    \n    Registrar\n    \n    ¿No tienes cuenta?\n        Regístrate\n        \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .form {\n    max-width: 480px;\n    margin: auto;\n}\n\na.nav-link {\n    margin: 0 30px !important;\n}\n\na, button {\n    align-items: center;\n    text-align: center;\n    margin: auto;\n    color: #000;\n}\n\nul {\n    padding: 10px 0;\n}\n\n.imguwu {\n    width:40px; \n    height: 40px;\n    border: 2px solid #c00;\n    border-image-slice: 1;\n    object-fit: cover;\n    /* border-image-source: linear-gradient(to left, #743ad5, #d53a9d); */\n}\n\nbutton {\n    border: 0;\n    background-color: transparent;\n}\n\na, a.nav-link {\n    padding: 0.5rem 1rem;\n    margin: 0 !important;\n}\n\nform {\n    padding: 20px;\n}\n\nh2 \t\t { \n    text-align:center; \n    margin-bottom:50px; \n  }\n  h2 small { \n    font-weight:normal; \n    color:#888; \n    display:block; \n  }\n  \n  /* form starting stylings ------------------------------- */\n  .group \t\t\t  { \n    position:relative; \n    margin-bottom: 25px;\n  }\n  input, textarea\t\t\t\t{\n    font-size:18px;\n    padding:10px 10px 10px 5px;\n    border:none;\n    background-color: rgb(211, 211, 211);\n    color: black;\n    font-size: 700;\n    text-align: center;\n    width: 100%;\n  }\n  input:focus, textarea:focus \t\t{ outline:none; }\n  \n  /* LABEL ======================================= */\n  label \t\t\t\t {\n    color:black; \n    font-size:18px;\n    font-weight:normal;\n    position:absolute;\n    pointer-events:none;\n    left:5px;\n    top:10px;\n    transition:0.2s ease all; \n    -moz-transition:0.2s ease all; \n    -webkit-transition:0.2s ease all;\n    \n  }\n  \n  /* active state */\n  input:focus ~ label, input:valid ~ label, textarea:focus ~ label, textarea:valid ~ label \t\t{\n    top:-20px;\n    font-size:14px;\n    color:black; \n  }\n  \n  /* BOTTOM BARS ================================= */\n  .bar:before, .bar:after \t{\n      content:'';\n      height:3px; \n      width:0;\n      bottom:1px; \n      position:absolute;\n      background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n      background-size: 600% 600%;\n      color:black; \n      -webkit-animation: gradient 7s ease infinite;\n      -moz-animation: gradient 7s ease infinite;\n      -o-animation: gradient 7s ease infinite;\n      animation: gradient 7s ease infinite;\n      transition:0.2s ease all; \n  }\n  .bar:before {\n    left:50%;\n  }\n  .bar:after {\n    right:50%; \n    transform: rotateY(180deg);\n  }\n  \n  /* active state */\n  input:focus ~ .bar:before, input:focus ~ .bar:after {\n    width:50%;\n  }\n  \n  /* HIGHLIGHTER ================================== */\n  .highlight {\n    position:absolute;\n    height:60%; \n    top:25%; \n    left:0;\n    pointer-events:none;\n    opacity:1;\n    \n  }\n  \n  /* active state */\n  input:focus ~ .highlight {\n    -webkit-animation:inputHighlighter 0.2s ease-in-out;\n    -moz-animation:inputHighlighter 0.2s ease-in-out;\n    animation:inputHighlighter 0.2s ease-in-out;\n  }\n  \n  /* ANIMATIONS ================ */\n  @-webkit-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: black;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @-moz-keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: black;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n  @keyframes inputHighlighter {\n      from { \n          background: linear-gradient(68deg, #ffffff, #004dff, #860089);\n          background-size: 600% 600%;\n          color: black;\n          -webkit-animation: gradient 7s ease infinite;\n          -moz-animation: gradient 7s ease infinite;\n          -o-animation: gradient 7s ease infinite;\n          animation: gradient 7s ease infinite;\n       }\n    to \t{ width:0; background:transparent; }\n  }\n\n  .error {\n      color: black;\n      margin: 20px 0 0 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ ok.msj }}    Ingresar                                              Correo                                              Nombre                                              Apodo                                              Contraseña                                              Confirmar Contraseña        Registrar        ¿No tienes cuenta?        Regístrate        '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/role.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Role {\n    id: number,\n    role: string,\n    card: string,\n    permissions: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            foto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            ok\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ok\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ok:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Session {\n    ok: boolean,\n    uid?: number,\n    resp?: string,\n    token?: string,\n    nombre?: string,\n    foto?: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nAdvertisementsComponent\n\nAdvertisementsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAdvertisementsComponent->SharedModule\n\n\n\n\n\nChangelogComponent\n\nChangelogComponent\n\nSharedModule -->\n\nChangelogComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nSharedModule -->\n\nNavbarComponent->SharedModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nSharedModule -->\n\nRegisterComponent->SharedModule\n\n\n\n\n\nShorttopicsComponent\n\nShorttopicsComponent\n\nSharedModule -->\n\nShorttopicsComponent->SharedModule\n\n\n\n\n\nTopicComponent\n\nTopicComponent\n\nSharedModule -->\n\nTopicComponent->SharedModule\n\n\n\n\n\nAdvertisementsComponent \n\nAdvertisementsComponent \n\nAdvertisementsComponent  -->\n\nSharedModule->AdvertisementsComponent \n\n\n\n\n\nChangelogComponent \n\nChangelogComponent \n\nChangelogComponent  -->\n\nSharedModule->ChangelogComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nSharedModule->NavbarComponent \n\n\n\n\n\nShorttopicsComponent \n\nShorttopicsComponent \n\nShorttopicsComponent  -->\n\nSharedModule->ShorttopicsComponent \n\n\n\n\n\nTopicComponent \n\nTopicComponent \n\nTopicComponent  -->\n\nSharedModule->TopicComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvertisementsComponent\n                        \n                        \n                            ChangelogComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ShorttopicsComponent\n                        \n                        \n                            TopicComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvertisementsComponent\n                        \n                        \n                            ChangelogComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ShorttopicsComponent\n                        \n                        \n                            TopicComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RouterModule } from '@angular/router';\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { AdvertisementsComponent } from './advertisements/advertisements.component';\nimport { TopicComponent } from './topic/topic.component';\nimport { ShorttopicsComponent } from './shorttopics/shorttopics.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\n\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    ChangelogComponent,\n    AdvertisementsComponent,\n    TopicComponent,\n    ShorttopicsComponent,\n    FooterComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  exports: [\n    NavbarComponent,\n    ChangelogComponent,\n    AdvertisementsComponent,\n    TopicComponent,\n    ShorttopicsComponent,\n    FooterComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShorttopicsComponent.html":{"url":"components/ShorttopicsComponent.html","title":"component - ShorttopicsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShorttopicsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/shorttopics/shorttopics.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shorttopics\n            \n\n            \n                styleUrls\n                ./shorttopics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shorttopics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tema$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id_tema\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(topicService: TopicService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/shorttopics/shorttopics.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id_tema\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"2\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/shorttopics/shorttopics.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/shorttopics/shorttopics.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tema$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/shorttopics/shorttopics.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Topics } from 'src/app/interfaces/topic.interface';\nimport { TopicService } from 'src/app/services/topic.service';\n\n@Component({\n  selector: 'app-shorttopics',\n  templateUrl: './shorttopics.component.html',\n  styleUrls: ['./shorttopics.component.css']\n})\nexport class ShorttopicsComponent {\n  @Input('id_tema') id_tema: string = \"2\";\n  constructor(private topicService: TopicService, \n              private route: ActivatedRoute) { \n                \n              }\n  tema$!: Observable;\n  ngOnInit(): void {\n    this.tema$ = this.topicService.getById(parseInt(this.id_tema)); // obtengo temas por id\n  }\n}\n\n    \n\n    \n        \n    \n            {{ (tema$ | async)?.titulo }}\n            \n                \n                    {{ (tema$ | async)?.escritor }}\n                \n                {{ (tema$ | async)?.fecha | date:'short' }}\n            \n        \n    \n\n    \n\n    \n                \n                    ./shorttopics.component.css\n                \n                a {\n    text-decoration: none;\n    color: black;\n}\n\np {\n    font-size: 12px;\n    color: grey;\n}\n\n.card-header {\n    font-weight: 700 !important;\n}\n\n.foro {\n    padding: 5px;\n}\n\n.img-fluid {\n    max-height: 100%;\n}\n\nimg {\n    width: 55px;\n    height: 55px;\n    object-fit: fill;\n}\n\n.img {\n    text-align: center;\n}\n\n.spacebet {\n    display: flex;\n    justify-content: space-between;\n}\n\nh6 {\n    text-align: start;\n}\n\n.card-title {\n    margin: 0;\n    padding: 0;\n}\n\n.card-body {\n    max-height: 100px;\n    padding: 10px 0 !important;\n    margin: 0;\n}\n\n.border-gradient {\n    padding: 0;\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ (tema$ | async)?.titulo }}                                                {{ (tema$ | async)?.escritor }}                                {{ (tema$ | async)?.fecha | date:\\'short\\' }}                        '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShorttopicsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thread.html":{"url":"interfaces/Thread.html","title":"interface - Thread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/thread.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cuerpo\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            foto\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id_tema_fk\n                                        \n                                \n                                \n                                        \n                                            id_usuario_fk\n                                        \n                                \n                                \n                                        \n                                            tema\n                                        \n                                \n                                \n                                        \n                                            usuario\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cuerpo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cuerpo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_tema_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_tema_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_usuario_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_usuario_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tema:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usuario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usuario:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Thread {\n    id:            number;\n    cuerpo:        string;\n    fecha:         Date;\n    id_tema_fk:    number;\n    id_usuario_fk: number;\n    usuario:       string;\n    tema:          string;\n    foto:          string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadService.html":{"url":"injectables/ThreadService.html","title":"injectable - ThreadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thread.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByForum\n                            \n                            \n                                postTopic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thread.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByForum\n                        \n                    \n                \n            \n            \n                \ngetByForum(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thread.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTopic\n                        \n                    \n                \n            \n            \n                \npostTopic(cuerpo: string, id_usuario: number, id_tema: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thread.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cuerpo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id_usuario\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id_tema\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { ProrumsResponse } from '../interfaces/response.interface';\nimport { Thread } from '../interfaces/thread.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadService {\n\n  constructor(private httpClient: HttpClient) { } // importo servicios fetch\n\n  getByForum(id: number): Observable {\n    return this.httpClient.get(`http://localhost:3000/threads/${id}`)\n  } // mapeo automatico mediante fetch\n\n  postTopic(cuerpo: string, id_usuario: number, id_tema: number) {\n    const url = 'http://localhost:3000/post/thread';\n    const body = { cuerpo, id_usuario, id_tema } // objeto body conformado por los entry paramenters\n    return this.httpClient.post(url, body) // respuesta ok y msg que devuelve el post al ejecutarse\n  } // todo: cambiar\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ToggleDirective.html":{"url":"directives/ToggleDirective.html","title":"directive - ToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toggle.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appToggle]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toggle.directive.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appToggle]'\n})\nexport class ToggleDirective {\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Topic.html":{"url":"interfaces/Topic.html","title":"interface - Topic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Topic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/topic.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apodo_escritor\n                                        \n                                \n                                \n                                        \n                                            borrado\n                                        \n                                \n                                \n                                        \n                                            categoria\n                                        \n                                \n                                \n                                        \n                                            cuerpo\n                                        \n                                \n                                \n                                        \n                                            escritor\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            foro\n                                        \n                                \n                                \n                                        \n                                            foto\n                                        \n                                \n                                \n                                        \n                                            foto_foro\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id_foro_fk\n                                        \n                                \n                                \n                                        \n                                            id_usuario_fk\n                                        \n                                \n                                \n                                        \n                                            pais\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                                \n                                        \n                                            titulo\n                                        \n                                \n                                \n                                        \n                                            ultima_visita\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apodo_escritor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apodo_escritor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        borrado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        borrado:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cuerpo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cuerpo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        escritor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        escritor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto_foro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto_foro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_foro_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_foro_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_usuario_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_usuario_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pais\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pais:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titulo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ultima_visita\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ultima_visita:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Topics {\n    id:               number;\n    titulo:           string;\n    fecha:            string;\n    tipo:             string;\n    id_foro_fk:       number;\n    nombre_foro:      string;\n    descripcion_foro: string;\n    foto:             string;\n    id_usuario_fk:    string;\n    escritor:         string;\n    apodo_escritor:   string;\n    borrado:          number;\n}\n\nexport interface Topic {\n    id:             number;\n    titulo:         string;\n    cuerpo:         string;\n    fecha:          string;\n    tipo:           string;\n    id_foro_fk:     number;\n    foto:           string;\n    id_usuario_fk:  number;\n    escritor:       string;\n    apodo_escritor: string;\n    foro:           string;\n    foto_foro:      string;\n    categoria:      string;\n    pais:           string;\n    ultima_visita:  string;\n    borrado:          number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopicComponent.html":{"url":"components/TopicComponent.html","title":"component - TopicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/topic/topic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topic\n            \n\n            \n                styleUrls\n                ./topic.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tema$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id_tema\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(topicService: TopicService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/topic/topic.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id_tema\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"3\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/topic/topic.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/topic/topic.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tema$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/topic/topic.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Topics } from '../../interfaces/topic.interface';\nimport { TopicService } from '../../services/topic.service';\n\n\n@Component({\n  selector: 'app-topic',\n  templateUrl: './topic.component.html',\n  styleUrls: ['./topic.component.css']\n})\nexport class TopicComponent implements OnInit {\n  @Input() id_tema: string = \"3\";\n  constructor(private topicService: TopicService, \n              private route: ActivatedRoute) { }\n  \n  tema$!: Observable;\n  \n  ngOnInit(): void {\n    this.tema$ = this.topicService.getById(parseInt(this.id_tema));\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            {{ (tema$ | async)?.titulo }}\n        \n        \n            Iniciado por \n                \n                    {{ (tema$ | async)?.escritor }}\n                \n                el {{ (tema$ | async)?.fecha | date:'medium' }}\n                \n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./topic.component.css\n                \n                a {\n    text-decoration: none;\n    color: black;\n}\n\np {\n    font-size: 12px;\n    color: grey;\n}\n\n.card-header {\n    font-weight: 700 !important;\n}\n\n.foro {\n    padding: 5px;\n}\n\n.img-fluid {\n    max-height: 100%;\n}\n\nimg {\n    width: 55px;\n    height: 55px;\n    object-fit: cover;\n}\n\n.img {\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ (tema$ | async)?.titulo }}                            Iniciado por                                     {{ (tema$ | async)?.escritor }}                                el {{ (tema$ | async)?.fecha | date:\\'medium\\' }}                                                '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopicService.html":{"url":"injectables/TopicService.html","title":"injectable - TopicService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TopicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/topic.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                borrar\n                            \n                            \n                                editTopic\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                getById2\n                            \n                            \n                                getByUser\n                            \n                            \n                                getTopics\n                            \n                            \n                                mostrar\n                            \n                            \n                                postTopic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/topic.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        borrar\n                        \n                    \n                \n            \n            \n                \nborrar(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTopic\n                        \n                    \n                \n            \n            \n                \neditTopic(id: number, titulo: string, categoria: string, cuerpo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    titulo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cuerpo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById2\n                        \n                    \n                \n            \n            \n                \ngetById2(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUser\n                        \n                    \n                \n            \n            \n                \ngetByUser(user: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopics\n                        \n                    \n                \n            \n            \n                \ngetTopics(forum: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forum\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrar\n                        \n                    \n                \n            \n            \n                \nmostrar(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTopic\n                        \n                    \n                \n            \n            \n                \npostTopic(foro: number, titulo: string, categoria: string, cuerpo: string, id_foro: number, id_usuario: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/topic.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    foro\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    titulo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cuerpo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id_foro\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id_usuario\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { ProrumsResponse } from '../interfaces/response.interface';\nimport { Topic, Topics } from '../interfaces/topic.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n\n  constructor(private httpClient: HttpClient) { } // importo servicios fetch\n\n  getAll(): Observable {\n    return this.httpClient.get(`http://localhost:3000/topics`)\n  } // mapeo automatico mediante fetch\n\n  getByUser(user: number) {\n    let lista = this.httpClient.get('http://localhost:3000/user/' + user + '/topics'); // fetch get para obtener los temas de un usuario x\n    let topics: Topics[] = []\n    lista.subscribe((resp: any) => {   \n      for (let i = 0; i  {\n    return this.httpClient.get(`http://localhost:3000/topics/${forum}`) // fetch get mapeo automatico de lista de temas de un foro\n  }\n\n  getById(id: number): Observable {\n    return this.httpClient.get(`http://localhost:3000/topic/${id}`) // fetch get mapeo automatico de tema por id\n    .pipe(map((response: Topics[]) => response[0]));\n  }\n\n  getById2(id: number): Observable {\n    return this.httpClient.get(`http://localhost:3000/topic/${id}`) // fetch get mapeo automatico de tema por id con otro tipo de interfaz que pasa mas info desde el backend\n    .pipe(map((response: Topic[]) => response[0]));\n  }\n\n  postTopic(foro: number, titulo: string, categoria: string, cuerpo: string, id_foro: number, id_usuario: number) {\n    const url = 'http://localhost:3000/post/';\n    const body = { foro, titulo, categoria, cuerpo, id_foro, id_usuario } // objeto body conformado por los entry paramenters\n    return this.httpClient.post(url, body) // respuesta ok y msg que devuelve el post al ejecutarse\n  }\n\n  editTopic(id:number, titulo: string, categoria: string, cuerpo: string) {\n    const url = 'http://localhost:3000/post/edit/';\n    const body = { id, titulo, categoria, cuerpo } // objeto body conformado por los entry paramenters\n    return this.httpClient.post(url, body) // respuesta ok y msg que devuelve el post al ejecutarse\n  }\n\n  borrar(id: number) {\n    return this.httpClient.post(`http://localhost:3000/post/hide`, { id });\n  }\n\n  mostrar(id: number) {\n    return this.httpClient.post(`http://localhost:3000/post/show`, { id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Topics.html":{"url":"interfaces/Topics.html","title":"interface - Topics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Topics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/topic.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apodo_escritor\n                                        \n                                \n                                \n                                        \n                                            borrado\n                                        \n                                \n                                \n                                        \n                                            descripcion_foro\n                                        \n                                \n                                \n                                        \n                                            escritor\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            foto\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id_foro_fk\n                                        \n                                \n                                \n                                        \n                                            id_usuario_fk\n                                        \n                                \n                                \n                                        \n                                            nombre_foro\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                                \n                                        \n                                            titulo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apodo_escritor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apodo_escritor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        borrado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        borrado:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion_foro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion_foro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        escritor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        escritor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_foro_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_foro_fk:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_usuario_fk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_usuario_fk:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre_foro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre_foro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titulo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Topics {\n    id:               number;\n    titulo:           string;\n    fecha:            string;\n    tipo:             string;\n    id_foro_fk:       number;\n    nombre_foro:      string;\n    descripcion_foro: string;\n    foto:             string;\n    id_usuario_fk:    string;\n    escritor:         string;\n    apodo_escritor:   string;\n    borrado:          number;\n}\n\nexport interface Topic {\n    id:             number;\n    titulo:         string;\n    cuerpo:         string;\n    fecha:          string;\n    tipo:           string;\n    id_foro_fk:     number;\n    foto:           string;\n    id_usuario_fk:  number;\n    escritor:       string;\n    apodo_escritor: string;\n    foro:           string;\n    foto_foro:      string;\n    categoria:      string;\n    pais:           string;\n    ultima_visita:  string;\n    borrado:          number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopicsComponent.html":{"url":"components/TopicsComponent.html","title":"component - TopicsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopicsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/topics/topics.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topics\n            \n\n            \n                styleUrls\n                ./topics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                foro$\n                            \n                            \n                                id_foro\n                            \n                            \n                                temas$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(topicService: TopicService, route: ActivatedRoute, forumService: ForumService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/topics/topics.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        forumService\n                                                  \n                                                        \n                                                                        ForumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/topics/topics.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        foro$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.forumService.getById(this.id_foro)\n                    \n                \n                    \n                        \n                                Defined in src/app/topics/topics.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_foro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.params[\"id\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/topics/topics.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temas$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.topicService.getTopics(this.id_foro)\n                    \n                \n                    \n                        \n                                Defined in src/app/topics/topics.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/topics/topics.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Forum } from '../interfaces/forum.interface';\nimport { Topics } from '../interfaces/topic.interface';\nimport { ForumService } from '../services/forum.service';\nimport { TopicService } from '../services/topic.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-topics',\n  templateUrl: './topics.component.html',\n  styleUrls: ['./topics.component.css']\n})\nexport class TopicsComponent implements OnInit {\n  id_foro: number = this.route.snapshot.params[\"id\"];\n  constructor(private topicService: TopicService, \n              private route: ActivatedRoute, \n              private forumService: ForumService,\n              private userService: UserService) { \n\n  }\n  get usuario() {\n    return this.userService.usuario;\n  }\n  foro$: Observable = this.forumService.getById(this.id_foro); // obtengo foro por id\n  temas$: Observable = this.topicService.getTopics(this.id_foro); // obtengo temas por foro\n\n  ngOnInit(): void {\n    \n  }\n}\n\n    \n\n    \n        \n    \n        Publicar\n    \n    \n    \n        {{ ( foro$ | async )?.nombre }}\n        {{ ( foro$ | async )?.descripcion }}\n    \n    \n        \n            \n        \n    \n    \n    \n    \n        Publicar\n    \n    \n\n\n    \n\n    \n                \n                    ./topics.component.css\n                \n                p {\n    margin: 0;\n}\n\n.right {\n    display: flex;\n    justify-content: flex-end;\n    right: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Publicar                    {{ ( foro$ | async )?.nombre }}        {{ ( foro$ | async )?.descripcion }}                                                            Publicar        '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopicsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apodo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            correo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fecha_registro\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firma\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            foto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nombre\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pais\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ubicacion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ultima_visita\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apodo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apodo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        correo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_registro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_registro:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firma\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firma:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pais\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pais:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ubicacion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ubicacion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ultima_visita\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ultima_visita:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id?:                 number;\n    nombre?:             string;\n    apodo?:              string;\n    correo?:             string;\n    firma?:              string;\n    ubicacion?:          string;\n    foto?:               string;\n    fecha_registro?:     Date;\n    ultima_visita?:      Date;\n    pais?:               number;\n}\n\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toUser(json: string): User[] {\n        return cast(JSON.parse(json), a(r(\"User\")));\n    }\n\n    public static userToJson(value: User[]): string {\n        return JSON.stringify(uncast(value, a(r(\"User\"))), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i  transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        return invalidValue(typ, val);\n    }\n    if (typ === false) return invalidValue(typ, val);\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nconst typeMap: any = {\n    \"User\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"nickname\", js: \"nickname\", typ: \"\" },\n        { json: \"mail\", js: \"mail\", typ: \"\" },\n        { json: \"password\", js: \"password\", typ: \"\" },\n        { json: \"sign\", js: \"sign\", typ: \"\" },\n        { json: \"location\", js: \"location\", typ: \"\" },\n        { json: \"picture\", js: \"picture\", typ: \"\" },\n        { json: \"registration_date\", js: \"registration_date\", typ: Date },\n        { json: \"last_visit\", js: \"last_visit\", typ: Date },\n        { json: \"id_language_fk\", js: \"id_language_fk\", typ: 0 },\n        { json: \"id_role_fk\", js: \"id_role_fk\", typ: 0 },\n        { json: \"id_country_fk\", js: \"id_country_fk\", typ: 0 },\n    ], false),\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                styleUrls\n                ./user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                temas\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, route: ActivatedRoute, topicService: TopicService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicService\n                                                  \n                                                        \n                                                                        TopicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.route.snapshot.params[\"id\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/user/user.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Topics[]\n\n                    \n                \n                \n                    \n                        Default value : this.topicService.getByUser(parseInt(this.id_user))\n                    \n                \n                    \n                        \n                                Defined in src/app/user/user.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.userService.getById(parseInt(this.id_user))\n                    \n                \n                    \n                        \n                                Defined in src/app/user/user.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Topics } from '../interfaces/topic.interface';\nimport { User } from '../interfaces/user.interface';\nimport { TopicService } from '../services/topic.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n\n  constructor(private userService: UserService, private route: ActivatedRoute, private topicService: TopicService) { }\n  id_user = this.route.snapshot.params[\"id\"];\n  user$: Observable = this.userService.getById(parseInt(this.id_user)); \n  temas: Topics[] = this.topicService.getByUser(parseInt(this.id_user));\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                \n                    \n                \n                Tus temas:\n            \n            \n                 \n                    \n                        \n                    \n                \n            \n        \n    \n    \n    \n        \n        \n            \n                Nickname: {{ (user$ | async)?.apodo }},\n                Última visita: {{ (user$ | async)?.ultima_visita | date }}\n            \n            Guardar\n        \n        \n        \n        \n            \n                  \n              \n              \n              \n              Name\n            \n              \n                  \n              \n              \n              \n              Email\n            \n\n                  \n              \n              \n              \n              Firma\n            \n\n                  \n                \n                \n                \n                Ubicación\n            \n\n                  \n                \n                \n                \n                Foto\n            \n\n                  \n                \n                \n                \n                Pais\n            \n            \n          \n    \n\n    \n\n    \n                \n                    ./user.component.css\n                \n                .profile {\n    height: 200px;\n    width: 200px;\n    border: 5px solid;\n    border-image-slice: 4;\n    border-image-source: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n    border-image: fill;\n}\n\n.align {\n  display: flex;\n  justify-content: space-between;\n}\n\nh2 \t\t { \n  text-align:center; \n  margin-bottom:50px; \n}\nh2 small { \n  font-weight:normal; \n  color:#888; \n  display:block; \n}\n\n/* form starting stylings ------------------------------- */\nh2 \t\t { \n  text-align:center; \n  margin-bottom:50px; \n}\nh2 small { \n  font-weight:normal; \n  color:#888; \n  display:block; \n}\n\n/* form starting stylings ------------------------------- */\n.group \t\t\t  { \n  position:relative; \n  margin-bottom: 25px;\n}\ninput, textarea\t\t\t\t{\n  font-size:18px;\n  padding:10px 10px 10px 5px;\n  border:none;\n  background-color: rgb(68, 68, 68);\n  color: white;\n  font-size: 700;\n  text-align: center;\n  width: 100%;\n}\ninput:focus, textarea:focus \t\t{ outline:none; }\n\n/* LABEL ======================================= */\nlabel \t\t\t\t {\n  color:white; \n  font-size:18px;\n  font-weight:normal;\n  position:absolute;\n  pointer-events:none;\n  left:5px;\n  top:10px;\n  transition:0.2s ease all; \n  -moz-transition:0.2s ease all; \n  -webkit-transition:0.2s ease all;\n  \n}\n\n/* active state */\ninput:focus ~ label, input:valid ~ label, textarea:focus ~ label, textarea:valid ~ label \t\t{\n  top:-20px;\n  font-size:14px;\n  color:white;\n}\n\n/* BOTTOM BARS ================================= */\n.bar:before, .bar:after \t{\n    content:'';\n    height:3px; \n    width:0;\n    bottom:1px; \n    position:absolute;\n    background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n    background-size: 600% 600%;\n    color: white;\n    -webkit-animation: gradient 7s ease infinite;\n    -moz-animation: gradient 7s ease infinite;\n    -o-animation: gradient 7s ease infinite;\n    animation: gradient 7s ease infinite;\n    transition:0.2s ease all; \n}\n.bar:before {\n  left:50%;\n}\n.bar:after {\n  right:50%; \n  transform: rotateY(180deg);\n}\n\n/* active state */\ninput:focus ~ .bar:before, input:focus ~ .bar:after {\n  width:50%;\n}\n\n/* HIGHLIGHTER ================================== */\n.highlight {\n  position:absolute;\n  height:60%; \n  top:25%; \n  left:0;\n  pointer-events:none;\n  opacity:1;\n  \n}\n\n/* active state */\ninput:focus ~ .highlight {\n  -webkit-animation:inputHighlighter 0.2s ease-in-out;\n  -moz-animation:inputHighlighter 0.2s ease-in-out;\n  animation:inputHighlighter 0.2s ease-in-out;\n}\n\n/* ANIMATIONS ================ */\n@-webkit-keyframes inputHighlighter {\n    from { \n        background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n        background-size: 600% 600%;\n        color: white;\n        -webkit-animation: gradient 7s ease infinite;\n        -moz-animation: gradient 7s ease infinite;\n        -o-animation: gradient 7s ease infinite;\n        animation: gradient 7s ease infinite;\n     }\n  to \t{ width:0; background:transparent; }\n}\n@-moz-keyframes inputHighlighter {\n    from { \n        background: linear-gradient(68deg, #ee00ff, #004dff, #860089);\n        background-size: 600% 600%;\n        color: white;\n        -webkit-animation: gradient 7s ease infinite;\n        -moz-animation: gradient 7s ease infinite;\n        -o-animation: gradient 7s ease infinite;\n        animation: gradient 7s ease infinite;\n     }\n  to \t{ width:0; background:transparent; }\n}\n@keyframes inputHighlighter {\n    from { \n        background: linear-gradient(68deg, #ffffff, #004dff, #860089);\n        background-size: 600% 600%;\n        color: white;\n        -webkit-animation: gradient 7s ease infinite;\n        -moz-animation: gradient 7s ease infinite;\n        -o-animation: gradient 7s ease infinite;\n        animation: gradient 7s ease infinite;\n     }\n  to \t{ width:0; background:transparent; }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Tus temas:                                                                                                                                                                                                     Nickname: {{ (user$ | async)?.apodo }},                Última visita: {{ (user$ | async)?.ultima_visita | date }}                        Guardar                                                                                                                      Name                                                                                                    Email                                                                                      Firma                                                                                              Ubicación                                                                                              Foto                                                                                              Pais                                      '\n    var COMPONENTS = [{'name': 'AdvertisementsComponent', 'selector': 'app-advertisements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ChangelogComponent', 'selector': 'app-changelog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForumComponent', 'selector': 'app-forum'},{'name': 'FulltopicComponent', 'selector': 'app-fulltopic'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ShorttopicsComponent', 'selector': 'app-shorttopics'},{'name': 'TopicComponent', 'selector': 'app-topic'},{'name': 'TopicsComponent', 'selector': 'app-topics'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [{'name': 'ToggleDirective', 'selector': '[appToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserComponent } from './user.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    UserComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getById\n                            \n                            \n                                getByIdNotObserver\n                            \n                            \n                                getList\n                            \n                            \n                                getSession\n                            \n                            \n                                register\n                            \n                            \n                                validarToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByIdNotObserver\n                        \n                    \n                \n            \n            \n                \ngetByIdNotObserver(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(mail: string, name: string, nickname: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nickname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validarToken\n                        \n                    \n                \n            \n            \n                \nvalidarToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    nombre: '',\n    id: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user.service.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable, tap } from 'rxjs';\nimport { ProrumsResponse } from '../interfaces/response.interface';\nimport { Session } from '../interfaces/session.interface';\nimport { User } from '../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient: HttpClient) { } // importacion de servicios\n\n  private _usuario: User = {\n    nombre: '',\n    id: 0,\n  }; // objeto usuario para uso exclusivo de este .ts\n \n  getList():Array {\n    let users: User[] = [];\n    let lista = this.httpClient.get('http://localhost:3000/users');\n\n    lista.subscribe((resp: any) => {\n\n      for (let index = 0; index  {\n    return this.httpClient.get('http://localhost:3000/user/' + id)\n    .pipe(map((response: User[]) => response[0])); // mapeo automatico de lista de usuarios\n  }\n\n  getByIdNotObserver(id: number) { // mapeo de usuario por id no observable\n    return this.httpClient.get('http://localhost:3000/user/' + id)\n      .pipe(\n        map( resp => {\n          this._usuario = {\n            id: resp.id,\n            nombre: resp.nombre,\n            apodo: resp.apodo,\n            correo: resp.correo,\n            firma: resp.firma,\n            ubicacion: resp.ubicacion,\n            foto: resp.ubicacion,\n            fecha_registro: resp.fecha_registro,\n            ultima_visita: resp.ultima_visita,\n            pais: resp.pais,\n          }\n        })\n      )\n  }\n\n  get usuario(): User {\n    return { ...this._usuario } // getter usuario de userService\n  }\n\n  getSession(mail: string, password: string) { // loguear al usuario\n    const url = `http://localhost:3000/auth/login`\n    const body = { mail, password }\n    return this.httpClient.post(url, body)\n      .pipe(\n        tap( resp => {\n          if( resp.ok ) {\n            localStorage.setItem('token', resp.token!) // guardamos el jwt en localstorage\n            this._usuario = {\n              id: resp.uid!,\n              nombre: resp.nombre!,\n              foto: resp.foto!\n            } // le asignamos al usuario la response\n          }\n        } ),\n        map( resp => resp.ok )\n      )\n  }\n\n  register(mail: string, name: string, nickname: string, password: string) {\n    const url = `http://localhost:3000/auth/register`\n    const body = { mail, name, nickname, password, ubicacion: '' }\n    return this.httpClient.post(url, body) // registramos al usuario via post, devuelve una response\n  }\n\n  validarToken() { // revisamos token jwt del localstorage y verificamos que este logueado o no.\n    const url = 'http://localhost:3000/auth/renew'\n    const body = { token: localStorage.getItem('token') }\n\n    return this.httpClient.post(url, body) \n      .pipe(\n        tap( resp => {\n            this._usuario = {\n              id: resp.uid || 0,\n              nombre: resp.nombre!,\n              foto: resp.foto!\n            }\n        })\n      )\n\n  }\n  \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/fulltopic/fulltopic.component.ts\n            \n            component\n            FulltopicComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/fulltopic/fulltopic.component.ts\n            \n            interface\n            Fruit\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/index/category/category.component.ts\n            \n            component\n            CategoryComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/index/forum/forum.component.ts\n            \n            component\n            ForumComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/advertisement.interface.ts\n            \n            interface\n            Advertisement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            class\n            Convert\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            a\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            invalidValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            jsonToJSProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            jsToJSONProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            m\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            o\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            r\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            transform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            u\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            function\n            uncast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/category.interface.ts\n            \n            variable\n            typeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/changelog.interface.ts\n            \n            interface\n            Changelog\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/config.interface.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/country.interface.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/forum.interface.ts\n            \n            interface\n            Forum\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/language.interface.ts\n            \n            interface\n            Language\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/reaction.interface.ts\n            \n            interface\n            Reaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/response.interface.ts\n            \n            interface\n            ProrumsResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/role.interface.ts\n            \n            interface\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/session.interface.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/thread.interface.ts\n            \n            interface\n            Thread\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/topic.interface.ts\n            \n            interface\n            Topic\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/interfaces/topic.interface.ts\n            \n            interface\n            Topics\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            class\n            Convert\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            a\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            invalidValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            jsonToJSProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            jsToJSONProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            m\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            o\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            r\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            transform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            u\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            function\n            uncast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            variable\n            typeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/post/post.component.ts\n            \n            component\n            PostComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/forum.service.ts\n            \n            injectable\n            ForumService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/thread.service.ts\n            \n            injectable\n            ThreadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/topic.service.ts\n            \n            injectable\n            TopicService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/advertisements/advertisements.component.ts\n            \n            component\n            AdvertisementsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/changelog/changelog.component.ts\n            \n            component\n            ChangelogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/shorttopics/shorttopics.component.ts\n            \n            component\n            ShorttopicsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/topic/topic.component.ts\n            \n            component\n            TopicComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/toggle.directive.ts\n            \n            directive\n            ToggleDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/topics/topics.component.ts\n            \n            component\n            TopicsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @material/card : ^14.0.0\n        \n            animate.css : ^4.1.1\n        \n            axios : ^0.27.2\n        \n            rxjs : ~7.5.0\n        \n            ts-token-generator : ^1.0.4\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            a   (src/.../category.interface.ts)\n                        \n                        \n                            a   (src/.../user.interface.ts)\n                        \n                        \n                            cast   (src/.../category.interface.ts)\n                        \n                        \n                            cast   (src/.../user.interface.ts)\n                        \n                        \n                            invalidValue   (src/.../category.interface.ts)\n                        \n                        \n                            invalidValue   (src/.../user.interface.ts)\n                        \n                        \n                            jsonToJSProps   (src/.../category.interface.ts)\n                        \n                        \n                            jsonToJSProps   (src/.../user.interface.ts)\n                        \n                        \n                            jsToJSONProps   (src/.../category.interface.ts)\n                        \n                        \n                            jsToJSONProps   (src/.../user.interface.ts)\n                        \n                        \n                            m   (src/.../category.interface.ts)\n                        \n                        \n                            m   (src/.../user.interface.ts)\n                        \n                        \n                            o   (src/.../category.interface.ts)\n                        \n                        \n                            o   (src/.../user.interface.ts)\n                        \n                        \n                            r   (src/.../category.interface.ts)\n                        \n                        \n                            r   (src/.../user.interface.ts)\n                        \n                        \n                            transform   (src/.../category.interface.ts)\n                        \n                        \n                            transform   (src/.../user.interface.ts)\n                        \n                        \n                            u   (src/.../category.interface.ts)\n                        \n                        \n                            u   (src/.../user.interface.ts)\n                        \n                        \n                            uncast   (src/.../category.interface.ts)\n                        \n                        \n                            uncast   (src/.../user.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/category.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        a\n                        \n                    \n                \n            \n            \n                \na(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast(val: any, typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidValue\n                        \n                    \n                \n            \n            \n                \ninvalidValue(typ: any, val: any, key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsonToJSProps\n                        \n                    \n                \n            \n            \n                \njsonToJSProps(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsToJSONProps\n                        \n                    \n                \n            \n            \n                \njsToJSONProps(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        m\n                        \n                    \n                \n            \n            \n                \nm(additional: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    additional\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        o\n                        \n                    \n                \n            \n            \n                \no(props, additional: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    additional\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        r\n                        \n                    \n                \n            \n            \n                \nr(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(val: any, typ: any, getProps: any, key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    getProps\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        u\n                        \n                    \n                \n            \n            \n                \nu(...typs: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uncast\n                        \n                    \n                \n            \n            \n                \nuncast(val: T, typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/interfaces/user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        a\n                        \n                    \n                \n            \n            \n                \na(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast(val: any, typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidValue\n                        \n                    \n                \n            \n            \n                \ninvalidValue(typ: any, val: any, key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsonToJSProps\n                        \n                    \n                \n            \n            \n                \njsonToJSProps(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsToJSONProps\n                        \n                    \n                \n            \n            \n                \njsToJSONProps(typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        m\n                        \n                    \n                \n            \n            \n                \nm(additional: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    additional\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        o\n                        \n                    \n                \n            \n            \n                \no(props, additional: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    additional\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        r\n                        \n                    \n                \n            \n            \n                \nr(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(val: any, typ: any, getProps: any, key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    getProps\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        u\n                        \n                    \n                \n            \n            \n                \nu(...typs: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uncast\n                        \n                    \n                \n            \n            \n                \nuncast(val: T, typ: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typ\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProrums\nThis project was generated with Angular CLI version 13.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForumModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FulltopicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IndexModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ForumModule\n\n\n\ncluster_FulltopicModule\n\n\n\ncluster_FulltopicModule_declarations\n\n\n\ncluster_FulltopicModule_exports\n\n\n\ncluster_IndexModule\n\n\n\ncluster_IndexModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nToggleDirective\n\nToggleDirective\n\nAppModule -->\n\nToggleDirective->AppModule\n\n\n\n\n\nTopicsComponent\n\nTopicsComponent\n\nAppModule -->\n\nTopicsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFulltopicModule\n\nFulltopicModule\n\nAppModule -->\n\nFulltopicModule->AppModule\n\n\n\n\n\nFulltopicComponent \n\nFulltopicComponent \n\nFulltopicComponent  -->\n\nFulltopicModule->FulltopicComponent \n\n\n\n\n\nIndexModule\n\nIndexModule\n\nAppModule -->\n\nIndexModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nIndexModule -->\n\nSharedModule->IndexModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nForumModule\n\nForumModule\n\nForumModule -->\n\nSharedModule->ForumModule\n\n\n\n\n\nAdvertisementsComponent \n\nAdvertisementsComponent \n\nAdvertisementsComponent  -->\n\nSharedModule->AdvertisementsComponent \n\n\n\n\n\nChangelogComponent \n\nChangelogComponent \n\nChangelogComponent  -->\n\nSharedModule->ChangelogComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nSharedModule->NavbarComponent \n\n\n\n\n\nShorttopicsComponent \n\nShorttopicsComponent \n\nShorttopicsComponent  -->\n\nSharedModule->ShorttopicsComponent \n\n\n\n\n\nTopicComponent \n\nTopicComponent \n\nTopicComponent  -->\n\nSharedModule->TopicComponent \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nFulltopicComponent\n\nFulltopicComponent\n\nFulltopicModule -->\n\nFulltopicComponent->FulltopicModule\n\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\nIndexModule -->\n\nCategoryComponent->IndexModule\n\n\n\n\n\nForumComponent\n\nForumComponent\n\nIndexModule -->\n\nForumComponent->IndexModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nIndexModule -->\n\nIndexComponent->IndexModule\n\n\n\n\n\nAdvertisementsComponent\n\nAdvertisementsComponent\n\nSharedModule -->\n\nAdvertisementsComponent->SharedModule\n\n\n\n\n\nChangelogComponent\n\nChangelogComponent\n\nSharedModule -->\n\nChangelogComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nSharedModule -->\n\nNavbarComponent->SharedModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nSharedModule -->\n\nRegisterComponent->SharedModule\n\n\n\n\n\nShorttopicsComponent\n\nShorttopicsComponent\n\nSharedModule -->\n\nShorttopicsComponent->SharedModule\n\n\n\n\n\nTopicComponent\n\nTopicComponent\n\nSharedModule -->\n\nTopicComponent->SharedModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            typeMap   (src/.../category.interface.ts)\n                        \n                        \n                            typeMap   (src/.../user.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/category.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"Category\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"description\", js: \"description\", typ: u(null, \"\") },\n        { json: \"position\", js: \"position\", typ: 0 },\n    ], false),\n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"User\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"name\", js: \"name\", typ: \"\" },\n        { json: \"nickname\", js: \"nickname\", typ: \"\" },\n        { json: \"mail\", js: \"mail\", typ: \"\" },\n        { json: \"password\", js: \"password\", typ: \"\" },\n        { json: \"sign\", js: \"sign\", typ: \"\" },\n        { json: \"location\", js: \"location\", typ: \"\" },\n        { json: \"picture\", js: \"picture\", typ: \"\" },\n        { json: \"registration_date\", js: \"registration_date\", typ: Date },\n        { json: \"last_visit\", js: \"last_visit\", typ: Date },\n        { json: \"id_language_fk\", js: \"id_language_fk\", typ: 0 },\n        { json: \"id_role_fk\", js: \"id_role_fk\", typ: 0 },\n        { json: \"id_country_fk\", js: \"id_country_fk\", typ: 0 },\n    ], false),\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
